{"abi":[{"type":"function","name":"execute","inputs":[{"name":"_callId","type":"bytes32","internalType":"bytes32"},{"name":"_actions","type":"tuple[]","internalType":"struct Action[]","components":[{"name":"to","type":"address","internalType":"address"},{"name":"value","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"}]},{"name":"_allowFailureMap","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bytes[]","internalType":"bytes[]"},{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"event","name":"Executed","inputs":[{"name":"actor","type":"address","indexed":true,"internalType":"address"},{"name":"callId","type":"bytes32","indexed":false,"internalType":"bytes32"},{"name":"actions","type":"tuple[]","indexed":false,"internalType":"struct Action[]","components":[{"name":"to","type":"address","internalType":"address"},{"name":"value","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"}]},{"name":"allowFailureMap","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"failureMap","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"execResults","type":"bytes[]","indexed":false,"internalType":"bytes[]"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"execute(bytes32,(address,uint256,bytes)[],uint256)":"c71bf324"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"actor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"callId\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"indexed\":false,\"internalType\":\"struct Action[]\",\"name\":\"actions\",\"type\":\"tuple[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"allowFailureMap\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"failureMap\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes[]\",\"name\":\"execResults\",\"type\":\"bytes[]\"}],\"name\":\"Executed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_callId\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Action[]\",\"name\":\"_actions\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"_allowFailureMap\",\"type\":\"uint256\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Aragon X - 2024\",\"custom:security-contact\":\"sirt@aragon.org\",\"events\":{\"Executed(address,bytes32,(address,uint256,bytes)[],uint256,uint256,bytes[])\":{\"details\":\"The value of `callId` is defined by the component/contract calling the execute function.      A `Plugin` implementation can use it, for example, as a nonce.\",\"params\":{\"actions\":\"The array of actions executed.\",\"actor\":\"The address of the caller.\",\"allowFailureMap\":\"The allow failure map encoding which actions are allowed to fail.\",\"callId\":\"The ID of the call.\",\"execResults\":\"The array with the results of the executed actions.\",\"failureMap\":\"The failure map encoding which actions have failed.\"}}},\"kind\":\"dev\",\"methods\":{\"execute(bytes32,(address,uint256,bytes)[],uint256)\":{\"params\":{\"_actions\":\"The array of actions.\",\"_allowFailureMap\":\"A bitmap allowing execution to succeed, even if individual actions might revert. If the bit at index `i` is 1, the execution succeeds even if the `i`th action reverts. A failure map value of 0 requires every action to not revert.\",\"_callId\":\"The ID of the call. The definition of the value of `callId` is up to the calling contract and can be used, e.g., as a nonce.\"},\"returns\":{\"_0\":\"The array of results obtained from the executed actions in `bytes`.\",\"_1\":\"The resulting failure map containing the actions have actually failed.\"}}},\"title\":\"IExecutor\",\"version\":1},\"userdoc\":{\"events\":{\"Executed(address,bytes32,(address,uint256,bytes)[],uint256,uint256,bytes[])\":{\"notice\":\"Emitted when a proposal is executed.\"}},\"kind\":\"user\",\"methods\":{\"execute(bytes32,(address,uint256,bytes)[],uint256)\":{\"notice\":\"Executes a list of actions. If a zero allow-failure map is provided, a failing action reverts the entire execution. If a non-zero allow-failure map is provided, allowed actions can fail without the entire call being reverted.\"}},\"notice\":\"The interface required for Executors within the Aragon App DAO framework.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/giorgilagidze/Desktop/work/osx/node_modules/@aragon/osx-commons-contracts/src/executors/IExecutor.sol\":\"IExecutor\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@aragon/=../../node_modules/@aragon/\",\":@ensdomains/=../../node_modules/@ensdomains/\",\":@openzeppelin/=../../node_modules/@openzeppelin/\",\":eth-gas-reporter/=../../node_modules/eth-gas-reporter/\",\":forge-std/=../../node_modules/forge-std/src/\",\":hardhat-deploy/=../../node_modules/hardhat-deploy/\",\":hardhat/=../../node_modules/hardhat/\"]},\"sources\":{\"/Users/giorgilagidze/Desktop/work/osx/node_modules/@aragon/osx-commons-contracts/src/executors/IExecutor.sol\":{\"keccak256\":\"0xca77e59fb9e78b41329d7bd8a8f120b4a14184c35443bccd428d93596755ca09\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://2c14ce402448bec0a8db654efb1c8a30069a7bda5e4ccf10cce59b18936b6fe0\",\"dweb:/ipfs/QmXoYPBGZPftewd71FHDyWJ94WLpXAChPnHbAWGpQVmNin\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.17+commit.8df45f5f"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"actor","type":"address","indexed":true},{"internalType":"bytes32","name":"callId","type":"bytes32","indexed":false},{"internalType":"struct Action[]","name":"actions","type":"tuple[]","components":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"indexed":false},{"internalType":"uint256","name":"allowFailureMap","type":"uint256","indexed":false},{"internalType":"uint256","name":"failureMap","type":"uint256","indexed":false},{"internalType":"bytes[]","name":"execResults","type":"bytes[]","indexed":false}],"type":"event","name":"Executed","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"_callId","type":"bytes32"},{"internalType":"struct Action[]","name":"_actions","type":"tuple[]","components":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}]},{"internalType":"uint256","name":"_allowFailureMap","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"execute","outputs":[{"internalType":"bytes[]","name":"","type":"bytes[]"},{"internalType":"uint256","name":"","type":"uint256"}]}],"devdoc":{"kind":"dev","methods":{"execute(bytes32,(address,uint256,bytes)[],uint256)":{"params":{"_actions":"The array of actions.","_allowFailureMap":"A bitmap allowing execution to succeed, even if individual actions might revert. If the bit at index `i` is 1, the execution succeeds even if the `i`th action reverts. A failure map value of 0 requires every action to not revert.","_callId":"The ID of the call. The definition of the value of `callId` is up to the calling contract and can be used, e.g., as a nonce."},"returns":{"_0":"The array of results obtained from the executed actions in `bytes`.","_1":"The resulting failure map containing the actions have actually failed."}}},"version":1},"userdoc":{"kind":"user","methods":{"execute(bytes32,(address,uint256,bytes)[],uint256)":{"notice":"Executes a list of actions. If a zero allow-failure map is provided, a failing action reverts the entire execution. If a non-zero allow-failure map is provided, allowed actions can fail without the entire call being reverted."}},"version":1}},"settings":{"remappings":["@aragon/=../../node_modules/@aragon/","@ensdomains/=../../node_modules/@ensdomains/","@openzeppelin/=../../node_modules/@openzeppelin/","eth-gas-reporter/=../../node_modules/eth-gas-reporter/","forge-std/=../../node_modules/forge-std/src/","hardhat-deploy/=../../node_modules/hardhat-deploy/","hardhat/=../../node_modules/hardhat/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"/Users/giorgilagidze/Desktop/work/osx/node_modules/@aragon/osx-commons-contracts/src/executors/IExecutor.sol":"IExecutor"},"evmVersion":"london","libraries":{}},"sources":{"/Users/giorgilagidze/Desktop/work/osx/node_modules/@aragon/osx-commons-contracts/src/executors/IExecutor.sol":{"keccak256":"0xca77e59fb9e78b41329d7bd8a8f120b4a14184c35443bccd428d93596755ca09","urls":["bzz-raw://2c14ce402448bec0a8db654efb1c8a30069a7bda5e4ccf10cce59b18936b6fe0","dweb:/ipfs/QmXoYPBGZPftewd71FHDyWJ94WLpXAChPnHbAWGpQVmNin"],"license":"AGPL-3.0-or-later"}},"version":1},"id":119}
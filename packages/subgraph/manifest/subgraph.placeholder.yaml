{{info}}
specVersion: 0.0.2
description: A template for Aragon subgraphs
repository: https://github.com/aragon/osx
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum/contract
    name: {{dataSources.DAORegistry.name}}
    network: {{network}}
    source:
      abi: DAORegistry
      address: '{{dataSources.DAORegistry.address}}'
      startBlock: {{dataSources.DAORegistry.startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - Dao
      abis:
        - name: ERC20
          file: $ARAGON_OSX_MODULE/artifacts/@openzeppelin/contracts/token/ERC20/ERC20.sol/ERC20.json
        - name: DAORegistry
          file: $ARAGON_OSX_MODULE/artifacts/src/framework/dao/DAORegistry.sol/DAORegistry.json
      eventHandlers:
        - event: DAORegistered(indexed address,indexed address,string)
          handler: handleDAORegistered
      file: ./src/registries/daoRegistry.ts
  - kind: ethereum/contract
    name: {{dataSources.PluginRepoRegistry.name}}
    network: {{network}}
    source:
      abi: PluginRepoRegistry
      address: '{{dataSources.PluginRepoRegistry.address}}'
      startBlock: {{dataSources.PluginRepoRegistry.startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - PluginRepo
      abis:        
        - name: PluginRepoRegistry
          file: $ARAGON_OSX_MODULE/artifacts/src/framework/plugin/repo/PluginRepoRegistry.sol/PluginRepoRegistry.json
      eventHandlers:
        - event: PluginRepoRegistered(string,address)
          handler: handlePluginRepoRegistered
      file: ./src/registries/pluginRepoRegistry.ts
  {{#dataSources.PluginSetupProcessors}}
  - kind: ethereum/contract
    name: {{name}}
    network: {{network}}
    source:
      abi: PluginSetupProcessor
      address: '{{address}}'
      startBlock: {{startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - PluginInstallation
        - PluginPreparation
        - PluginPermission
      abis:        
        - name: PluginSetupProcessor
          file: $ARAGON_OSX_MODULE/artifacts/src/framework/plugin/setup/PluginSetupProcessor.sol/PluginSetupProcessor.json
        - name: ERC20
          file: $ARAGON_OSX_MODULE/artifacts/@openzeppelin/contracts/token/ERC20/ERC20.sol/ERC20.json
        - name: ERC165
          file: $ARAGON_OSX_MODULE/artifacts/@openzeppelin/contracts/utils/introspection/ERC165.sol/ERC165.json
      eventHandlers:
        - event: InstallationPrepared(indexed address,indexed address,bytes32,indexed address,(uint8,uint16),bytes,address,(address[],(uint8,address,address,address,bytes32)[]))
          handler: handleInstallationPrepared
        - event: InstallationApplied(indexed address,indexed address,bytes32,bytes32)
          handler: handleInstallationApplied
        - event: UpdatePrepared(indexed address,indexed address,bytes32,indexed address,(uint8,uint16),(address,address[],bytes),(address[],(uint8,address,address,address,bytes32)[]),bytes)
          handler: handleUpdatePrepared
        - event: UpdateApplied(indexed address,indexed address,bytes32,bytes32)
          handler: handleUpdateApplied
        - event: UninstallationPrepared(indexed address,indexed address,bytes32,indexed address,(uint8,uint16),(address,address[],bytes),(uint8,address,address,address,bytes32)[])
          handler: handleUninstallationPrepared
        - event: UninstallationApplied(indexed address,indexed address,bytes32)
          handler: handleUninstallationApplied
      file: ./src/plugin/pluginSetupProcessor.ts
  {{/dataSources.PluginSetupProcessors}}
# templates
templates:
  # DAO
  # subscribing to both dao templates needs care to avoid duplication.
  # Below, the event signature for `Executed` differs slightly, so we can
  # safely define two separate handlers and the graph will index based on the
  # matching event.
  - name: DaoTemplateV1_0_0
    kind: ethereum/contract
    network: {{network}}
    source:
      abi: DAO
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      file: ./src/dao/dao_v1_0_0.ts
      entities:
        - Dao
      abis:
        - name: ERC20
          file: $ARAGON_OSX_MODULE/artifacts/@openzeppelin/contracts/token/ERC20/ERC20.sol/ERC20.json
        - name: ERC721
          file: $ARAGON_OSX_MODULE/artifacts/@openzeppelin/contracts/token/ERC721/ERC721.sol/ERC721.json
        - name: ERC1155
          file: $ARAGON_OSX_MODULE/artifacts/@openzeppelin/contracts/token/ERC1155/ERC1155.sol/ERC1155.json
        - name: ERC165
          file: $ARAGON_OSX_MODULE/artifacts/@openzeppelin/contracts/utils/introspection/ERC165.sol/ERC165.json
        - name: DAO
          file: $ARAGON_OSX_MODULE/../subgraph/abis/DAO_v1_0_0.json
        - name: CallbackHandler
          file: $ARAGON_OSX_MODULE/artifacts/src/core/utils/CallbackHandler.sol/CallbackHandler.json
      eventHandlers:
        - event: MetadataSet(bytes)
          handler: handleMetadataSet
        - event: CallbackReceived(address,indexed bytes4,bytes)
          handler: handleCallbackReceived
        - event: Deposited(indexed address,indexed address,uint256,string)
          handler: handleDeposited
        - event: NativeTokenDeposited(address,uint256)
          handler: handleNativeTokenDeposited
        - event: Executed(indexed address,bytes32,(address,uint256,bytes)[],uint256,bytes[])
          handler: handleExecuted
        - event: Granted(indexed bytes32,indexed address,address,indexed address,address)
          handler: handleGranted
        - event: Revoked(indexed bytes32,indexed address,address,indexed address)
          handler: handleRevoked
        - event: TrustedForwarderSet(address)
          handler: handleTrustedForwarderSet
        - event: StandardCallbackRegistered(bytes4,bytes4,bytes4)
          handler: handleStandardCallbackRegistered
        - event: NewURI(string)
          handler: handleNewURI
  - name: DaoTemplateV1_3_0
    kind: ethereum/contract
    network: {{network}}
    source:
      abi: DAO
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      file: ./src/dao/dao_v1_3_0.ts
      entities:
        - Dao
      abis:
        - name: DAO
          file: $ARAGON_OSX_MODULE/artifacts/src/core/dao/DAO.sol/DAO.json
        - name: ERC20
          file: $ARAGON_OSX_MODULE/artifacts/@openzeppelin/contracts/token/ERC20/ERC20.sol/ERC20.json
        - name: ERC721
          file: $ARAGON_OSX_MODULE/artifacts/@openzeppelin/contracts/token/ERC721/ERC721.sol/ERC721.json
        - name: ERC1155
          file: $ARAGON_OSX_MODULE/artifacts/@openzeppelin/contracts/token/ERC1155/ERC1155.sol/ERC1155.json
        - name: ERC165
          file: $ARAGON_OSX_MODULE/artifacts/@openzeppelin/contracts/utils/introspection/ERC165.sol/ERC165.json
        - name: CallbackHandler
          file: $ARAGON_OSX_MODULE/artifacts/src/core/utils/CallbackHandler.sol/CallbackHandler.json
      eventHandlers:
        - event: Executed(indexed address,bytes32,(address,uint256,bytes)[],uint256,uint256,bytes[])
          handler: handleExecuted
  # PluginRepo
  - name: PluginRepoTemplate
    kind: ethereum/contract
    network: {{network}}
    source:
      abi: PluginRepo
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      file: ./src/plugin/pluginRepo.ts
      entities:
        - PluginRepo
      abis:
        - name: PluginRepo
          file: $ARAGON_OSX_MODULE/artifacts/src/framework/plugin/repo/PluginRepo.sol/PluginRepo.json
      eventHandlers:
        - event: VersionCreated(uint8,uint16,indexed address,bytes)
          handler: handleVersionCreated
        - event: ReleaseMetadataUpdated(uint8,bytes)
          handler: handleReleaseMetadataUpdated
        - event: Granted(indexed bytes32,indexed address,address,indexed address,address)
          handler: handleGranted
        - event: Revoked(indexed bytes32,indexed address,address,indexed address)
          handler: handleGranted
        

    /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/tokens/GovernanceERC20.sol":1245:4326  contract GovernanceERC20 is... */
  mstore(0x40, 0x80)
    /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/tokens/GovernanceERC20.sol":1666:1815  constructor(... */
  callvalue
  dup1
  iszero
  tag_1
  jumpi
  0x00
  dup1
  revert
tag_1:
  pop
  mload(0x40)
  sub(codesize, bytecodeSize)
  dup1
  bytecodeSize
  dup4
  codecopy
  dup2
  add
  0x40
  dup2
  swap1
  mstore
  tag_2
  swap2
  tag_3
  jump	// in
tag_2:
    /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/tokens/GovernanceERC20.sol":1776:1808  initialize(_dao, _name, _symbol) */
  tag_6
    /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/tokens/GovernanceERC20.sol":1787:1791  _dao */
  dup4
    /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/tokens/GovernanceERC20.sol":1793:1798  _name */
  dup4
    /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/tokens/GovernanceERC20.sol":1800:1807  _symbol */
  dup4
    /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/tokens/GovernanceERC20.sol":1776:1786  initialize */
  tag_7
    /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/tokens/GovernanceERC20.sol":1776:1808  initialize(_dao, _name, _symbol) */
  jump	// in
tag_6:
    /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/tokens/GovernanceERC20.sol":1666:1815  constructor(... */
  pop
  pop
  pop
    /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/tokens/GovernanceERC20.sol":1245:4326  contract GovernanceERC20 is... */
  jump(tag_71)
    /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/tokens/GovernanceERC20.sol":2010:2272  function initialize(... */
tag_7:
    /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3111:3130  bool isTopLevelCall */
  0x00
    /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3134:3147  _initializing */
  sload
  0x0100
  swap1
  div
  0xff
  and
    /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3133:3147  !_initializing */
  iszero
  dup1
    /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3179:3213  isTopLevelCall && _initialized < 1 */
  dup1
  iszero
  tag_10
  jumpi
  pop
    /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3197:3209  _initialized */
  sload(0x00)
    /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3212:3213  1 */
  0x01
    /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3197:3209  _initialized */
  0xff
  swap1
  swap2
  and
    /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3197:3213  _initialized < 1 */
  lt
    /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3179:3213  isTopLevelCall && _initialized < 1 */
tag_10:
    /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3178:3286  (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1) */
  dup1
  tag_14
  jumpi
  pop
    /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3220:3264  AddressUpgradeable.isContract(address(this)) */
  tag_12
    /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3258:3262  this */
  address
    /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3220:3249  AddressUpgradeable.isContract */
  or(tag_0_151, shl(0x20, tag_13))
    /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3220:3264  AddressUpgradeable.isContract(address(this)) */
  0x20
  shr
  jump	// in
tag_12:
    /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3219:3264  !AddressUpgradeable.isContract(address(this)) */
  iszero
    /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3219:3285  !AddressUpgradeable.isContract(address(this)) && _initialized == 1 */
  dup1
  iszero
  tag_14
  jumpi
  pop
    /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3268:3280  _initialized */
  and(0xff, sload(0x00))
  0x01
    /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3268:3285  _initialized == 1 */
  eq
    /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3219:3285  !AddressUpgradeable.isContract(address(this)) && _initialized == 1 */
tag_14:
    /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3157:3358  require(... */
  tag_15
  jumpi
  mload(0x40)
  shl(0xe5, 0x461bcd)
  dup2
  mstore
    /* "#utility.yul":1972:1974   */
  0x20
    /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3157:3358  require(... */
  0x04
  dup3
  add
    /* "#utility.yul":1954:1975   */
  mstore
    /* "#utility.yul":2011:2013   */
  0x2e
    /* "#utility.yul":1991:2009   */
  0x24
  dup3
  add
    /* "#utility.yul":1984:2014   */
  mstore
    /* "#utility.yul":2050:2084   */
  0x496e697469616c697a61626c653a20636f6e747261637420697320616c726561
    /* "#utility.yul":2030:2048   */
  0x44
  dup3
  add
    /* "#utility.yul":2023:2085   */
  mstore
  shl(0x92, 0x191e481a5b9a5d1a585b1a5e9959)
    /* "#utility.yul":2101:2119   */
  0x64
  dup3
  add
    /* "#utility.yul":2094:2138   */
  mstore
    /* "#utility.yul":2155:2174   */
  0x84
  add
    /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3157:3358  require(... */
tag_16:
  mload(0x40)
  dup1
  swap2
  sub
  swap1
  revert
tag_15:
    /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3368:3380  _initialized */
  0x00
    /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3368:3384  _initialized = 1 */
  dup1
  sload
  not(0xff)
  and
    /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3383:3384  1 */
  0x01
    /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3368:3384  _initialized = 1 */
  or
  swap1
  sstore
    /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3394:3459  if (isTopLevelCall) {... */
  dup1
  iszero
  tag_18
  jumpi
    /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3428:3441  _initializing */
  0x00
    /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3428:3448  _initializing = true */
  dup1
  sload
  not(0xff00)
  and
  0x0100
  or
  swap1
  sstore
    /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3394:3459  if (isTopLevelCall) {... */
tag_18:
    /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/tokens/GovernanceERC20.sol":2147:2175  __ERC20_init(_name, _symbol) */
  tag_20
    /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/tokens/GovernanceERC20.sol":2160:2165  _name */
  dup4
    /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/tokens/GovernanceERC20.sol":2167:2174  _symbol */
  dup4
    /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/tokens/GovernanceERC20.sol":2147:2159  __ERC20_init */
  tag_21
    /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/tokens/GovernanceERC20.sol":2147:2175  __ERC20_init(_name, _symbol) */
  jump	// in
tag_20:
    /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/tokens/GovernanceERC20.sol":2185:2210  __ERC20Permit_init(_name) */
  tag_22
    /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/tokens/GovernanceERC20.sol":2204:2209  _name */
  dup4
    /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/tokens/GovernanceERC20.sol":2185:2203  __ERC20Permit_init */
  tag_23
    /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/tokens/GovernanceERC20.sol":2185:2210  __ERC20Permit_init(_name) */
  jump	// in
tag_22:
    /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/tokens/GovernanceERC20.sol":2220:2265  __DaoAuthorizableUpgradeable_init(IDAO(_dao)) */
  tag_24
    /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/tokens/GovernanceERC20.sol":2259:2263  _dao */
  dup5
    /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/tokens/GovernanceERC20.sol":2220:2253  __DaoAuthorizableUpgradeable_init */
  tag_25
    /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/tokens/GovernanceERC20.sol":2220:2265  __DaoAuthorizableUpgradeable_init(IDAO(_dao)) */
  jump	// in
tag_24:
    /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3483:3497  isTopLevelCall */
  dup1
    /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3479:3578  if (isTopLevelCall) {... */
  iszero
  tag_26
  jumpi
    /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3529:3534  false */
  0x00
    /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3513:3534  _initializing = false */
  dup1
  sload
  not(0xff00)
  and
  swap1
  sstore
    /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3553:3567  Initialized(1) */
  mload(0x40)
  0x01
    /* "#utility.yul":2337:2373   */
  dup2
  mstore
    /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3553:3567  Initialized(1) */
  0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498
  swap1
    /* "#utility.yul":2325:2327   */
  0x20
    /* "#utility.yul":2310:2328   */
  add
    /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3553:3567  Initialized(1) */
  mload(0x40)
  dup1
  swap2
  sub
  swap1
  log1
    /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3479:3578  if (isTopLevelCall) {... */
tag_26:
    /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3101:3584  {... */
  pop
    /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/tokens/GovernanceERC20.sol":2010:2272  function initialize(... */
  pop
  pop
  pop
  jump	// out
    /* "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":1186:1506  function isContract(address account) internal view returns (bool) {... */
tag_13:
  sub(shl(0xa0, 0x01), 0x01)
    /* "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":1476:1495  account.code.length */
  and
  extcodesize
    /* "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":1476:1499  account.code.length > 0 */
  iszero
  iszero
  swap1
    /* "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":1186:1506  function isContract(address account) internal view returns (bool) {... */
  jump	// out
    /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":2116:2263  function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {... */
tag_21:
    /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":4910:4923  _initializing */
  sload(0x00)
  0x0100
  swap1
  div
  0xff
  and
    /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":4902:4971  require(_initializing, "Initializable: contract is not initializing") */
  tag_31
  jumpi
  mload(0x40)
  shl(0xe5, 0x461bcd)
  dup2
  mstore
    /* "#utility.yul":2586:2588   */
  0x20
    /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":4902:4971  require(_initializing, "Initializable: contract is not initializing") */
  0x04
  dup3
  add
    /* "#utility.yul":2568:2589   */
  mstore
    /* "#utility.yul":2625:2627   */
  0x2b
    /* "#utility.yul":2605:2623   */
  0x24
  dup3
  add
    /* "#utility.yul":2598:2628   */
  mstore
  0x00
  dup1
  mload
  0x20
  data_86df7b65acc769d25df427a1407864eedfd1665662c2a33bf72f9ceebdc4d21e
  dup4
  codecopy
  dup2
  mload
  swap2
  mstore
    /* "#utility.yul":2644:2662   */
  0x44
  dup3
  add
    /* "#utility.yul":2637:2699   */
  mstore
  shl(0xa8, 0x6e697469616c697a696e67)
    /* "#utility.yul":2715:2733   */
  0x64
  dup3
  add
    /* "#utility.yul":2708:2749   */
  mstore
    /* "#utility.yul":2766:2785   */
  0x84
  add
    /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":4902:4971  require(_initializing, "Initializable: contract is not initializing") */
  tag_16
    /* "#utility.yul":2384:2791   */
  jump
    /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":4902:4971  require(_initializing, "Initializable: contract is not initializing") */
tag_31:
    /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":2218:2256  __ERC20_init_unchained(name_, symbol_) */
  tag_35
    /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":2241:2246  name_ */
  dup3
    /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":2248:2255  symbol_ */
  dup3
    /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":2218:2240  __ERC20_init_unchained */
  tag_36
    /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":2218:2256  __ERC20_init_unchained(name_, symbol_) */
  jump	// in
tag_35:
    /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":2116:2263  function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {... */
  pop
  pop
  jump	// out
    /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol":2061:2186  function __ERC20Permit_init(string memory name) internal onlyInitializing {... */
tag_23:
    /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":4910:4923  _initializing */
  sload(0x00)
  0x0100
  swap1
  div
  0xff
  and
    /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":4902:4971  require(_initializing, "Initializable: contract is not initializing") */
  tag_38
  jumpi
  mload(0x40)
  shl(0xe5, 0x461bcd)
  dup2
  mstore
    /* "#utility.yul":2586:2588   */
  0x20
    /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":4902:4971  require(_initializing, "Initializable: contract is not initializing") */
  0x04
  dup3
  add
    /* "#utility.yul":2568:2589   */
  mstore
    /* "#utility.yul":2625:2627   */
  0x2b
    /* "#utility.yul":2605:2623   */
  0x24
  dup3
  add
    /* "#utility.yul":2598:2628   */
  mstore
  0x00
  dup1
  mload
  0x20
  data_86df7b65acc769d25df427a1407864eedfd1665662c2a33bf72f9ceebdc4d21e
  dup4
  codecopy
  dup2
  mload
  swap2
  mstore
    /* "#utility.yul":2644:2662   */
  0x44
  dup3
  add
    /* "#utility.yul":2637:2699   */
  mstore
  shl(0xa8, 0x6e697469616c697a696e67)
    /* "#utility.yul":2715:2733   */
  0x64
  dup3
  add
    /* "#utility.yul":2708:2749   */
  mstore
    /* "#utility.yul":2766:2785   */
  0x84
  add
    /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":4902:4971  require(_initializing, "Initializable: contract is not initializing") */
  tag_16
    /* "#utility.yul":2384:2791   */
  jump
    /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":4902:4971  require(_initializing, "Initializable: contract is not initializing") */
tag_38:
    /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol":2145:2179  __EIP712_init_unchained(name, "1") */
  tag_41
    /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol":2169:2173  name */
  dup2
    /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol":2145:2179  __EIP712_init_unchained(name, "1") */
  mload(0x40)
  dup1
  0x40
  add
  0x40
  mstore
  dup1
  0x01
  dup2
  mstore
  0x20
  add
  shl(0xf8, 0x31)
  dup2
  mstore
  pop
    /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol":2145:2168  __EIP712_init_unchained */
  shl(0x20, tag_42)
    /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol":2145:2179  __EIP712_init_unchained(name, "1") */
  0x20
  shr
  jump	// in
tag_41:
    /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol":2061:2186  function __ERC20Permit_init(string memory name) internal onlyInitializing {... */
  pop
  jump	// out
    /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/core/component/DaoAuthorizableUpgradeable.sol":953:1060  function __DaoAuthorizableUpgradeable_init(IDAO _dao) internal onlyInitializing {... */
tag_25:
    /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":4910:4923  _initializing */
  sload(0x00)
  0x0100
  swap1
  div
  0xff
  and
    /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":4902:4971  require(_initializing, "Initializable: contract is not initializing") */
  tag_44
  jumpi
  mload(0x40)
  shl(0xe5, 0x461bcd)
  dup2
  mstore
    /* "#utility.yul":2586:2588   */
  0x20
    /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":4902:4971  require(_initializing, "Initializable: contract is not initializing") */
  0x04
  dup3
  add
    /* "#utility.yul":2568:2589   */
  mstore
    /* "#utility.yul":2625:2627   */
  0x2b
    /* "#utility.yul":2605:2623   */
  0x24
  dup3
  add
    /* "#utility.yul":2598:2628   */
  mstore
  0x00
  dup1
  mload
  0x20
  data_86df7b65acc769d25df427a1407864eedfd1665662c2a33bf72f9ceebdc4d21e
  dup4
  codecopy
  dup2
  mload
  swap2
  mstore
    /* "#utility.yul":2644:2662   */
  0x44
  dup3
  add
    /* "#utility.yul":2637:2699   */
  mstore
  shl(0xa8, 0x6e697469616c697a696e67)
    /* "#utility.yul":2715:2733   */
  0x64
  dup3
  add
    /* "#utility.yul":2708:2749   */
  mstore
    /* "#utility.yul":2766:2785   */
  0x84
  add
    /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":4902:4971  require(_initializing, "Initializable: contract is not initializing") */
  tag_16
    /* "#utility.yul":2384:2791   */
  jump
    /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":4902:4971  require(_initializing, "Initializable: contract is not initializing") */
tag_44:
    /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/core/component/DaoAuthorizableUpgradeable.sol":1043:1046  dao */
  0x0130
    /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/core/component/DaoAuthorizableUpgradeable.sol":1043:1053  dao = _dao */
  dup1
  sload
  not(sub(shl(0xa0, 0x01), 0x01))
  and
  sub(shl(0xa0, 0x01), 0x01)
  swap3
  swap1
  swap3
  and
  swap2
  swap1
  swap2
  or
  swap1
  sstore
    /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/core/component/DaoAuthorizableUpgradeable.sol":953:1060  function __DaoAuthorizableUpgradeable_init(IDAO _dao) internal onlyInitializing {... */
  jump	// out
    /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":2269:2428  function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {... */
tag_36:
    /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":4910:4923  _initializing */
  sload(0x00)
  0x0100
  swap1
  div
  0xff
  and
    /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":4902:4971  require(_initializing, "Initializable: contract is not initializing") */
  tag_48
  jumpi
  mload(0x40)
  shl(0xe5, 0x461bcd)
  dup2
  mstore
    /* "#utility.yul":2586:2588   */
  0x20
    /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":4902:4971  require(_initializing, "Initializable: contract is not initializing") */
  0x04
  dup3
  add
    /* "#utility.yul":2568:2589   */
  mstore
    /* "#utility.yul":2625:2627   */
  0x2b
    /* "#utility.yul":2605:2623   */
  0x24
  dup3
  add
    /* "#utility.yul":2598:2628   */
  mstore
  0x00
  dup1
  mload
  0x20
  data_86df7b65acc769d25df427a1407864eedfd1665662c2a33bf72f9ceebdc4d21e
  dup4
  codecopy
  dup2
  mload
  swap2
  mstore
    /* "#utility.yul":2644:2662   */
  0x44
  dup3
  add
    /* "#utility.yul":2637:2699   */
  mstore
  shl(0xa8, 0x6e697469616c697a696e67)
    /* "#utility.yul":2715:2733   */
  0x64
  dup3
  add
    /* "#utility.yul":2708:2749   */
  mstore
    /* "#utility.yul":2766:2785   */
  0x84
  add
    /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":4902:4971  require(_initializing, "Initializable: contract is not initializing") */
  tag_16
    /* "#utility.yul":2384:2791   */
  jump
    /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":4902:4971  require(_initializing, "Initializable: contract is not initializing") */
tag_48:
    /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":2381:2394  _name = name_ */
  dup2
  mload
  tag_51
  swap1
    /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":2381:2386  _name */
  0x68
  swap1
    /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":2381:2394  _name = name_ */
  0x20
  dup6
  add
  swap1
  tag_52
  jump	// in
tag_51:
  pop
    /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":2404:2421  _symbol = symbol_ */
  dup1
  mload
  tag_53
  swap1
    /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":2404:2411  _symbol */
  0x69
  swap1
    /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":2404:2421  _symbol = symbol_ */
  0x20
  dup5
  add
  swap1
  tag_52
  jump	// in
tag_53:
  pop
    /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":2269:2428  function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {... */
  pop
  pop
  jump	// out
    /* "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol":2459:2756  function __EIP712_init_unchained(string memory name, string memory version) internal onlyInitializing {... */
tag_42:
    /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":4910:4923  _initializing */
  sload(0x00)
  0x0100
  swap1
  div
  0xff
  and
    /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":4902:4971  require(_initializing, "Initializable: contract is not initializing") */
  tag_55
  jumpi
  mload(0x40)
  shl(0xe5, 0x461bcd)
  dup2
  mstore
    /* "#utility.yul":2586:2588   */
  0x20
    /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":4902:4971  require(_initializing, "Initializable: contract is not initializing") */
  0x04
  dup3
  add
    /* "#utility.yul":2568:2589   */
  mstore
    /* "#utility.yul":2625:2627   */
  0x2b
    /* "#utility.yul":2605:2623   */
  0x24
  dup3
  add
    /* "#utility.yul":2598:2628   */
  mstore
  0x00
  dup1
  mload
  0x20
  data_86df7b65acc769d25df427a1407864eedfd1665662c2a33bf72f9ceebdc4d21e
  dup4
  codecopy
  dup2
  mload
  swap2
  mstore
    /* "#utility.yul":2644:2662   */
  0x44
  dup3
  add
    /* "#utility.yul":2637:2699   */
  mstore
  shl(0xa8, 0x6e697469616c697a696e67)
    /* "#utility.yul":2715:2733   */
  0x64
  dup3
  add
    /* "#utility.yul":2708:2749   */
  mstore
    /* "#utility.yul":2766:2785   */
  0x84
  add
    /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":4902:4971  require(_initializing, "Initializable: contract is not initializing") */
  tag_16
    /* "#utility.yul":2384:2791   */
  jump
    /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":4902:4971  require(_initializing, "Initializable: contract is not initializing") */
tag_55:
    /* "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol":2592:2614  keccak256(bytes(name)) */
  dup2
  mload
  0x20
  swap3
  dup4
  add
  keccak256
    /* "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol":2648:2673  keccak256(bytes(version)) */
  dup2
  mload
  swap2
  swap1
  swap3
  add
  keccak256
    /* "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol":2683:2695  _HASHED_NAME */
  0x97
    /* "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol":2683:2708  _HASHED_NAME = hashedName */
  swap2
  swap1
  swap2
  sstore
    /* "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol":2718:2733  _HASHED_VERSION */
  0x98
    /* "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol":2718:2749  _HASHED_VERSION = hashedVersion */
  sstore
    /* "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol":2459:2756  function __EIP712_init_unchained(string memory name, string memory version) internal onlyInitializing {... */
  jump	// out
    /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/tokens/GovernanceERC20.sol":1245:4326  contract GovernanceERC20 is... */
tag_52:
  dup3
  dup1
  sload
  tag_58
  swap1
  tag_59
  jump	// in
tag_58:
  swap1
  0x00
  mstore
  keccak256(0x00, 0x20)
  swap1
  0x1f
  add
  0x20
  swap1
  div
  dup2
  add
  swap3
  dup3
  tag_61
  jumpi
  0x00
  dup6
  sstore
  jump(tag_64)
tag_61:
  dup3
  0x1f
  lt
  tag_62
  jumpi
  dup1
  mload
  not(0xff)
  and
  dup4
  dup1
  add
  or
  dup6
  sstore
  jump(tag_64)
tag_62:
  dup3
  dup1
  add
  0x01
  add
  dup6
  sstore
  dup3
  iszero
  tag_64
  jumpi
  swap2
  dup3
  add
tag_63:
  dup3
  dup2
  gt
  iszero
  tag_64
  jumpi
  dup3
  mload
  dup3
  sstore
  swap2
  0x20
  add
  swap2
  swap1
  0x01
  add
  swap1
  jump(tag_63)
tag_64:
  pop
  tag_65
  swap3
  swap2
  pop
  tag_66
  jump	// in
tag_65:
  pop
  swap1
  jump	// out
tag_66:
tag_67:
  dup1
  dup3
  gt
  iszero
  tag_65
  jumpi
  0x00
  dup2
  sstore
  0x01
  add
  jump(tag_67)
    /* "#utility.yul":14:141   */
tag_69:
    /* "#utility.yul":75:85   */
  0x4e487b71
    /* "#utility.yul":70:73   */
  0xe0
    /* "#utility.yul":66:86   */
  shl
    /* "#utility.yul":63:64   */
  0x00
    /* "#utility.yul":56:87   */
  mstore
    /* "#utility.yul":106:110   */
  0x41
    /* "#utility.yul":103:104   */
  0x04
    /* "#utility.yul":96:111   */
  mstore
    /* "#utility.yul":130:134   */
  0x24
    /* "#utility.yul":127:128   */
  0x00
    /* "#utility.yul":120:135   */
  revert
    /* "#utility.yul":146:1031   */
tag_70:
    /* "#utility.yul":200:205   */
  0x00
    /* "#utility.yul":253:256   */
  dup3
    /* "#utility.yul":246:250   */
  0x1f
    /* "#utility.yul":238:244   */
  dup4
    /* "#utility.yul":234:251   */
  add
    /* "#utility.yul":230:257   */
  slt
    /* "#utility.yul":220:275   */
  tag_74
  jumpi
    /* "#utility.yul":271:272   */
  0x00
    /* "#utility.yul":268:269   */
  dup1
    /* "#utility.yul":261:273   */
  revert
    /* "#utility.yul":220:275   */
tag_74:
    /* "#utility.yul":294:307   */
  dup2
  mload
  sub(shl(0x40, 0x01), 0x01)
    /* "#utility.yul":356:366   */
  dup1
  dup3
  gt
    /* "#utility.yul":353:389   */
  iszero
  tag_76
  jumpi
    /* "#utility.yul":369:387   */
  tag_76
  tag_69
  jump	// in
tag_76:
    /* "#utility.yul":444:446   */
  0x40
    /* "#utility.yul":438:447   */
  mload
    /* "#utility.yul":412:414   */
  0x1f
    /* "#utility.yul":498:511   */
  dup4
  add
  not(0x1f)
    /* "#utility.yul":494:516   */
  swap1
  dup2
  and
    /* "#utility.yul":518:520   */
  0x3f
    /* "#utility.yul":490:521   */
  add
    /* "#utility.yul":486:526   */
  and
    /* "#utility.yul":474:527   */
  dup2
  add
  swap1
    /* "#utility.yul":542:560   */
  dup3
  dup3
  gt
    /* "#utility.yul":562:584   */
  dup2
  dup4
  lt
    /* "#utility.yul":539:585   */
  or
    /* "#utility.yul":536:608   */
  iszero
  tag_78
  jumpi
    /* "#utility.yul":588:606   */
  tag_78
  tag_69
  jump	// in
tag_78:
    /* "#utility.yul":628:638   */
  dup2
    /* "#utility.yul":624:626   */
  0x40
    /* "#utility.yul":617:639   */
  mstore
    /* "#utility.yul":663:665   */
  dup4
    /* "#utility.yul":655:661   */
  dup2
    /* "#utility.yul":648:666   */
  mstore
    /* "#utility.yul":685:689   */
  0x20
    /* "#utility.yul":675:689   */
  swap3
  pop
    /* "#utility.yul":730:733   */
  dup7
    /* "#utility.yul":725:727   */
  dup4
    /* "#utility.yul":720:722   */
  dup6
    /* "#utility.yul":712:718   */
  dup9
    /* "#utility.yul":708:723   */
  add
    /* "#utility.yul":704:728   */
  add
    /* "#utility.yul":701:734   */
  gt
    /* "#utility.yul":698:751   */
  iszero
  tag_79
  jumpi
    /* "#utility.yul":747:748   */
  0x00
    /* "#utility.yul":744:745   */
  dup1
    /* "#utility.yul":737:749   */
  revert
    /* "#utility.yul":698:751   */
tag_79:
    /* "#utility.yul":769:770   */
  0x00
    /* "#utility.yul":760:770   */
  swap2
  pop
    /* "#utility.yul":779:912   */
tag_80:
    /* "#utility.yul":793:795   */
  dup4
    /* "#utility.yul":790:791   */
  dup3
    /* "#utility.yul":787:796   */
  lt
    /* "#utility.yul":779:912   */
  iszero
  tag_82
  jumpi
    /* "#utility.yul":881:895   */
  dup6
  dup3
  add
    /* "#utility.yul":877:900   */
  dup4
  add
    /* "#utility.yul":871:901   */
  mload
    /* "#utility.yul":850:864   */
  dup2
  dup4
  add
    /* "#utility.yul":846:869   */
  dup5
  add
    /* "#utility.yul":839:902   */
  mstore
    /* "#utility.yul":804:814   */
  swap1
  dup3
  add
  swap1
    /* "#utility.yul":779:912   */
  jump(tag_80)
tag_82:
    /* "#utility.yul":930:932   */
  dup4
    /* "#utility.yul":927:928   */
  dup3
    /* "#utility.yul":924:933   */
  gt
    /* "#utility.yul":921:1001   */
  iszero
  tag_83
  jumpi
    /* "#utility.yul":989:990   */
  0x00
    /* "#utility.yul":984:986   */
  dup4
    /* "#utility.yul":979:981   */
  dup6
    /* "#utility.yul":971:977   */
  dup4
    /* "#utility.yul":967:982   */
  add
    /* "#utility.yul":963:987   */
  add
    /* "#utility.yul":956:991   */
  mstore
    /* "#utility.yul":921:1001   */
tag_83:
    /* "#utility.yul":1019:1025   */
  swap7
    /* "#utility.yul":146:1031   */
  swap6
  pop
  pop
  pop
  pop
  pop
  pop
  jump	// out
    /* "#utility.yul":1036:1765   */
tag_3:
    /* "#utility.yul":1144:1150   */
  0x00
    /* "#utility.yul":1152:1158   */
  dup1
    /* "#utility.yul":1160:1166   */
  0x00
    /* "#utility.yul":1213:1215   */
  0x60
    /* "#utility.yul":1201:1210   */
  dup5
    /* "#utility.yul":1192:1199   */
  dup7
    /* "#utility.yul":1188:1211   */
  sub
    /* "#utility.yul":1184:1216   */
  slt
    /* "#utility.yul":1181:1233   */
  iszero
  tag_85
  jumpi
    /* "#utility.yul":1229:1230   */
  0x00
    /* "#utility.yul":1226:1227   */
  dup1
    /* "#utility.yul":1219:1231   */
  revert
    /* "#utility.yul":1181:1233   */
tag_85:
    /* "#utility.yul":1255:1271   */
  dup4
  mload
  sub(shl(0xa0, 0x01), 0x01)
    /* "#utility.yul":1300:1331   */
  dup2
  and
    /* "#utility.yul":1290:1332   */
  dup2
  eq
    /* "#utility.yul":1280:1350   */
  tag_86
  jumpi
    /* "#utility.yul":1346:1347   */
  0x00
    /* "#utility.yul":1343:1344   */
  dup1
    /* "#utility.yul":1336:1348   */
  revert
    /* "#utility.yul":1280:1350   */
tag_86:
    /* "#utility.yul":1418:1420   */
  0x20
    /* "#utility.yul":1403:1421   */
  dup6
  add
    /* "#utility.yul":1397:1422   */
  mload
    /* "#utility.yul":1369:1374   */
  swap1
  swap4
  pop
  sub(shl(0x40, 0x01), 0x01)
    /* "#utility.yul":1471:1485   */
  dup1
  dup3
  gt
    /* "#utility.yul":1468:1502   */
  iszero
  tag_87
  jumpi
    /* "#utility.yul":1498:1499   */
  0x00
    /* "#utility.yul":1495:1496   */
  dup1
    /* "#utility.yul":1488:1500   */
  revert
    /* "#utility.yul":1468:1502   */
tag_87:
    /* "#utility.yul":1521:1582   */
  tag_88
    /* "#utility.yul":1574:1581   */
  dup8
    /* "#utility.yul":1565:1571   */
  dup4
    /* "#utility.yul":1554:1563   */
  dup9
    /* "#utility.yul":1550:1572   */
  add
    /* "#utility.yul":1521:1582   */
  tag_70
  jump	// in
tag_88:
    /* "#utility.yul":1511:1582   */
  swap4
  pop
    /* "#utility.yul":1628:1630   */
  0x40
    /* "#utility.yul":1617:1626   */
  dup7
    /* "#utility.yul":1613:1631   */
  add
    /* "#utility.yul":1607:1632   */
  mload
    /* "#utility.yul":1591:1632   */
  swap2
  pop
    /* "#utility.yul":1657:1659   */
  dup1
    /* "#utility.yul":1647:1655   */
  dup3
    /* "#utility.yul":1644:1660   */
  gt
    /* "#utility.yul":1641:1677   */
  iszero
  tag_89
  jumpi
    /* "#utility.yul":1673:1674   */
  0x00
    /* "#utility.yul":1670:1671   */
  dup1
    /* "#utility.yul":1663:1675   */
  revert
    /* "#utility.yul":1641:1677   */
tag_89:
  pop
    /* "#utility.yul":1696:1759   */
  tag_90
    /* "#utility.yul":1751:1758   */
  dup7
    /* "#utility.yul":1740:1748   */
  dup3
    /* "#utility.yul":1729:1738   */
  dup8
    /* "#utility.yul":1725:1749   */
  add
    /* "#utility.yul":1696:1759   */
  tag_70
  jump	// in
tag_90:
    /* "#utility.yul":1686:1759   */
  swap2
  pop
  pop
    /* "#utility.yul":1036:1765   */
  swap3
  pop
  swap3
  pop
  swap3
  jump	// out
    /* "#utility.yul":2796:3176   */
tag_59:
    /* "#utility.yul":2875:2876   */
  0x01
    /* "#utility.yul":2871:2883   */
  dup2
  dup2
  shr
  swap1
    /* "#utility.yul":2918:2930   */
  dup3
  and
  dup1
    /* "#utility.yul":2939:3000   */
  tag_95
  jumpi
    /* "#utility.yul":2993:2997   */
  0x7f
    /* "#utility.yul":2985:2991   */
  dup3
    /* "#utility.yul":2981:2998   */
  and
    /* "#utility.yul":2971:2998   */
  swap2
  pop
    /* "#utility.yul":2939:3000   */
tag_95:
    /* "#utility.yul":3046:3048   */
  0x20
    /* "#utility.yul":3038:3044   */
  dup3
    /* "#utility.yul":3035:3049   */
  lt
    /* "#utility.yul":3015:3033   */
  dup2
    /* "#utility.yul":3012:3050   */
  eq
    /* "#utility.yul":3009:3170   */
  iszero
  tag_96
  jumpi
    /* "#utility.yul":3092:3102   */
  0x4e487b71
    /* "#utility.yul":3087:3090   */
  0xe0
    /* "#utility.yul":3083:3103   */
  shl
    /* "#utility.yul":3080:3081   */
  0x00
    /* "#utility.yul":3073:3104   */
  mstore
    /* "#utility.yul":3127:3131   */
  0x22
    /* "#utility.yul":3124:3125   */
  0x04
    /* "#utility.yul":3117:3132   */
  mstore
    /* "#utility.yul":3155:3159   */
  0x24
    /* "#utility.yul":3152:3153   */
  0x00
    /* "#utility.yul":3145:3160   */
  revert
    /* "#utility.yul":3009:3170   */
tag_96:
  pop
    /* "#utility.yul":2796:3176   */
  swap2
  swap1
  pop
  jump	// out
tag_71:
    /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/tokens/GovernanceERC20.sol":1245:4326  contract GovernanceERC20 is... */
  dataSize(sub_0)
  dup1
  dataOffset(sub_0)
  0x00
  codecopy
  0x00
  return
stop
data_86df7b65acc769d25df427a1407864eedfd1665662c2a33bf72f9ceebdc4d21e 496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069

sub_0: assembly {
        /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/tokens/GovernanceERC20.sol":1245:4326  contract GovernanceERC20 is... */
      mstore(0x40, 0x80)
      callvalue
      dup1
      iszero
      tag_1
      jumpi
      0x00
      dup1
      revert
    tag_1:
      pop
      jumpi(tag_2, lt(calldatasize, 0x04))
      shr(0xe0, calldataload(0x00))
      dup1
      0x70a08231
      gt
      tag_30
      jumpi
      dup1
      0xa457c2d7
      gt
      tag_31
      jumpi
      dup1
      0xc3cda520
      gt
      tag_32
      jumpi
      dup1
      0xc3cda520
      eq
      tag_26
      jumpi
      dup1
      0xd505accf
      eq
      tag_27
      jumpi
      dup1
      0xdd62ed3e
      eq
      tag_28
      jumpi
      dup1
      0xf1127ed8
      eq
      tag_29
      jumpi
      0x00
      dup1
      revert
    tag_32:
      dup1
      0xa457c2d7
      eq
      tag_23
      jumpi
      dup1
      0xa9059cbb
      eq
      tag_24
      jumpi
      dup1
      0xb2d2989c
      eq
      tag_25
      jumpi
      0x00
      dup1
      revert
    tag_31:
      dup1
      0x90657147
      gt
      tag_33
      jumpi
      dup1
      0x90657147
      eq
      tag_19
      jumpi
      dup1
      0x95d89b41
      eq
      tag_20
      jumpi
      dup1
      0x985da726
      eq
      tag_21
      jumpi
      dup1
      0x9ab24eb0
      eq
      tag_22
      jumpi
      0x00
      dup1
      revert
    tag_33:
      dup1
      0x70a08231
      eq
      tag_16
      jumpi
      dup1
      0x7ecebe00
      eq
      tag_17
      jumpi
      dup1
      0x8e539e8c
      eq
      tag_18
      jumpi
      0x00
      dup1
      revert
    tag_30:
      dup1
      0x3644e515
      gt
      tag_34
      jumpi
      dup1
      0x40c10f19
      gt
      tag_35
      jumpi
      dup1
      0x40c10f19
      eq
      tag_12
      jumpi
      dup1
      0x587cde1e
      eq
      tag_13
      jumpi
      dup1
      0x5c19a95c
      eq
      tag_14
      jumpi
      dup1
      0x6fcfff45
      eq
      tag_15
      jumpi
      0x00
      dup1
      revert
    tag_35:
      dup1
      0x3644e515
      eq
      tag_9
      jumpi
      dup1
      0x39509351
      eq
      tag_10
      jumpi
      dup1
      0x3a46b1a8
      eq
      tag_11
      jumpi
      0x00
      dup1
      revert
    tag_34:
      dup1
      0x01ffc9a7
      eq
      tag_3
      jumpi
      dup1
      0x06fdde03
      eq
      tag_4
      jumpi
      dup1
      0x095ea7b3
      eq
      tag_5
      jumpi
      dup1
      0x18160ddd
      eq
      tag_6
      jumpi
      dup1
      0x23b872dd
      eq
      tag_7
      jumpi
      dup1
      0x313ce567
      eq
      tag_8
      jumpi
    tag_2:
      0x00
      dup1
      revert
        /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/tokens/GovernanceERC20.sol":2316:2691  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */
    tag_3:
      tag_36
      tag_37
      calldatasize
      0x04
      tag_38
      jump	// in
    tag_37:
      tag_39
      jump	// in
    tag_36:
      mload(0x40)
        /* "#utility.yul":470:484   */
      swap1
      iszero
        /* "#utility.yul":463:485   */
      iszero
        /* "#utility.yul":445:486   */
      dup2
      mstore
        /* "#utility.yul":433:435   */
      0x20
        /* "#utility.yul":418:436   */
      add
        /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/tokens/GovernanceERC20.sol":2316:2691  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */
    tag_40:
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":2493:2591  function name() public view virtual override returns (string memory) {... */
    tag_4:
      tag_42
      tag_43
      jump	// in
    tag_42:
      mload(0x40)
      tag_40
      swap2
      swap1
      tag_45
      jump	// in
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":4770:4967  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */
    tag_5:
      tag_36
      tag_47
      calldatasize
      0x04
      tag_48
      jump	// in
    tag_47:
      tag_49
      jump	// in
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":3581:3687  function totalSupply() public view virtual override returns (uint256) {... */
    tag_6:
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":3668:3680  _totalSupply */
      sload(0x67)
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":3581:3687  function totalSupply() public view virtual override returns (uint256) {... */
    tag_51:
      mload(0x40)
        /* "#utility.yul":1682:1707   */
      swap1
      dup2
      mstore
        /* "#utility.yul":1670:1672   */
      0x20
        /* "#utility.yul":1655:1673   */
      add
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":3581:3687  function totalSupply() public view virtual override returns (uint256) {... */
      tag_40
        /* "#utility.yul":1536:1713   */
      jump
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":5529:5815  function transferFrom(... */
    tag_7:
      tag_36
      tag_56
      calldatasize
      0x04
      tag_57
      jump	// in
    tag_56:
      tag_58
      jump	// in
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":3430:3521  function decimals() public view virtual override returns (uint8) {... */
    tag_8:
      mload(0x40)
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":3512:3514  18 */
      0x12
        /* "#utility.yul":2193:2229   */
      dup2
      mstore
        /* "#utility.yul":2181:2183   */
      0x20
        /* "#utility.yul":2166:2184   */
      add
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":3430:3521  function decimals() public view virtual override returns (uint8) {... */
      tag_40
        /* "#utility.yul":2051:2235   */
      jump
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol":3282:3395  function DOMAIN_SEPARATOR() external view override returns (bytes32) {... */
    tag_9:
      tag_51
      tag_65
      jump	// in
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":6210:6444  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */
    tag_10:
      tag_36
      tag_69
      calldatasize
      0x04
      tag_48
      jump	// in
    tag_69:
      tag_70
      jump	// in
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":3133:3398  function getPastVotes(address account, uint256 blockNumber) public view virtual override returns (uint256) {... */
    tag_11:
      tag_51
      tag_73
      calldatasize
      0x04
      tag_48
      jump	// in
    tag_73:
      tag_74
      jump	// in
        /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/tokens/GovernanceERC20.sol":2850:2960  function mint(address to, uint256 amount) external auth(MINT_PERMISSION_ID) {... */
    tag_12:
      tag_76
      tag_77
      calldatasize
      0x04
      tag_48
      jump	// in
    tag_77:
      tag_78
      jump	// in
    tag_76:
      stop
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":2526:2652  function delegates(address account) public view virtual override returns (address) {... */
    tag_13:
      tag_79
      tag_80
      calldatasize
      0x04
      tag_81
      jump	// in
    tag_80:
      tag_82
      jump	// in
    tag_79:
      mload(0x40)
      sub(shl(0xa0, 0x01), 0x01)
        /* "#utility.yul":2777:2809   */
      swap1
      swap2
      and
        /* "#utility.yul":2759:2810   */
      dup2
      mstore
        /* "#utility.yul":2747:2749   */
      0x20
        /* "#utility.yul":2732:2750   */
      add
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":2526:2652  function delegates(address account) public view virtual override returns (address) {... */
      tag_40
        /* "#utility.yul":2613:2816   */
      jump
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":5567:5679  function delegate(address delegatee) public virtual override {... */
    tag_14:
      tag_76
      tag_86
      calldatasize
      0x04
      tag_81
      jump	// in
    tag_86:
      tag_87
      jump	// in
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":2278:2438  function numCheckpoints(address account) public view virtual returns (uint32) {... */
    tag_15:
      tag_88
      tag_89
      calldatasize
      0x04
      tag_81
      jump	// in
    tag_89:
      tag_90
      jump	// in
    tag_88:
      mload(0x40)
        /* "#utility.yul":2995:3005   */
      0xffffffff
        /* "#utility.yul":2983:3006   */
      swap1
      swap2
      and
        /* "#utility.yul":2965:3007   */
      dup2
      mstore
        /* "#utility.yul":2953:2955   */
      0x20
        /* "#utility.yul":2938:2956   */
      add
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":2278:2438  function numCheckpoints(address account) public view virtual returns (uint32) {... */
      tag_40
        /* "#utility.yul":2821:3013   */
      jump
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":3745:3870  function balanceOf(address account) public view virtual override returns (uint256) {... */
    tag_16:
      tag_51
      tag_94
      calldatasize
      0x04
      tag_81
      jump	// in
    tag_94:
      sub(shl(0xa0, 0x01), 0x01)
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":3845:3863  _balances[account] */
      and
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":3819:3826  uint256 */
      0x00
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":3845:3863  _balances[account] */
      swap1
      dup2
      mstore
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":3845:3854  _balances */
      0x65
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":3845:3863  _balances[account] */
      0x20
      mstore
      0x40
      swap1
      keccak256
      sload
      swap1
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":3745:3870  function balanceOf(address account) public view virtual override returns (uint256) {... */
      jump
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol":3032:3158  function nonces(address owner) public view virtual override returns (uint256) {... */
    tag_17:
      tag_51
      tag_98
      calldatasize
      0x04
      tag_81
      jump	// in
    tag_98:
      tag_99
      jump	// in
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":3677:3933  function getPastTotalSupply(uint256 blockNumber) public view virtual override returns (uint256) {... */
    tag_18:
      tag_51
      tag_102
      calldatasize
      0x04
      tag_103
      jump	// in
    tag_102:
      tag_104
      jump	// in
        /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/tokens/GovernanceERC20.sol":2010:2272  function initialize(... */
    tag_19:
      tag_76
      tag_107
      calldatasize
      0x04
      tag_108
      jump	// in
    tag_107:
      tag_109
      jump	// in
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":2704:2806  function symbol() public view virtual override returns (string memory) {... */
    tag_20:
      tag_42
      tag_111
      jump	// in
        /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/core/component/DaoAuthorizableBase.sol":641:713  function getDAO() public view returns (IDAO) {... */
    tag_21:
        /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/core/component/DaoAuthorizableBase.sol":703:706  dao */
      and(sub(shl(0xa0, 0x01), 0x01), sload(0x0130))
        /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/core/component/DaoAuthorizableBase.sol":641:713  function getDAO() public view returns (IDAO) {... */
      jump(tag_79)
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":2731:2940  function getVotes(address account) public view virtual override returns (uint256) {... */
    tag_22:
      tag_51
      tag_118
      calldatasize
      0x04
      tag_81
      jump	// in
    tag_118:
      tag_119
      jump	// in
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":6931:7358  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */
    tag_23:
      tag_36
      tag_122
      calldatasize
      0x04
      tag_48
      jump	// in
    tag_122:
      tag_123
      jump	// in
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":4066:4255  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */
    tag_24:
      tag_36
      tag_126
      calldatasize
      0x04
      tag_48
      jump	// in
    tag_126:
      tag_127
      jump	// in
        /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/tokens/GovernanceERC20.sol":1440:1513  bytes32 public constant MINT_PERMISSION_ID = keccak256("MINT_PERMISSION") */
    tag_25:
      tag_51
        /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/tokens/GovernanceERC20.sol":1485:1513  keccak256("MINT_PERMISSION") */
      0xb737b436e6cc542520cb79ec04245c720c38eebfa56d9e2d99b043979db20e4c
        /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/tokens/GovernanceERC20.sol":1440:1513  bytes32 public constant MINT_PERMISSION_ID = keccak256("MINT_PERMISSION") */
      dup2
      jump
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":5756:6341  function delegateBySig(... */
    tag_26:
      tag_76
      tag_133
      calldatasize
      0x04
      tag_134
      jump	// in
    tag_133:
      tag_135
      jump	// in
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol":2334:2971  function permit(... */
    tag_27:
      tag_76
      tag_137
      calldatasize
      0x04
      tag_138
      jump	// in
    tag_137:
      tag_139
      jump	// in
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":4313:4462  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */
    tag_28:
      tag_51
      tag_141
      calldatasize
      0x04
      tag_142
      jump	// in
    tag_141:
      tag_143
      jump	// in
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":2055:2203  function checkpoints(address account, uint32 pos) public view virtual returns (Checkpoint memory) {... */
    tag_29:
      tag_145
      tag_146
      calldatasize
      0x04
      tag_147
      jump	// in
    tag_146:
      tag_148
      jump	// in
    tag_145:
      0x40
      dup1
      mload
        /* "#utility.yul":7052:7065   */
      dup3
      mload
        /* "#utility.yul":7067:7077   */
      0xffffffff
        /* "#utility.yul":7048:7078   */
      and
        /* "#utility.yul":7030:7079   */
      dup2
      mstore
        /* "#utility.yul":7139:7143   */
      0x20
        /* "#utility.yul":7127:7144   */
      swap3
      dup4
      add
        /* "#utility.yul":7121:7145   */
      mload
      sub(shl(0xe0, 0x01), 0x01)
        /* "#utility.yul":7117:7167   */
      and
        /* "#utility.yul":7095:7115   */
      swap3
      dup2
      add
        /* "#utility.yul":7088:7168   */
      swap3
      swap1
      swap3
      mstore
        /* "#utility.yul":7003:7021   */
      add
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":2055:2203  function checkpoints(address account, uint32 pos) public view virtual returns (Checkpoint memory) {... */
      tag_40
        /* "#utility.yul":6830:7174   */
      jump
        /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/tokens/GovernanceERC20.sol":2316:2691  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */
    tag_39:
        /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/tokens/GovernanceERC20.sol":2401:2405  bool */
      0x00
      not(sub(shl(0xe0, 0x01), 0x01))
        /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/tokens/GovernanceERC20.sol":2436:2486  interfaceId == type(IERC20Upgradeable).interfaceId */
      dup3
      and
      shl(0xe0, 0x36372b07)
      eq
      dup1
        /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/tokens/GovernanceERC20.sol":2436:2558  interfaceId == type(IERC20Upgradeable).interfaceId ||... */
      tag_153
      jumpi
      pop
      not(sub(shl(0xe0, 0x01), 0x01))
        /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/tokens/GovernanceERC20.sol":2502:2558  interfaceId == type(IERC20PermitUpgradeable).interfaceId */
      dup3
      and
      shl(0xe1, 0x4ec7fbed)
      eq
        /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/tokens/GovernanceERC20.sol":2436:2558  interfaceId == type(IERC20Upgradeable).interfaceId ||... */
    tag_153:
        /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/tokens/GovernanceERC20.sol":2436:2632  interfaceId == type(IERC20Upgradeable).interfaceId ||... */
      dup1
      tag_154
      jumpi
      pop
      not(sub(shl(0xe0, 0x01), 0x01))
        /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/tokens/GovernanceERC20.sol":2574:2632  interfaceId == type(IERC20MetadataUpgradeable).interfaceId */
      dup3
      and
      shl(0xe0, 0xa219a025)
      eq
        /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/tokens/GovernanceERC20.sol":2436:2632  interfaceId == type(IERC20Upgradeable).interfaceId ||... */
    tag_154:
        /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/tokens/GovernanceERC20.sol":2436:2684  interfaceId == type(IERC20Upgradeable).interfaceId ||... */
      dup1
      tag_156
      jumpi
      pop
      shl(0xe0, 0x01ffc9a7)
      not(sub(shl(0xe0, 0x01), 0x01))
        /* "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":1168:1219  interfaceId == type(IERC165Upgradeable).interfaceId */
      dup4
      and
      eq
        /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/tokens/GovernanceERC20.sol":2648:2684  super.supportsInterface(interfaceId) */
    tag_156:
        /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/tokens/GovernanceERC20.sol":2417:2684  return... */
      swap3
        /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/tokens/GovernanceERC20.sol":2316:2691  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */
      swap2
      pop
      pop
      jump	// out
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":2493:2591  function name() public view virtual override returns (string memory) {... */
    tag_43:
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":2547:2560  string memory */
      0x60
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":2579:2584  _name */
      0x68
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":2572:2584  return _name */
      dup1
      sload
      tag_159
      swap1
      tag_160
      jump	// in
    tag_159:
      dup1
      0x1f
      add
      0x20
      dup1
      swap2
      div
      mul
      0x20
      add
      mload(0x40)
      swap1
      dup2
      add
      0x40
      mstore
      dup1
      swap3
      swap2
      swap1
      dup2
      dup2
      mstore
      0x20
      add
      dup3
      dup1
      sload
      tag_161
      swap1
      tag_160
      jump	// in
    tag_161:
      dup1
      iszero
      tag_162
      jumpi
      dup1
      0x1f
      lt
      tag_163
      jumpi
      0x0100
      dup1
      dup4
      sload
      div
      mul
      dup4
      mstore
      swap2
      0x20
      add
      swap2
      jump(tag_162)
    tag_163:
      dup3
      add
      swap2
      swap1
      0x00
      mstore
      keccak256(0x00, 0x20)
      swap1
    tag_164:
      dup2
      sload
      dup2
      mstore
      swap1
      0x01
      add
      swap1
      0x20
      add
      dup1
      dup4
      gt
      tag_164
      jumpi
      dup3
      swap1
      sub
      0x1f
      and
      dup3
      add
      swap2
    tag_162:
      pop
      pop
      pop
      pop
      pop
      swap1
      pop
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":2493:2591  function name() public view virtual override returns (string memory) {... */
      swap1
      jump	// out
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":4770:4967  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */
    tag_49:
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":4853:4857  bool */
      0x00
        /* "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":929:939  msg.sender */
      caller
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":4907:4939  _approve(owner, spender, amount) */
      tag_168
        /* "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":929:939  msg.sender */
      dup2
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":4923:4930  spender */
      dup6
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":4932:4938  amount */
      dup6
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":4907:4915  _approve */
      tag_169
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":4907:4939  _approve(owner, spender, amount) */
      jump	// in
    tag_168:
      pop
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":4956:4960  true */
      0x01
      swap4
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":4770:4967  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */
      swap3
      pop
      pop
      pop
      jump	// out
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":5529:5815  function transferFrom(... */
    tag_58:
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":5656:5660  bool */
      0x00
        /* "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":929:939  msg.sender */
      caller
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":5712:5750  _spendAllowance(from, spender, amount) */
      tag_173
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":5728:5732  from */
      dup6
        /* "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":929:939  msg.sender */
      dup3
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":5743:5749  amount */
      dup6
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":5712:5727  _spendAllowance */
      tag_174
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":5712:5750  _spendAllowance(from, spender, amount) */
      jump	// in
    tag_173:
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":5760:5787  _transfer(from, to, amount) */
      tag_175
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":5770:5774  from */
      dup6
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":5776:5778  to */
      dup6
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":5780:5786  amount */
      dup6
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":5760:5769  _transfer */
      tag_176
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":5760:5787  _transfer(from, to, amount) */
      jump	// in
    tag_175:
      pop
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":5804:5808  true */
      0x01
      swap5
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":5529:5815  function transferFrom(... */
      swap4
      pop
      pop
      pop
      pop
      jump	// out
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol":3282:3395  function DOMAIN_SEPARATOR() external view override returns (bytes32) {... */
    tag_65:
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol":3342:3349  bytes32 */
      0x00
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol":3368:3388  _domainSeparatorV4() */
      tag_179
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol":3368:3386  _domainSeparatorV4 */
      tag_180
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol":3368:3388  _domainSeparatorV4() */
      jump	// in
    tag_179:
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol":3361:3388  return _domainSeparatorV4() */
      swap1
      pop
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol":3282:3395  function DOMAIN_SEPARATOR() external view override returns (bytes32) {... */
      swap1
      jump	// out
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":6210:6444  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */
    tag_70:
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":6298:6302  bool */
      0x00
        /* "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":929:939  msg.sender */
      caller
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":6352:6416  _approve(owner, spender, allowance(owner, spender) + addedValue) */
      tag_168
        /* "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":929:939  msg.sender */
      dup2
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":6368:6375  spender */
      dup6
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":6405:6415  addedValue */
      dup6
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":6377:6402  allowance(owner, spender) */
      tag_184
        /* "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":929:939  msg.sender */
      dup4
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":6368:6375  spender */
      dup4
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":6377:6386  allowance */
      tag_143
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":6377:6402  allowance(owner, spender) */
      jump	// in
    tag_184:
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":6377:6415  allowance(owner, spender) + addedValue */
      tag_185
      swap2
      swap1
      tag_186
      jump	// in
    tag_185:
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":6352:6360  _approve */
      tag_169
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":6352:6416  _approve(owner, spender, allowance(owner, spender) + addedValue) */
      jump	// in
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":3133:3398  function getPastVotes(address account, uint256 blockNumber) public view virtual override returns (uint256) {... */
    tag_74:
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":3231:3238  uint256 */
      0x00
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":3272:3284  block.number */
      number
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":3258:3269  blockNumber */
      dup3
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":3258:3284  blockNumber < block.number */
      lt
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":3250:3320  require(blockNumber < block.number, "ERC20Votes: block not yet mined") */
      tag_188
      jumpi
      mload(0x40)
      shl(0xe5, 0x461bcd)
      dup2
      mstore
        /* "#utility.yul":8031:8033   */
      0x20
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":3250:3320  require(blockNumber < block.number, "ERC20Votes: block not yet mined") */
      0x04
      dup3
      add
        /* "#utility.yul":8013:8034   */
      mstore
        /* "#utility.yul":8070:8072   */
      0x1f
        /* "#utility.yul":8050:8068   */
      0x24
      dup3
      add
        /* "#utility.yul":8043:8073   */
      mstore
        /* "#utility.yul":8109:8142   */
      0x4552433230566f7465733a20626c6f636b206e6f7420796574206d696e656400
        /* "#utility.yul":8089:8107   */
      0x44
      dup3
      add
        /* "#utility.yul":8082:8143   */
      mstore
        /* "#utility.yul":8160:8178   */
      0x64
      add
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":3250:3320  require(blockNumber < block.number, "ERC20Votes: block not yet mined") */
    tag_189:
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      revert
    tag_188:
      sub(shl(0xa0, 0x01), 0x01)
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":3356:3377  _checkpoints[account] */
      dup4
      and
      0x00
      swap1
      dup2
      mstore
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":3356:3368  _checkpoints */
      0xff
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":3356:3377  _checkpoints[account] */
      0x20
      mstore
      0x40
      swap1
      keccak256
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":3337:3391  _checkpointsLookup(_checkpoints[account], blockNumber) */
      tag_191
      swap1
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":3379:3390  blockNumber */
      dup4
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":3337:3355  _checkpointsLookup */
      tag_192
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":3337:3391  _checkpointsLookup(_checkpoints[account], blockNumber) */
      jump	// in
    tag_191:
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":3330:3391  return _checkpointsLookup(_checkpoints[account], blockNumber) */
      swap4
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":3133:3398  function getPastVotes(address account, uint256 blockNumber) public view virtual override returns (uint256) {... */
      swap3
      pop
      pop
      pop
      jump	// out
        /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/tokens/GovernanceERC20.sol":2850:2960  function mint(address to, uint256 amount) external auth(MINT_PERMISSION_ID) {... */
    tag_78:
        /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/core/component/DaoAuthorizableBase.sol":988:991  dao */
      sload(0x0130)
        /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/tokens/GovernanceERC20.sol":1485:1513  keccak256("MINT_PERMISSION") */
      0xb737b436e6cc542520cb79ec04245c720c38eebfa56d9e2d99b043979db20e4c
      swap1
        /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/core/component/DaoAuthorizableBase.sol":982:1048  _auth(dao, address(this), _msgSender(), _permissionId, _msgData()) */
      tag_194
      swap1
      sub(shl(0xa0, 0x01), 0x01)
        /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/core/component/DaoAuthorizableBase.sol":988:991  dao */
      and
        /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/core/component/DaoAuthorizableBase.sol":1001:1005  this */
      address
        /* "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":929:939  msg.sender */
      caller
        /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/core/component/DaoAuthorizableBase.sol":1022:1035  _permissionId */
      dup5
        /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/tokens/GovernanceERC20.sol":4251:4265  bytes calldata */
      0x00
      calldatasize
        /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/core/component/DaoAuthorizableBase.sol":982:987  _auth */
      tag_198
        /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/core/component/DaoAuthorizableBase.sol":982:1048  _auth(dao, address(this), _msgSender(), _permissionId, _msgData()) */
      jump	// in
    tag_194:
        /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/tokens/GovernanceERC20.sol":2936:2953  _mint(to, amount) */
      tag_200
        /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/tokens/GovernanceERC20.sol":2942:2944  to */
      dup4
        /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/tokens/GovernanceERC20.sol":2946:2952  amount */
      dup4
        /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/tokens/GovernanceERC20.sol":2936:2941  _mint */
      tag_201
        /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/tokens/GovernanceERC20.sol":2936:2953  _mint(to, amount) */
      jump	// in
    tag_200:
        /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/tokens/GovernanceERC20.sol":2850:2960  function mint(address to, uint256 amount) external auth(MINT_PERMISSION_ID) {... */
      pop
      pop
      pop
      jump	// out
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":2526:2652  function delegates(address account) public view virtual override returns (address) {... */
    tag_82:
      sub(shl(0xa0, 0x01), 0x01)
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":2626:2645  _delegates[account] */
      swap1
      dup2
      and
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":2600:2607  address */
      0x00
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":2626:2645  _delegates[account] */
      swap1
      dup2
      mstore
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":2626:2636  _delegates */
      0xfe
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":2626:2645  _delegates[account] */
      0x20
      mstore
      0x40
      swap1
      keccak256
      sload
      and
      swap1
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":2526:2652  function delegates(address account) public view virtual override returns (address) {... */
      jump	// out
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":5567:5679  function delegate(address delegatee) public virtual override {... */
    tag_87:
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":5638:5672  _delegate(_msgSender(), delegatee) */
      tag_204
        /* "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":929:939  msg.sender */
      caller
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":5662:5671  delegatee */
      dup3
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":5638:5647  _delegate */
      tag_206
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":5638:5672  _delegate(_msgSender(), delegatee) */
      jump	// in
    tag_204:
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":5567:5679  function delegate(address delegatee) public virtual override {... */
      pop
      jump	// out
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":2278:2438  function numCheckpoints(address account) public view virtual returns (uint32) {... */
    tag_90:
      sub(shl(0xa0, 0x01), 0x01)
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":2402:2423  _checkpoints[account] */
      dup2
      and
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":2348:2354  uint32 */
      0x00
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":2402:2423  _checkpoints[account] */
      swap1
      dup2
      mstore
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":2402:2414  _checkpoints */
      0xff
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":2402:2423  _checkpoints[account] */
      0x20
      mstore
      0x40
      dup2
      keccak256
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":2402:2430  _checkpoints[account].length */
      sload
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":2373:2431  SafeCastUpgradeable.toUint32(_checkpoints[account].length) */
      tag_156
      swap1
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":2373:2401  SafeCastUpgradeable.toUint32 */
      tag_209
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":2373:2431  SafeCastUpgradeable.toUint32(_checkpoints[account].length) */
      jump	// in
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol":3032:3158  function nonces(address owner) public view virtual override returns (uint256) {... */
    tag_99:
      sub(shl(0xa0, 0x01), 0x01)
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol":3127:3141  _nonces[owner] */
      dup2
      and
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol":3101:3108  uint256 */
      0x00
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol":3127:3141  _nonces[owner] */
      swap1
      dup2
      mstore
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol":3127:3134  _nonces */
      0xcb
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol":3127:3141  _nonces[owner] */
      0x20
      mstore
      0x40
      dup2
      keccak256
        /* "@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol":929:943  counter._value */
      sload
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol":3127:3151  _nonces[owner].current() */
      tag_156
        /* "@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol":838:950  function current(Counter storage counter) internal view returns (uint256) {... */
      jump
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":3677:3933  function getPastTotalSupply(uint256 blockNumber) public view virtual override returns (uint256) {... */
    tag_104:
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":3764:3771  uint256 */
      0x00
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":3805:3817  block.number */
      number
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":3791:3802  blockNumber */
      dup3
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":3791:3817  blockNumber < block.number */
      lt
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":3783:3853  require(blockNumber < block.number, "ERC20Votes: block not yet mined") */
      tag_215
      jumpi
      mload(0x40)
      shl(0xe5, 0x461bcd)
      dup2
      mstore
        /* "#utility.yul":8031:8033   */
      0x20
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":3783:3853  require(blockNumber < block.number, "ERC20Votes: block not yet mined") */
      0x04
      dup3
      add
        /* "#utility.yul":8013:8034   */
      mstore
        /* "#utility.yul":8070:8072   */
      0x1f
        /* "#utility.yul":8050:8068   */
      0x24
      dup3
      add
        /* "#utility.yul":8043:8073   */
      mstore
        /* "#utility.yul":8109:8142   */
      0x4552433230566f7465733a20626c6f636b206e6f7420796574206d696e656400
        /* "#utility.yul":8089:8107   */
      0x44
      dup3
      add
        /* "#utility.yul":8082:8143   */
      mstore
        /* "#utility.yul":8160:8178   */
      0x64
      add
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":3783:3853  require(blockNumber < block.number, "ERC20Votes: block not yet mined") */
      tag_189
        /* "#utility.yul":7829:8184   */
      jump
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":3783:3853  require(blockNumber < block.number, "ERC20Votes: block not yet mined") */
    tag_215:
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":3870:3926  _checkpointsLookup(_totalSupplyCheckpoints, blockNumber) */
      tag_156
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":3889:3912  _totalSupplyCheckpoints */
      0x0100
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":3914:3925  blockNumber */
      dup4
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":3870:3888  _checkpointsLookup */
      tag_192
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":3870:3926  _checkpointsLookup(_totalSupplyCheckpoints, blockNumber) */
      jump	// in
        /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/tokens/GovernanceERC20.sol":2010:2272  function initialize(... */
    tag_109:
        /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3111:3130  bool isTopLevelCall */
      0x00
        /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3134:3147  _initializing */
      sload
      0x0100
      swap1
      div
      0xff
      and
        /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3133:3147  !_initializing */
      iszero
      dup1
        /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3179:3213  isTopLevelCall && _initialized < 1 */
      dup1
      iszero
      tag_219
      jumpi
      pop
        /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3197:3209  _initialized */
      sload(0x00)
        /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3212:3213  1 */
      0x01
        /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3197:3209  _initialized */
      0xff
      swap1
      swap2
      and
        /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3197:3213  _initialized < 1 */
      lt
        /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3179:3213  isTopLevelCall && _initialized < 1 */
    tag_219:
        /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3178:3286  (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1) */
      dup1
      tag_222
      jumpi
      pop
        /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3258:3262  this */
      address
        /* "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":1476:1495  account.code.length */
      extcodesize
        /* "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":1476:1499  account.code.length > 0 */
      iszero
      dup1
      iszero
        /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3219:3285  !AddressUpgradeable.isContract(address(this)) && _initialized == 1 */
      tag_222
      jumpi
      pop
        /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3268:3280  _initialized */
      and(0xff, sload(0x00))
      0x01
        /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3268:3285  _initialized == 1 */
      eq
        /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3219:3285  !AddressUpgradeable.isContract(address(this)) && _initialized == 1 */
    tag_222:
        /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3157:3358  require(... */
      tag_223
      jumpi
      mload(0x40)
      shl(0xe5, 0x461bcd)
      dup2
      mstore
        /* "#utility.yul":8391:8393   */
      0x20
        /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3157:3358  require(... */
      0x04
      dup3
      add
        /* "#utility.yul":8373:8394   */
      mstore
        /* "#utility.yul":8430:8432   */
      0x2e
        /* "#utility.yul":8410:8428   */
      0x24
      dup3
      add
        /* "#utility.yul":8403:8433   */
      mstore
        /* "#utility.yul":8469:8503   */
      0x496e697469616c697a61626c653a20636f6e747261637420697320616c726561
        /* "#utility.yul":8449:8467   */
      0x44
      dup3
      add
        /* "#utility.yul":8442:8504   */
      mstore
      shl(0x92, 0x191e481a5b9a5d1a585b1a5e9959)
        /* "#utility.yul":8520:8538   */
      0x64
      dup3
      add
        /* "#utility.yul":8513:8557   */
      mstore
        /* "#utility.yul":8574:8593   */
      0x84
      add
        /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3157:3358  require(... */
      tag_189
        /* "#utility.yul":8189:8599   */
      jump
        /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3157:3358  require(... */
    tag_223:
        /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3368:3380  _initialized */
      0x00
        /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3368:3384  _initialized = 1 */
      dup1
      sload
      not(0xff)
      and
        /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3383:3384  1 */
      0x01
        /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3368:3384  _initialized = 1 */
      or
      swap1
      sstore
        /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3394:3459  if (isTopLevelCall) {... */
      dup1
      iszero
      tag_226
      jumpi
        /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3428:3441  _initializing */
      0x00
        /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3428:3448  _initializing = true */
      dup1
      sload
      not(0xff00)
      and
      0x0100
      or
      swap1
      sstore
        /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3394:3459  if (isTopLevelCall) {... */
    tag_226:
        /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/tokens/GovernanceERC20.sol":2147:2175  __ERC20_init(_name, _symbol) */
      tag_228
        /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/tokens/GovernanceERC20.sol":2160:2165  _name */
      dup4
        /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/tokens/GovernanceERC20.sol":2167:2174  _symbol */
      dup4
        /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/tokens/GovernanceERC20.sol":2147:2159  __ERC20_init */
      tag_229
        /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/tokens/GovernanceERC20.sol":2147:2175  __ERC20_init(_name, _symbol) */
      jump	// in
    tag_228:
        /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/tokens/GovernanceERC20.sol":2185:2210  __ERC20Permit_init(_name) */
      tag_230
        /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/tokens/GovernanceERC20.sol":2204:2209  _name */
      dup4
        /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/tokens/GovernanceERC20.sol":2185:2203  __ERC20Permit_init */
      tag_231
        /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/tokens/GovernanceERC20.sol":2185:2210  __ERC20Permit_init(_name) */
      jump	// in
    tag_230:
        /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/tokens/GovernanceERC20.sol":2220:2265  __DaoAuthorizableUpgradeable_init(IDAO(_dao)) */
      tag_232
        /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/tokens/GovernanceERC20.sol":2259:2263  _dao */
      dup5
        /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/tokens/GovernanceERC20.sol":2220:2253  __DaoAuthorizableUpgradeable_init */
      tag_233
        /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/tokens/GovernanceERC20.sol":2220:2265  __DaoAuthorizableUpgradeable_init(IDAO(_dao)) */
      jump	// in
    tag_232:
        /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3483:3497  isTopLevelCall */
      dup1
        /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3479:3578  if (isTopLevelCall) {... */
      iszero
      tag_234
      jumpi
        /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3529:3534  false */
      0x00
        /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3513:3534  _initializing = false */
      dup1
      sload
      not(0xff00)
      and
      swap1
      sstore
        /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3553:3567  Initialized(1) */
      mload(0x40)
      0x01
        /* "#utility.yul":2193:2229   */
      dup2
      mstore
        /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3553:3567  Initialized(1) */
      0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498
      swap1
        /* "#utility.yul":2181:2183   */
      0x20
        /* "#utility.yul":2166:2184   */
      add
        /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3553:3567  Initialized(1) */
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      log1
        /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3479:3578  if (isTopLevelCall) {... */
    tag_234:
        /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3101:3584  {... */
      pop
        /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/tokens/GovernanceERC20.sol":2010:2272  function initialize(... */
      pop
      pop
      pop
      jump	// out
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":2704:2806  function symbol() public view virtual override returns (string memory) {... */
    tag_111:
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":2760:2773  string memory */
      0x60
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":2792:2799  _symbol */
      0x69
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":2785:2799  return _symbol */
      dup1
      sload
      tag_159
      swap1
      tag_160
      jump	// in
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":2731:2940  function getVotes(address account) public view virtual override returns (uint256) {... */
    tag_119:
      sub(shl(0xa0, 0x01), 0x01)
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":2837:2858  _checkpoints[account] */
      dup2
      and
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":2804:2811  uint256 */
      0x00
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":2837:2858  _checkpoints[account] */
      swap1
      dup2
      mstore
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":2837:2849  _checkpoints */
      0xff
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":2837:2858  _checkpoints[account] */
      0x20
      mstore
      0x40
      dup2
      keccak256
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":2837:2865  _checkpoints[account].length */
      sload
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":2882:2890  pos == 0 */
      dup1
      iszero
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":2882:2933  pos == 0 ? 0 : _checkpoints[account][pos - 1].votes */
      tag_245
      jumpi
      sub(shl(0xa0, 0x01), 0x01)
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":2897:2918  _checkpoints[account] */
      dup4
      and
      0x00
      swap1
      dup2
      mstore
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":2897:2909  _checkpoints */
      0xff
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":2897:2918  _checkpoints[account] */
      0x20
      mstore
      0x40
      swap1
      keccak256
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":2919:2926  pos - 1 */
      tag_246
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":2925:2926  1 */
      0x01
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":2919:2922  pos */
      dup4
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":2919:2926  pos - 1 */
      tag_247
      jump	// in
    tag_246:
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":2897:2927  _checkpoints[account][pos - 1] */
      dup2
      sload
      dup2
      lt
      tag_249
      jumpi
      tag_249
      tag_250
      jump	// in
    tag_249:
      0x00
      swap2
      dup3
      mstore
      0x20
      swap1
      swap2
      keccak256
      add
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":2897:2933  _checkpoints[account][pos - 1].votes */
      sload
      0x0100000000
      swap1
      div
      sub(shl(0xe0, 0x01), 0x01)
      and
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":2882:2933  pos == 0 ? 0 : _checkpoints[account][pos - 1].votes */
      jump(tag_252)
    tag_245:
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":2893:2894  0 */
      0x00
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":2882:2933  pos == 0 ? 0 : _checkpoints[account][pos - 1].votes */
    tag_252:
      sub(shl(0xe0, 0x01), 0x01)
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":2875:2933  return pos == 0 ? 0 : _checkpoints[account][pos - 1].votes */
      and
      swap4
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":2731:2940  function getVotes(address account) public view virtual override returns (uint256) {... */
      swap3
      pop
      pop
      pop
      jump	// out
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":6931:7358  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */
    tag_123:
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":7024:7028  bool */
      0x00
        /* "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":929:939  msg.sender */
      caller
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":7024:7028  bool */
      dup2
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":7105:7130  allowance(owner, spender) */
      tag_255
        /* "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":929:939  msg.sender */
      dup3
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":7122:7129  spender */
      dup7
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":7105:7114  allowance */
      tag_143
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":7105:7130  allowance(owner, spender) */
      jump	// in
    tag_255:
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":7078:7130  uint256 currentAllowance = allowance(owner, spender) */
      swap1
      pop
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":7168:7183  subtractedValue */
      dup4
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":7148:7164  currentAllowance */
      dup2
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":7148:7183  currentAllowance >= subtractedValue */
      lt
      iszero
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":7140:7225  require(currentAllowance >= subtractedValue, "ERC20: decreased allowance below zero") */
      tag_256
      jumpi
      mload(0x40)
      shl(0xe5, 0x461bcd)
      dup2
      mstore
        /* "#utility.yul":9267:9269   */
      0x20
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":7140:7225  require(currentAllowance >= subtractedValue, "ERC20: decreased allowance below zero") */
      0x04
      dup3
      add
        /* "#utility.yul":9249:9270   */
      mstore
        /* "#utility.yul":9306:9308   */
      0x25
        /* "#utility.yul":9286:9304   */
      0x24
      dup3
      add
        /* "#utility.yul":9279:9309   */
      mstore
        /* "#utility.yul":9345:9379   */
      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77
        /* "#utility.yul":9325:9343   */
      0x44
      dup3
      add
        /* "#utility.yul":9318:9380   */
      mstore
      shl(0xd8, 0x207a65726f)
        /* "#utility.yul":9396:9414   */
      0x64
      dup3
      add
        /* "#utility.yul":9389:9424   */
      mstore
        /* "#utility.yul":9441:9460   */
      0x84
      add
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":7140:7225  require(currentAllowance >= subtractedValue, "ERC20: decreased allowance below zero") */
      tag_189
        /* "#utility.yul":9065:9466   */
      jump
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":7140:7225  require(currentAllowance >= subtractedValue, "ERC20: decreased allowance below zero") */
    tag_256:
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":7259:7319  _approve(owner, spender, currentAllowance - subtractedValue) */
      tag_175
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":7268:7273  owner */
      dup3
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":7275:7282  spender */
      dup7
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":7303:7318  subtractedValue */
      dup7
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":7284:7300  currentAllowance */
      dup5
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":7284:7318  currentAllowance - subtractedValue */
      sub
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":7259:7267  _approve */
      tag_169
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":7259:7319  _approve(owner, spender, currentAllowance - subtractedValue) */
      jump	// in
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":4066:4255  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */
    tag_127:
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":4145:4149  bool */
      0x00
        /* "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":929:939  msg.sender */
      caller
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":4199:4227  _transfer(owner, to, amount) */
      tag_168
        /* "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":929:939  msg.sender */
      dup2
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":4216:4218  to */
      dup6
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":4220:4226  amount */
      dup6
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":4199:4208  _transfer */
      tag_176
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":4199:4227  _transfer(owner, to, amount) */
      jump	// in
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":5756:6341  function delegateBySig(... */
    tag_135:
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":5975:5981  expiry */
      dup4
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":5956:5971  block.timestamp */
      timestamp
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":5956:5981  block.timestamp <= expiry */
      gt
      iszero
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":5948:6015  require(block.timestamp <= expiry, "ERC20Votes: signature expired") */
      tag_264
      jumpi
      mload(0x40)
      shl(0xe5, 0x461bcd)
      dup2
      mstore
        /* "#utility.yul":9673:9675   */
      0x20
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":5948:6015  require(block.timestamp <= expiry, "ERC20Votes: signature expired") */
      0x04
      dup3
      add
        /* "#utility.yul":9655:9676   */
      mstore
        /* "#utility.yul":9712:9714   */
      0x1d
        /* "#utility.yul":9692:9710   */
      0x24
      dup3
      add
        /* "#utility.yul":9685:9715   */
      mstore
        /* "#utility.yul":9751:9782   */
      0x4552433230566f7465733a207369676e61747572652065787069726564000000
        /* "#utility.yul":9731:9749   */
      0x44
      dup3
      add
        /* "#utility.yul":9724:9783   */
      mstore
        /* "#utility.yul":9800:9818   */
      0x64
      add
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":5948:6015  require(block.timestamp <= expiry, "ERC20Votes: signature expired") */
      tag_189
        /* "#utility.yul":9471:9824   */
      jump
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":5948:6015  require(block.timestamp <= expiry, "ERC20Votes: signature expired") */
    tag_264:
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":6107:6165  abi.encode(_DELEGATION_TYPEHASH, delegatee, nonce, expiry) */
      0x40
      dup1
      mload
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":1744:1815  keccak256("Delegation(address delegatee,uint256 nonce,uint256 expiry)") */
      0xe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":6107:6165  abi.encode(_DELEGATION_TYPEHASH, delegatee, nonce, expiry) */
      0x20
      dup3
      add
        /* "#utility.yul":10060:10085   */
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "#utility.yul":10121:10153   */
      dup9
      and
        /* "#utility.yul":10101:10119   */
      swap2
      dup2
      add
        /* "#utility.yul":10094:10154   */
      swap2
      swap1
      swap2
      mstore
        /* "#utility.yul":10170:10188   */
      0x60
      dup2
      add
        /* "#utility.yul":10163:10197   */
      dup7
      swap1
      mstore
        /* "#utility.yul":10213:10231   */
      0x80
      dup2
      add
        /* "#utility.yul":10206:10240   */
      dup6
      swap1
      mstore
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":6025:6039  address signer */
      0x00
      swap1
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":6042:6222  ECDSAUpgradeable.recover(... */
      tag_267
      swap1
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":6080:6167  _hashTypedDataV4(keccak256(abi.encode(_DELEGATION_TYPEHASH, delegatee, nonce, expiry))) */
      tag_268
      swap1
        /* "#utility.yul":10032:10051   */
      0xa0
      add
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":6107:6165  abi.encode(_DELEGATION_TYPEHASH, delegatee, nonce, expiry) */
      mload(0x40)
      0x20
      dup2
      dup4
      sub
      sub
      dup2
      mstore
      swap1
      0x40
      mstore
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":6097:6166  keccak256(abi.encode(_DELEGATION_TYPEHASH, delegatee, nonce, expiry)) */
      dup1
      mload
      swap1
      0x20
      add
      keccak256
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":6080:6096  _hashTypedDataV4 */
      tag_271
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":6080:6167  _hashTypedDataV4(keccak256(abi.encode(_DELEGATION_TYPEHASH, delegatee, nonce, expiry))) */
      jump	// in
    tag_268:
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":6181:6182  v */
      dup6
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":6196:6197  r */
      dup6
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":6211:6212  s */
      dup6
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":6042:6066  ECDSAUpgradeable.recover */
      tag_272
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":6042:6222  ECDSAUpgradeable.recover(... */
      jump	// in
    tag_267:
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":6025:6222  address signer = ECDSAUpgradeable.recover(... */
      swap1
      pop
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":6249:6266  _useNonce(signer) */
      tag_273
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":6259:6265  signer */
      dup2
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":6249:6258  _useNonce */
      tag_274
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":6249:6266  _useNonce(signer) */
      jump	// in
    tag_273:
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":6240:6245  nonce */
      dup7
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":6240:6266  nonce == _useNonce(signer) */
      eq
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":6232:6296  require(nonce == _useNonce(signer), "ERC20Votes: invalid nonce") */
      tag_275
      jumpi
      mload(0x40)
      shl(0xe5, 0x461bcd)
      dup2
      mstore
        /* "#utility.yul":10453:10455   */
      0x20
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":6232:6296  require(nonce == _useNonce(signer), "ERC20Votes: invalid nonce") */
      0x04
      dup3
      add
        /* "#utility.yul":10435:10456   */
      mstore
        /* "#utility.yul":10492:10494   */
      0x19
        /* "#utility.yul":10472:10490   */
      0x24
      dup3
      add
        /* "#utility.yul":10465:10495   */
      mstore
        /* "#utility.yul":10531:10558   */
      0x4552433230566f7465733a20696e76616c6964206e6f6e636500000000000000
        /* "#utility.yul":10511:10529   */
      0x44
      dup3
      add
        /* "#utility.yul":10504:10559   */
      mstore
        /* "#utility.yul":10576:10594   */
      0x64
      add
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":6232:6296  require(nonce == _useNonce(signer), "ERC20Votes: invalid nonce") */
      tag_189
        /* "#utility.yul":10251:10600   */
      jump
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":6232:6296  require(nonce == _useNonce(signer), "ERC20Votes: invalid nonce") */
    tag_275:
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":6306:6334  _delegate(signer, delegatee) */
      tag_278
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":6316:6322  signer */
      dup2
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":6324:6333  delegatee */
      dup9
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":6306:6315  _delegate */
      tag_206
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":6306:6334  _delegate(signer, delegatee) */
      jump	// in
    tag_278:
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":5938:6341  {... */
      pop
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":5756:6341  function delegateBySig(... */
      pop
      pop
      pop
      pop
      pop
      pop
      jump	// out
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol":2334:2971  function permit(... */
    tag_139:
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol":2569:2577  deadline */
      dup4
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol":2550:2565  block.timestamp */
      timestamp
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol":2550:2577  block.timestamp <= deadline */
      gt
      iszero
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol":2542:2611  require(block.timestamp <= deadline, "ERC20Permit: expired deadline") */
      tag_280
      jumpi
      mload(0x40)
      shl(0xe5, 0x461bcd)
      dup2
      mstore
        /* "#utility.yul":10807:10809   */
      0x20
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol":2542:2611  require(block.timestamp <= deadline, "ERC20Permit: expired deadline") */
      0x04
      dup3
      add
        /* "#utility.yul":10789:10810   */
      mstore
        /* "#utility.yul":10846:10848   */
      0x1d
        /* "#utility.yul":10826:10844   */
      0x24
      dup3
      add
        /* "#utility.yul":10819:10849   */
      mstore
        /* "#utility.yul":10885:10916   */
      0x45524332305065726d69743a206578706972656420646561646c696e65000000
        /* "#utility.yul":10865:10883   */
      0x44
      dup3
      add
        /* "#utility.yul":10858:10917   */
      mstore
        /* "#utility.yul":10934:10952   */
      0x64
      add
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol":2542:2611  require(block.timestamp <= deadline, "ERC20Permit: expired deadline") */
      tag_189
        /* "#utility.yul":10605:10958   */
      jump
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol":2542:2611  require(block.timestamp <= deadline, "ERC20Permit: expired deadline") */
    tag_280:
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol":2622:2640  bytes32 structHash */
      0x00
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol":1369:1464  keccak256("Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)") */
      0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol":2682:2687  owner */
      dup9
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol":2689:2696  spender */
      dup9
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol":2698:2703  value */
      dup9
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol":2705:2721  _useNonce(owner) */
      tag_283
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol":2715:2720  owner */
      dup13
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol":2705:2714  _useNonce */
      tag_274
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol":2705:2721  _useNonce(owner) */
      jump	// in
    tag_283:
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol":2653:2732  abi.encode(_PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline) */
      0x40
      dup1
      mload
      0x20
      dup2
      add
        /* "#utility.yul":11250:11275   */
      swap7
      swap1
      swap7
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "#utility.yul":11349:11364   */
      swap5
      dup6
      and
        /* "#utility.yul":11329:11347   */
      swap1
      dup7
      add
        /* "#utility.yul":11322:11365   */
      mstore
        /* "#utility.yul":11401:11416   */
      swap3
      swap1
      swap2
      and
        /* "#utility.yul":11381:11399   */
      0x60
      dup5
      add
        /* "#utility.yul":11374:11417   */
      mstore
        /* "#utility.yul":11433:11451   */
      0x80
      dup4
      add
        /* "#utility.yul":11426:11460   */
      mstore
        /* "#utility.yul":11476:11495   */
      0xa0
      dup3
      add
        /* "#utility.yul":11469:11504   */
      mstore
        /* "#utility.yul":11520:11539   */
      0xc0
      dup2
      add
        /* "#utility.yul":11513:11548   */
      dup7
      swap1
      mstore
        /* "#utility.yul":11222:11241   */
      0xe0
      add
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol":2653:2732  abi.encode(_PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline) */
      mload(0x40)
      0x20
      dup2
      dup4
      sub
      sub
      dup2
      mstore
      swap1
      0x40
      mstore
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol":2643:2733  keccak256(abi.encode(_PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)) */
      dup1
      mload
      swap1
      0x20
      add
      keccak256
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol":2622:2733  bytes32 structHash = keccak256(abi.encode(_PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)) */
      swap1
      pop
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol":2744:2756  bytes32 hash */
      0x00
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol":2759:2787  _hashTypedDataV4(structHash) */
      tag_286
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol":2776:2786  structHash */
      dup3
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol":2759:2775  _hashTypedDataV4 */
      tag_271
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol":2759:2787  _hashTypedDataV4(structHash) */
      jump	// in
    tag_286:
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol":2744:2787  bytes32 hash = _hashTypedDataV4(structHash) */
      swap1
      pop
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol":2798:2812  address signer */
      0x00
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol":2815:2854  ECDSAUpgradeable.recover(hash, v, r, s) */
      tag_287
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol":2840:2844  hash */
      dup3
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol":2846:2847  v */
      dup8
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol":2849:2850  r */
      dup8
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol":2852:2853  s */
      dup8
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol":2815:2839  ECDSAUpgradeable.recover */
      tag_272
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol":2815:2854  ECDSAUpgradeable.recover(hash, v, r, s) */
      jump	// in
    tag_287:
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol":2798:2854  address signer = ECDSAUpgradeable.recover(hash, v, r, s) */
      swap1
      pop
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol":2882:2887  owner */
      dup10
      sub(shl(0xa0, 0x01), 0x01)
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol":2872:2887  signer == owner */
      and
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol":2872:2878  signer */
      dup2
      sub(shl(0xa0, 0x01), 0x01)
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol":2872:2887  signer == owner */
      and
      eq
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol":2864:2922  require(signer == owner, "ERC20Permit: invalid signature") */
      tag_288
      jumpi
      mload(0x40)
      shl(0xe5, 0x461bcd)
      dup2
      mstore
        /* "#utility.yul":11761:11763   */
      0x20
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol":2864:2922  require(signer == owner, "ERC20Permit: invalid signature") */
      0x04
      dup3
      add
        /* "#utility.yul":11743:11764   */
      mstore
        /* "#utility.yul":11800:11802   */
      0x1e
        /* "#utility.yul":11780:11798   */
      0x24
      dup3
      add
        /* "#utility.yul":11773:11803   */
      mstore
        /* "#utility.yul":11839:11871   */
      0x45524332305065726d69743a20696e76616c6964207369676e61747572650000
        /* "#utility.yul":11819:11837   */
      0x44
      dup3
      add
        /* "#utility.yul":11812:11872   */
      mstore
        /* "#utility.yul":11889:11907   */
      0x64
      add
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol":2864:2922  require(signer == owner, "ERC20Permit: invalid signature") */
      tag_189
        /* "#utility.yul":11559:11913   */
      jump
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol":2864:2922  require(signer == owner, "ERC20Permit: invalid signature") */
    tag_288:
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol":2933:2964  _approve(owner, spender, value) */
      tag_291
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol":2942:2947  owner */
      dup11
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol":2949:2956  spender */
      dup11
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol":2958:2963  value */
      dup11
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol":2933:2941  _approve */
      tag_169
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol":2933:2964  _approve(owner, spender, value) */
      jump	// in
    tag_291:
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol":2532:2971  {... */
      pop
      pop
      pop
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol":2334:2971  function permit(... */
      pop
      pop
      pop
      pop
      pop
      pop
      pop
      jump	// out
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":4313:4462  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */
    tag_143:
      sub(shl(0xa0, 0x01), 0x01)
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":4428:4446  _allowances[owner] */
      swap2
      dup3
      and
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":4402:4409  uint256 */
      0x00
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":4428:4446  _allowances[owner] */
      swap1
      dup2
      mstore
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":4428:4439  _allowances */
      0x66
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":4428:4446  _allowances[owner] */
      0x20
      swap1
      dup2
      mstore
      0x40
      dup1
      dup4
      keccak256
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":4428:4455  _allowances[owner][spender] */
      swap4
      swap1
      swap5
      and
      dup3
      mstore
      swap2
      swap1
      swap2
      mstore
      keccak256
      sload
      swap1
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":4313:4462  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */
      jump	// out
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":2055:2203  function checkpoints(address account, uint32 pos) public view virtual returns (Checkpoint memory) {... */
    tag_148:
      0x40
      dup1
      mload
      dup1
      dup3
      add
      swap1
      swap2
      mstore
      0x00
      dup1
      dup3
      mstore
      0x20
      dup3
      add
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":2170:2191  _checkpoints[account] */
      dup4
      and
      0x00
      swap1
      dup2
      mstore
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":2170:2182  _checkpoints */
      0xff
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":2170:2191  _checkpoints[account] */
      0x20
      mstore
      0x40
      swap1
      keccak256
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":2170:2196  _checkpoints[account][pos] */
      dup1
      sload
      0xffffffff
      dup5
      and
      swap1
      dup2
      lt
      tag_297
      jumpi
      tag_297
      tag_250
      jump	// in
    tag_297:
      0x00
      swap2
      dup3
      mstore
      0x20
      swap2
      dup3
      swap1
      keccak256
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":2163:2196  return _checkpoints[account][pos] */
      0x40
      dup1
      mload
      dup1
      dup3
      add
      swap1
      swap2
      mstore
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":2170:2196  _checkpoints[account][pos] */
      swap2
      add
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":2163:2196  return _checkpoints[account][pos] */
      sload
      0xffffffff
      dup2
      and
      dup3
      mstore
      0x0100000000
      swap1
      div
      sub(shl(0xe0, 0x01), 0x01)
      and
      swap2
      dup2
      add
      swap2
      swap1
      swap2
      mstore
      swap4
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":2055:2203  function checkpoints(address account, uint32 pos) public view virtual returns (Checkpoint memory) {... */
      swap3
      pop
      pop
      pop
      jump	// out
        /* "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":1186:1506  function isContract(address account) internal view returns (bool) {... */
    tag_151:
      sub(shl(0xa0, 0x01), 0x01)
        /* "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":1476:1495  account.code.length */
      and
      extcodesize
        /* "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":1476:1499  account.code.length > 0 */
      iszero
      iszero
      swap1
        /* "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":1186:1506  function isContract(address account) internal view returns (bool) {... */
      jump	// out
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":10447:10817  function _approve(... */
    tag_169:
      sub(shl(0xa0, 0x01), 0x01)
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":10578:10597  owner != address(0) */
      dup4
      and
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":10570:10638  require(owner != address(0), "ERC20: approve from the zero address") */
      tag_305
      jumpi
      mload(0x40)
      shl(0xe5, 0x461bcd)
      dup2
      mstore
        /* "#utility.yul":12120:12122   */
      0x20
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":10570:10638  require(owner != address(0), "ERC20: approve from the zero address") */
      0x04
      dup3
      add
        /* "#utility.yul":12102:12123   */
      mstore
        /* "#utility.yul":12159:12161   */
      0x24
        /* "#utility.yul":12139:12157   */
      dup1
      dup3
      add
        /* "#utility.yul":12132:12162   */
      mstore
        /* "#utility.yul":12198:12232   */
      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464
        /* "#utility.yul":12178:12196   */
      0x44
      dup3
      add
        /* "#utility.yul":12171:12233   */
      mstore
      shl(0xe0, 0x72657373)
        /* "#utility.yul":12249:12267   */
      0x64
      dup3
      add
        /* "#utility.yul":12242:12276   */
      mstore
        /* "#utility.yul":12293:12312   */
      0x84
      add
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":10570:10638  require(owner != address(0), "ERC20: approve from the zero address") */
      tag_189
        /* "#utility.yul":11918:12318   */
      jump
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":10570:10638  require(owner != address(0), "ERC20: approve from the zero address") */
    tag_305:
      sub(shl(0xa0, 0x01), 0x01)
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":10656:10677  spender != address(0) */
      dup3
      and
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":10648:10716  require(spender != address(0), "ERC20: approve to the zero address") */
      tag_308
      jumpi
      mload(0x40)
      shl(0xe5, 0x461bcd)
      dup2
      mstore
        /* "#utility.yul":12525:12527   */
      0x20
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":10648:10716  require(spender != address(0), "ERC20: approve to the zero address") */
      0x04
      dup3
      add
        /* "#utility.yul":12507:12528   */
      mstore
        /* "#utility.yul":12564:12566   */
      0x22
        /* "#utility.yul":12544:12562   */
      0x24
      dup3
      add
        /* "#utility.yul":12537:12567   */
      mstore
        /* "#utility.yul":12603:12637   */
      0x45524332303a20617070726f766520746f20746865207a65726f206164647265
        /* "#utility.yul":12583:12601   */
      0x44
      dup3
      add
        /* "#utility.yul":12576:12638   */
      mstore
      shl(0xf0, 0x7373)
        /* "#utility.yul":12654:12672   */
      0x64
      dup3
      add
        /* "#utility.yul":12647:12679   */
      mstore
        /* "#utility.yul":12696:12715   */
      0x84
      add
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":10648:10716  require(spender != address(0), "ERC20: approve to the zero address") */
      tag_189
        /* "#utility.yul":12323:12721   */
      jump
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":10648:10716  require(spender != address(0), "ERC20: approve to the zero address") */
    tag_308:
      sub(shl(0xa0, 0x01), 0x01)
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":10727:10745  _allowances[owner] */
      dup4
      dup2
      and
      0x00
      dup2
      dup2
      mstore
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":10727:10738  _allowances */
      0x66
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":10727:10745  _allowances[owner] */
      0x20
      swap1
      dup2
      mstore
      0x40
      dup1
      dup4
      keccak256
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":10727:10754  _allowances[owner][spender] */
      swap5
      dup8
      and
      dup1
      dup5
      mstore
      swap5
      dup3
      mstore
      swap2
      dup3
      swap1
      keccak256
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":10727:10763  _allowances[owner][spender] = amount */
      dup6
      swap1
      sstore
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":10778:10810  Approval(owner, spender, amount) */
      swap1
      mload
        /* "#utility.yul":1682:1707   */
      dup5
      dup2
      mstore
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":10778:10810  Approval(owner, spender, amount) */
      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
      swap2
        /* "#utility.yul":1655:1673   */
      add
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":10778:10810  Approval(owner, spender, amount) */
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      log3
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":10447:10817  function _approve(... */
      pop
      pop
      pop
      jump	// out
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":11098:11539  function _spendAllowance(... */
    tag_174:
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":11228:11252  uint256 currentAllowance */
      0x00
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":11255:11280  allowance(owner, spender) */
      tag_313
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":11265:11270  owner */
      dup5
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":11272:11279  spender */
      dup5
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":11255:11264  allowance */
      tag_143
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":11255:11280  allowance(owner, spender) */
      jump	// in
    tag_313:
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":11228:11280  uint256 currentAllowance = allowance(owner, spender) */
      swap1
      pop
      not(0x00)
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":11294:11310  currentAllowance */
      dup2
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":11294:11331  currentAllowance != type(uint256).max */
      eq
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":11290:11533  if (currentAllowance != type(uint256).max) {... */
      tag_234
      jumpi
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":11375:11381  amount */
      dup2
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":11355:11371  currentAllowance */
      dup2
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":11355:11381  currentAllowance >= amount */
      lt
      iszero
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":11347:11415  require(currentAllowance >= amount, "ERC20: insufficient allowance") */
      tag_315
      jumpi
      mload(0x40)
      shl(0xe5, 0x461bcd)
      dup2
      mstore
        /* "#utility.yul":12928:12930   */
      0x20
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":11347:11415  require(currentAllowance >= amount, "ERC20: insufficient allowance") */
      0x04
      dup3
      add
        /* "#utility.yul":12910:12931   */
      mstore
        /* "#utility.yul":12967:12969   */
      0x1d
        /* "#utility.yul":12947:12965   */
      0x24
      dup3
      add
        /* "#utility.yul":12940:12970   */
      mstore
        /* "#utility.yul":13006:13037   */
      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000
        /* "#utility.yul":12986:13004   */
      0x44
      dup3
      add
        /* "#utility.yul":12979:13038   */
      mstore
        /* "#utility.yul":13055:13073   */
      0x64
      add
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":11347:11415  require(currentAllowance >= amount, "ERC20: insufficient allowance") */
      tag_189
        /* "#utility.yul":12726:13079   */
      jump
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":11347:11415  require(currentAllowance >= amount, "ERC20: insufficient allowance") */
    tag_315:
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":11457:11508  _approve(owner, spender, currentAllowance - amount) */
      tag_234
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":11466:11471  owner */
      dup5
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":11473:11480  spender */
      dup5
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":11501:11507  amount */
      dup5
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":11482:11498  currentAllowance */
      dup5
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":11482:11507  currentAllowance - amount */
      sub
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":11457:11465  _approve */
      tag_169
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":11457:11508  _approve(owner, spender, currentAllowance - amount) */
      jump	// in
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":7812:8463  function _transfer(... */
    tag_176:
      sub(shl(0xa0, 0x01), 0x01)
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":7938:7956  from != address(0) */
      dup4
      and
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":7930:7998  require(from != address(0), "ERC20: transfer from the zero address") */
      tag_320
      jumpi
      mload(0x40)
      shl(0xe5, 0x461bcd)
      dup2
      mstore
        /* "#utility.yul":13286:13288   */
      0x20
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":7930:7998  require(from != address(0), "ERC20: transfer from the zero address") */
      0x04
      dup3
      add
        /* "#utility.yul":13268:13289   */
      mstore
        /* "#utility.yul":13325:13327   */
      0x25
        /* "#utility.yul":13305:13323   */
      0x24
      dup3
      add
        /* "#utility.yul":13298:13328   */
      mstore
        /* "#utility.yul":13364:13398   */
      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164
        /* "#utility.yul":13344:13362   */
      0x44
      dup3
      add
        /* "#utility.yul":13337:13399   */
      mstore
      shl(0xd8, 0x6472657373)
        /* "#utility.yul":13415:13433   */
      0x64
      dup3
      add
        /* "#utility.yul":13408:13443   */
      mstore
        /* "#utility.yul":13460:13479   */
      0x84
      add
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":7930:7998  require(from != address(0), "ERC20: transfer from the zero address") */
      tag_189
        /* "#utility.yul":13084:13485   */
      jump
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":7930:7998  require(from != address(0), "ERC20: transfer from the zero address") */
    tag_320:
      sub(shl(0xa0, 0x01), 0x01)
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":8016:8032  to != address(0) */
      dup3
      and
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":8008:8072  require(to != address(0), "ERC20: transfer to the zero address") */
      tag_323
      jumpi
      mload(0x40)
      shl(0xe5, 0x461bcd)
      dup2
      mstore
        /* "#utility.yul":13692:13694   */
      0x20
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":8008:8072  require(to != address(0), "ERC20: transfer to the zero address") */
      0x04
      dup3
      add
        /* "#utility.yul":13674:13695   */
      mstore
        /* "#utility.yul":13731:13733   */
      0x23
        /* "#utility.yul":13711:13729   */
      0x24
      dup3
      add
        /* "#utility.yul":13704:13734   */
      mstore
        /* "#utility.yul":13770:13804   */
      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472
        /* "#utility.yul":13750:13768   */
      0x44
      dup3
      add
        /* "#utility.yul":13743:13805   */
      mstore
      shl(0xe8, 0x657373)
        /* "#utility.yul":13821:13839   */
      0x64
      dup3
      add
        /* "#utility.yul":13814:13847   */
      mstore
        /* "#utility.yul":13864:13883   */
      0x84
      add
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":8008:8072  require(to != address(0), "ERC20: transfer to the zero address") */
      tag_189
        /* "#utility.yul":13490:13889   */
      jump
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":8008:8072  require(to != address(0), "ERC20: transfer to the zero address") */
    tag_323:
      sub(shl(0xa0, 0x01), 0x01)
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":8154:8169  _balances[from] */
      dup4
      and
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":8132:8151  uint256 fromBalance */
      0x00
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":8154:8169  _balances[from] */
      swap1
      dup2
      mstore
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":8154:8163  _balances */
      0x65
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":8154:8169  _balances[from] */
      0x20
      mstore
      0x40
      swap1
      keccak256
      sload
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":8187:8208  fromBalance >= amount */
      dup2
      dup2
      lt
      iszero
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":8179:8251  require(fromBalance >= amount, "ERC20: transfer amount exceeds balance") */
      tag_328
      jumpi
      mload(0x40)
      shl(0xe5, 0x461bcd)
      dup2
      mstore
        /* "#utility.yul":14096:14098   */
      0x20
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":8179:8251  require(fromBalance >= amount, "ERC20: transfer amount exceeds balance") */
      0x04
      dup3
      add
        /* "#utility.yul":14078:14099   */
      mstore
        /* "#utility.yul":14135:14137   */
      0x26
        /* "#utility.yul":14115:14133   */
      0x24
      dup3
      add
        /* "#utility.yul":14108:14138   */
      mstore
        /* "#utility.yul":14174:14208   */
      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062
        /* "#utility.yul":14154:14172   */
      0x44
      dup3
      add
        /* "#utility.yul":14147:14209   */
      mstore
      shl(0xd0, 0x616c616e6365)
        /* "#utility.yul":14225:14243   */
      0x64
      dup3
      add
        /* "#utility.yul":14218:14254   */
      mstore
        /* "#utility.yul":14271:14290   */
      0x84
      add
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":8179:8251  require(fromBalance >= amount, "ERC20: transfer amount exceeds balance") */
      tag_189
        /* "#utility.yul":13894:14296   */
      jump
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":8179:8251  require(fromBalance >= amount, "ERC20: transfer amount exceeds balance") */
    tag_328:
      sub(shl(0xa0, 0x01), 0x01)
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":8285:8300  _balances[from] */
      dup1
      dup6
      and
      0x00
      swap1
      dup2
      mstore
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":8285:8294  _balances */
      0x65
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":8285:8300  _balances[from] */
      0x20
      mstore
      0x40
      dup1
      dup3
      keccak256
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":8303:8323  fromBalance - amount */
      dup6
      dup6
      sub
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":8285:8323  _balances[from] = fromBalance - amount */
      swap1
      sstore
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":8343:8356  _balances[to] */
      swap2
      dup6
      and
      dup2
      mstore
      swap1
      dup2
      keccak256
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":8343:8366  _balances[to] += amount */
      dup1
      sload
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":8317:8323  amount */
      dup5
      swap3
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":8285:8300  _balances[from] */
      swap1
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":8343:8366  _balances[to] += amount */
      tag_331
      swap1
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":8317:8323  amount */
      dup5
      swap1
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":8343:8366  _balances[to] += amount */
      tag_186
      jump	// in
    tag_331:
      swap3
      pop
      pop
      dup2
      swap1
      sstore
      pop
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":8397:8399  to */
      dup3
      sub(shl(0xa0, 0x01), 0x01)
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":8382:8408  Transfer(from, to, amount) */
      and
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":8391:8395  from */
      dup5
      sub(shl(0xa0, 0x01), 0x01)
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":8382:8408  Transfer(from, to, amount) */
      and
      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":8401:8407  amount */
      dup5
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":8382:8408  Transfer(from, to, amount) */
      mload(0x40)
      tag_332
      swap2
        /* "#utility.yul":1682:1707   */
      dup2
      mstore
        /* "#utility.yul":1670:1672   */
      0x20
        /* "#utility.yul":1655:1673   */
      add
      swap1
        /* "#utility.yul":1536:1713   */
      jump
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":8382:8408  Transfer(from, to, amount) */
    tag_332:
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      log3
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":8419:8456  _afterTokenTransfer(from, to, amount) */
      tag_234
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":8439:8443  from */
      dup5
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":8445:8447  to */
      dup5
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":8449:8455  amount */
      dup5
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":8419:8438  _afterTokenTransfer */
      tag_334
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":8419:8456  _afterTokenTransfer(from, to, amount) */
      jump	// in
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol":2842:3002  function _domainSeparatorV4() internal view returns (bytes32) {... */
    tag_180:
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol":2895:2902  bytes32 */
      0x00
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol":2921:2995  _buildDomainSeparator(_TYPE_HASH, _EIP712NameHash(), _EIP712VersionHash()) */
      tag_179
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol":1595:1690  keccak256("EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)") */
      0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol":2955:2972  _EIP712NameHash() */
      tag_337
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol":4386:4398  _HASHED_NAME */
      sload(0x97)
      swap1
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol":4302:4405  function _EIP712NameHash() internal virtual view returns (bytes32) {... */
      jump
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol":2955:2972  _EIP712NameHash() */
    tag_337:
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol":4731:4746  _HASHED_VERSION */
      sload(0x98)
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol":3184:3257  abi.encode(typeHash, nameHash, versionHash, block.chainid, address(this)) */
      0x40
      dup1
      mload
      0x20
      dup2
      add
        /* "#utility.yul":16870:16895   */
      dup6
      swap1
      mstore
        /* "#utility.yul":16911:16929   */
      swap1
      dup2
      add
        /* "#utility.yul":16904:16938   */
      dup4
      swap1
      mstore
        /* "#utility.yul":16954:16972   */
      0x60
      dup2
      add
        /* "#utility.yul":16947:16981   */
      dup3
      swap1
      mstore
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol":3228:3241  block.chainid */
      chainid
        /* "#utility.yul":16997:17015   */
      0x80
      dup3
      add
        /* "#utility.yul":16990:17024   */
      mstore
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol":3251:3255  this */
      address
        /* "#utility.yul":17040:17059   */
      0xa0
      dup3
      add
        /* "#utility.yul":17033:17094   */
      mstore
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol":3148:3155  bytes32 */
      0x00
      swap1
        /* "#utility.yul":16842:16861   */
      0xc0
      add
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol":3184:3257  abi.encode(typeHash, nameHash, versionHash, block.chainid, address(this)) */
      mload(0x40)
      0x20
      dup2
      dup4
      sub
      sub
      dup2
      mstore
      swap1
      0x40
      mstore
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol":3174:3258  keccak256(abi.encode(typeHash, nameHash, versionHash, block.chainid, address(this))) */
      dup1
      mload
      swap1
      0x20
      add
      keccak256
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol":3167:3258  return keccak256(abi.encode(typeHash, nameHash, versionHash, block.chainid, address(this))) */
      swap1
      pop
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol":3008:3265  function _buildDomainSeparator(... */
      swap4
      swap3
      pop
      pop
      pop
      jump
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":4017:5486  function _checkpointsLookup(Checkpoint[] storage ckpts, uint256 blockNumber) private view returns (uint256) {... */
    tag_192:
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":5138:5150  ckpts.length */
      dup2
      sload
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":4116:4123  uint256 */
      0x00
      swap1
      dup2
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":5185:5425  while (low < high) {... */
    tag_343:
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":5198:5202  high */
      dup2
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":5192:5195  low */
      dup2
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":5192:5202  low < high */
      lt
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":5185:5425  while (low < high) {... */
      iszero
      tag_344
      jumpi
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":5218:5229  uint256 mid */
      0x00
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":5232:5266  MathUpgradeable.average(low, high) */
      tag_345
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":5256:5259  low */
      dup3
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":5261:5265  high */
      dup5
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":5232:5255  MathUpgradeable.average */
      tag_346
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":5232:5266  MathUpgradeable.average(low, high) */
      jump	// in
    tag_345:
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":5218:5266  uint256 mid = MathUpgradeable.average(low, high) */
      swap1
      pop
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":5307:5318  blockNumber */
      dup5
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":5284:5289  ckpts */
      dup7
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":5290:5293  mid */
      dup3
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":5284:5294  ckpts[mid] */
      dup2
      sload
      dup2
      lt
      tag_348
      jumpi
      tag_348
      tag_250
      jump	// in
    tag_348:
      0x00
      swap2
      dup3
      mstore
      0x20
      swap1
      swap2
      keccak256
      add
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":5284:5304  ckpts[mid].fromBlock */
      sload
      0xffffffff
      and
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":5284:5318  ckpts[mid].fromBlock > blockNumber */
      gt
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":5280:5415  if (ckpts[mid].fromBlock > blockNumber) {... */
      iszero
      tag_350
      jumpi
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":5345:5348  mid */
      dup1
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":5338:5348  high = mid */
      swap3
      pop
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":5280:5415  if (ckpts[mid].fromBlock > blockNumber) {... */
      jump(tag_351)
    tag_350:
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":5393:5400  mid + 1 */
      tag_352
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":5393:5396  mid */
      dup2
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":5399:5400  1 */
      0x01
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":5393:5400  mid + 1 */
      tag_186
      jump	// in
    tag_352:
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":5387:5400  low = mid + 1 */
      swap2
      pop
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":5280:5415  if (ckpts[mid].fromBlock > blockNumber) {... */
    tag_351:
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":5204:5425  {... */
      pop
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":5185:5425  while (low < high) {... */
      jump(tag_343)
    tag_344:
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":5442:5451  high == 0 */
      dup2
      iszero
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":5442:5479  high == 0 ? 0 : ckpts[high - 1].votes */
      tag_353
      jumpi
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":5458:5463  ckpts */
      dup5
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":5464:5472  high - 1 */
      tag_354
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":5471:5472  1 */
      0x01
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":5464:5468  high */
      dup5
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":5464:5472  high - 1 */
      tag_247
      jump	// in
    tag_354:
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":5458:5473  ckpts[high - 1] */
      dup2
      sload
      dup2
      lt
      tag_356
      jumpi
      tag_356
      tag_250
      jump	// in
    tag_356:
      0x00
      swap2
      dup3
      mstore
      0x20
      swap1
      swap2
      keccak256
      add
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":5458:5479  ckpts[high - 1].votes */
      sload
      0x0100000000
      swap1
      div
      sub(shl(0xe0, 0x01), 0x01)
      and
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":5442:5479  high == 0 ? 0 : ckpts[high - 1].votes */
      jump(tag_358)
    tag_353:
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":5454:5455  0 */
      0x00
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":5442:5479  high == 0 ? 0 : ckpts[high - 1].votes */
    tag_358:
      sub(shl(0xe0, 0x01), 0x01)
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":5435:5479  return high == 0 ? 0 : ckpts[high - 1].votes */
      and
      swap6
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":4017:5486  function _checkpointsLookup(Checkpoint[] storage ckpts, uint256 blockNumber) private view returns (uint256) {... */
      swap5
      pop
      pop
      pop
      pop
      pop
      jump	// out
        /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/utils/auth.sol":722:1155  function _auth(... */
    tag_198:
        /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/utils/auth.sol":875:943  _dao.hasPermission(addressThis, _msgSender, _permissionId, _msgData) */
      mload(0x40)
      shl(0xe1, 0x7ef7c883)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/utils/auth.sol":875:893  _dao.hasPermission */
      dup8
      and
      swap1
      0xfdef9106
      swap1
        /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/utils/auth.sol":875:943  _dao.hasPermission(addressThis, _msgSender, _permissionId, _msgData) */
      tag_363
      swap1
        /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/utils/auth.sol":894:905  addressThis */
      dup9
      swap1
        /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/utils/auth.sol":907:917  _msgSender */
      dup9
      swap1
        /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/utils/auth.sol":919:932  _permissionId */
      dup9
      swap1
        /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/utils/auth.sol":934:942  _msgData */
      dup9
      swap1
      dup9
      swap1
        /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/utils/auth.sol":875:943  _dao.hasPermission(addressThis, _msgSender, _permissionId, _msgData) */
      0x04
      add
      tag_364
      jump	// in
    tag_363:
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_366
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_366:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_367
      swap2
      swap1
      tag_368
      jump	// in
    tag_367:
        /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/utils/auth.sol":870:1152  if (!_dao.hasPermission(addressThis, _msgSender, _permissionId, _msgData))... */
      tag_369
      jumpi
        /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/utils/auth.sol":960:1152  DaoUnauthorized({... */
      mload(0x40)
      shl(0xe0, 0x5caaf893)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "#utility.yul":15565:15580   */
      dup1
      dup9
      and
        /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/utils/auth.sol":960:1152  DaoUnauthorized({... */
      0x04
      dup4
      add
        /* "#utility.yul":15547:15581   */
      mstore
        /* "#utility.yul":15617:15632   */
      dup1
      dup8
      and
        /* "#utility.yul":15597:15615   */
      0x24
      dup4
      add
        /* "#utility.yul":15590:15633   */
      dup2
      swap1
      mstore
        /* "#utility.yul":15649:15667   */
      0x44
      dup4
      add
        /* "#utility.yul":15642:15685   */
      mstore
        /* "#utility.yul":15721:15736   */
      dup6
      and
        /* "#utility.yul":15701:15719   */
      0x64
      dup3
      add
        /* "#utility.yul":15694:15737   */
      mstore
        /* "#utility.yul":15753:15772   */
      0x84
      dup2
      add
        /* "#utility.yul":15746:15781   */
      dup5
      swap1
      mstore
        /* "#utility.yul":15481:15500   */
      0xa4
      add
        /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/utils/auth.sol":960:1152  DaoUnauthorized({... */
      tag_189
        /* "#utility.yul":15250:15787   */
      jump
        /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/utils/auth.sol":870:1152  if (!_dao.hasPermission(addressThis, _msgSender, _permissionId, _msgData))... */
    tag_369:
        /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/utils/auth.sol":722:1155  function _auth(... */
      pop
      pop
      pop
      pop
      pop
      pop
      jump	// out
        /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/tokens/GovernanceERC20.sol":3567:3668  function _mint(address to, uint256 amount) internal override {... */
    tag_201:
        /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/tokens/GovernanceERC20.sol":3638:3661  super._mint(to, amount) */
      tag_373
        /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/tokens/GovernanceERC20.sol":3650:3652  to */
      dup3
        /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/tokens/GovernanceERC20.sol":3654:3660  amount */
      dup3
        /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/tokens/GovernanceERC20.sol":3638:3649  super._mint */
      tag_374
        /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/tokens/GovernanceERC20.sol":3638:3661  super._mint(to, amount) */
      jump	// in
    tag_373:
        /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/tokens/GovernanceERC20.sol":3567:3668  function _mint(address to, uint256 amount) internal override {... */
      pop
      pop
      jump	// out
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":7743:8123  function _delegate(address delegator, address delegatee) internal virtual {... */
    tag_206:
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":7827:7850  address currentDelegate */
      0x00
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":7853:7873  delegates(delegator) */
      tag_376
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":7863:7872  delegator */
      dup4
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":7853:7862  delegates */
      tag_82
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":7853:7873  delegates(delegator) */
      jump	// in
    tag_376:
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":7827:7873  address currentDelegate = delegates(delegator) */
      swap1
      pop
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":7883:7907  uint256 delegatorBalance */
      0x00
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":7910:7930  balanceOf(delegator) */
      tag_377
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":7920:7929  delegator */
      dup5
      sub(shl(0xa0, 0x01), 0x01)
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":3845:3863  _balances[account] */
      and
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":3819:3826  uint256 */
      0x00
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":3845:3863  _balances[account] */
      swap1
      dup2
      mstore
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":3845:3854  _balances */
      0x65
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":3845:3863  _balances[account] */
      0x20
      mstore
      0x40
      swap1
      keccak256
      sload
      swap1
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":3745:3870  function balanceOf(address account) public view virtual override returns (uint256) {... */
      jump
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":7910:7930  balanceOf(delegator) */
    tag_377:
      sub(shl(0xa0, 0x01), 0x01)
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":7940:7961  _delegates[delegator] */
      dup6
      dup2
      and
      0x00
      dup2
      dup2
      mstore
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":7940:7950  _delegates */
      0xfe
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":7940:7961  _delegates[delegator] */
      0x20
      mstore
      0x40
      dup1
      dup3
      keccak256
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":7940:7973  _delegates[delegator] = delegatee */
      dup1
      sload
      not(sub(shl(0xa0, 0x01), 0x01))
      and
      dup10
      dup7
      and
      swap1
      dup2
      or
      swap1
      swap2
      sstore
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":7989:8043  DelegateChanged(delegator, currentDelegate, delegatee) */
      swap1
      mload
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":7883:7930  uint256 delegatorBalance = balanceOf(delegator) */
      swap5
      swap6
      pop
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":7940:7973  _delegates[delegator] = delegatee */
      swap4
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":7989:8043  DelegateChanged(delegator, currentDelegate, delegatee) */
      swap3
      dup7
      and
      swap3
      0x3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f
      swap2
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":7940:7961  _delegates[delegator] */
      swap1
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":7989:8043  DelegateChanged(delegator, currentDelegate, delegatee) */
      log4
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":8054:8116  _moveVotingPower(currentDelegate, delegatee, delegatorBalance) */
      tag_234
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":8071:8086  currentDelegate */
      dup3
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":8088:8097  delegatee */
      dup5
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":8099:8115  delegatorBalance */
      dup4
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":8054:8070  _moveVotingPower */
      tag_379
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":8054:8116  _moveVotingPower(currentDelegate, delegatee, delegatorBalance) */
      jump	// in
        /* "@openzeppelin/contracts-upgradeable/utils/math/SafeCastUpgradeable.sol":15190:15377  function toUint32(uint256 value) internal pure returns (uint32) {... */
    tag_209:
        /* "@openzeppelin/contracts-upgradeable/utils/math/SafeCastUpgradeable.sol":15246:15252  uint32 */
      0x00
        /* "@openzeppelin/contracts-upgradeable/utils/math/SafeCastUpgradeable.sol":15281:15297  type(uint32).max */
      0xffffffff
        /* "@openzeppelin/contracts-upgradeable/utils/math/SafeCastUpgradeable.sol":15272:15297  value <= type(uint32).max */
      dup3
      gt
      iszero
        /* "@openzeppelin/contracts-upgradeable/utils/math/SafeCastUpgradeable.sol":15264:15340  require(value <= type(uint32).max, "SafeCast: value doesn't fit in 32 bits") */
      tag_381
      jumpi
      mload(0x40)
      shl(0xe5, 0x461bcd)
      dup2
      mstore
        /* "#utility.yul":15994:15996   */
      0x20
        /* "@openzeppelin/contracts-upgradeable/utils/math/SafeCastUpgradeable.sol":15264:15340  require(value <= type(uint32).max, "SafeCast: value doesn't fit in 32 bits") */
      0x04
      dup3
      add
        /* "#utility.yul":15976:15997   */
      mstore
        /* "#utility.yul":16033:16035   */
      0x26
        /* "#utility.yul":16013:16031   */
      0x24
      dup3
      add
        /* "#utility.yul":16006:16036   */
      mstore
        /* "#utility.yul":16072:16106   */
      0x53616665436173743a2076616c756520646f65736e27742066697420696e2033
        /* "#utility.yul":16052:16070   */
      0x44
      dup3
      add
        /* "#utility.yul":16045:16107   */
      mstore
      shl(0xd0, 0x322062697473)
        /* "#utility.yul":16123:16141   */
      0x64
      dup3
      add
        /* "#utility.yul":16116:16152   */
      mstore
        /* "#utility.yul":16169:16188   */
      0x84
      add
        /* "@openzeppelin/contracts-upgradeable/utils/math/SafeCastUpgradeable.sol":15264:15340  require(value <= type(uint32).max, "SafeCast: value doesn't fit in 32 bits") */
      tag_189
        /* "#utility.yul":15792:16194   */
      jump
        /* "@openzeppelin/contracts-upgradeable/utils/math/SafeCastUpgradeable.sol":15264:15340  require(value <= type(uint32).max, "SafeCast: value doesn't fit in 32 bits") */
    tag_381:
      pop
        /* "@openzeppelin/contracts-upgradeable/utils/math/SafeCastUpgradeable.sol":15364:15369  value */
      swap1
        /* "@openzeppelin/contracts-upgradeable/utils/math/SafeCastUpgradeable.sol":15190:15377  function toUint32(uint256 value) internal pure returns (uint32) {... */
      jump	// out
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":2116:2263  function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {... */
    tag_229:
        /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":4910:4923  _initializing */
      sload(0x00)
      0x0100
      swap1
      div
      0xff
      and
        /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":4902:4971  require(_initializing, "Initializable: contract is not initializing") */
      tag_386
      jumpi
      mload(0x40)
      shl(0xe5, 0x461bcd)
      dup2
      mstore
      0x04
      add
      tag_189
      swap1
      tag_388
      jump	// in
    tag_386:
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":2218:2256  __ERC20_init_unchained(name_, symbol_) */
      tag_373
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":2241:2246  name_ */
      dup3
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":2248:2255  symbol_ */
      dup3
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":2218:2240  __ERC20_init_unchained */
      tag_391
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":2218:2256  __ERC20_init_unchained(name_, symbol_) */
      jump	// in
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol":2061:2186  function __ERC20Permit_init(string memory name) internal onlyInitializing {... */
    tag_231:
        /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":4910:4923  _initializing */
      sload(0x00)
      0x0100
      swap1
      div
      0xff
      and
        /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":4902:4971  require(_initializing, "Initializable: contract is not initializing") */
      tag_393
      jumpi
      mload(0x40)
      shl(0xe5, 0x461bcd)
      dup2
      mstore
      0x04
      add
      tag_189
      swap1
      tag_388
      jump	// in
    tag_393:
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol":2145:2179  __EIP712_init_unchained(name, "1") */
      tag_204
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol":2169:2173  name */
      dup2
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol":2145:2179  __EIP712_init_unchained(name, "1") */
      mload(0x40)
      dup1
      0x40
      add
      0x40
      mstore
      dup1
      0x01
      dup2
      mstore
      0x20
      add
      shl(0xf8, 0x31)
      dup2
      mstore
      pop
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol":2145:2168  __EIP712_init_unchained */
      tag_397
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol":2145:2179  __EIP712_init_unchained(name, "1") */
      jump	// in
        /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/core/component/DaoAuthorizableUpgradeable.sol":953:1060  function __DaoAuthorizableUpgradeable_init(IDAO _dao) internal onlyInitializing {... */
    tag_233:
        /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":4910:4923  _initializing */
      sload(0x00)
      0x0100
      swap1
      div
      0xff
      and
        /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":4902:4971  require(_initializing, "Initializable: contract is not initializing") */
      tag_399
      jumpi
      mload(0x40)
      shl(0xe5, 0x461bcd)
      dup2
      mstore
      0x04
      add
      tag_189
      swap1
      tag_388
      jump	// in
    tag_399:
        /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/core/component/DaoAuthorizableUpgradeable.sol":1043:1046  dao */
      0x0130
        /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/core/component/DaoAuthorizableUpgradeable.sol":1043:1053  dao = _dao */
      dup1
      sload
      not(sub(shl(0xa0, 0x01), 0x01))
      and
      sub(shl(0xa0, 0x01), 0x01)
      swap3
      swap1
      swap3
      and
      swap2
      swap1
      swap2
      or
      swap1
      sstore
        /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/core/component/DaoAuthorizableUpgradeable.sol":953:1060  function __DaoAuthorizableUpgradeable_init(IDAO _dao) internal onlyInitializing {... */
      jump	// out
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol":3890:4066  function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {... */
    tag_271:
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol":3967:3974  bytes32 */
      0x00
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol":3993:4059  ECDSAUpgradeable.toTypedDataHash(_domainSeparatorV4(), structHash) */
      tag_156
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol":4026:4046  _domainSeparatorV4() */
      tag_404
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol":4026:4044  _domainSeparatorV4 */
      tag_180
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol":4026:4046  _domainSeparatorV4() */
      jump	// in
    tag_404:
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol":4048:4058  structHash */
      dup4
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":9353:9410  abi.encodePacked("\x19\x01", domainSeparator, structHash) */
      mload(0x40)
      shl(0xf0, 0x1901)
      0x20
      dup3
      add
        /* "#utility.yul":18255:18282   */
      mstore
        /* "#utility.yul":18298:18309   */
      0x22
      dup2
      add
        /* "#utility.yul":18291:18318   */
      dup4
      swap1
      mstore
        /* "#utility.yul":18334:18346   */
      0x42
      dup2
      add
        /* "#utility.yul":18327:18355   */
      dup3
      swap1
      mstore
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":9317:9324  bytes32 */
      0x00
      swap1
        /* "#utility.yul":18371:18383   */
      0x62
      add
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":9353:9410  abi.encodePacked("\x19\x01", domainSeparator, structHash) */
      mload(0x40)
      0x20
      dup2
      dup4
      sub
      sub
      dup2
      mstore
      swap1
      0x40
      mstore
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":9343:9411  keccak256(abi.encodePacked("\x19\x01", domainSeparator, structHash)) */
      dup1
      mload
      swap1
      0x20
      add
      keccak256
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":9336:9411  return keccak256(abi.encodePacked("\x19\x01", domainSeparator, structHash)) */
      swap1
      pop
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":9224:9418  function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32) {... */
      swap3
      swap2
      pop
      pop
      jump
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":7568:7838  function recover(... */
    tag_272:
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":7691:7698  address */
      0x00
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":7711:7728  address recovered */
      dup1
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":7730:7748  RecoverError error */
      0x00
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":7752:7777  tryRecover(hash, v, r, s) */
      tag_407
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":7763:7767  hash */
      dup8
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":7769:7770  v */
      dup8
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":7772:7773  r */
      dup8
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":7775:7776  s */
      dup8
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":7752:7762  tryRecover */
      tag_408
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":7752:7777  tryRecover(hash, v, r, s) */
      jump	// in
    tag_407:
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":7710:7777  (address recovered, RecoverError error) = tryRecover(hash, v, r, s) */
      swap2
      pop
      swap2
      pop
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":7787:7805  _throwError(error) */
      tag_409
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":7799:7804  error */
      dup2
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":7787:7798  _throwError */
      tag_410
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":7787:7805  _throwError(error) */
      jump	// in
    tag_409:
      pop
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":7822:7831  recovered */
      swap6
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":7568:7838  function recover(... */
      swap5
      pop
      pop
      pop
      pop
      pop
      jump	// out
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol":3526:3740  function _useNonce(address owner) internal virtual returns (uint256 current) {... */
    tag_274:
      sub(shl(0xa0, 0x01), 0x01)
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol":3657:3671  _nonces[owner] */
      dup2
      and
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol":3586:3601  uint256 current */
      0x00
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol":3657:3671  _nonces[owner] */
      swap1
      dup2
      mstore
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol":3657:3664  _nonces */
      0xcb
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol":3657:3671  _nonces[owner] */
      0x20
      mstore
      0x40
      swap1
      keccak256
        /* "@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol":929:943  counter._value */
      dup1
      sload
        /* "@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol":1061:1062  1 */
      0x01
        /* "@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol":1043:1062  counter._value += 1 */
      dup2
      add
      dup3
      sstore
        /* "@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol":929:943  counter._value */
      swap1
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol":3716:3733  nonce.increment() */
    tag_413:
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol":3603:3740  {... */
      pop
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol":3526:3740  function _useNonce(address owner) internal virtual returns (uint256 current) {... */
      swap2
      swap1
      pop
      jump	// out
        /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/tokens/GovernanceERC20.sol":3162:3519  function _afterTokenTransfer(... */
    tag_334:
        /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/tokens/GovernanceERC20.sol":3291:3334  super._afterTokenTransfer(from, to, amount) */
      tag_418
        /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/tokens/GovernanceERC20.sol":3317:3321  from */
      dup4
        /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/tokens/GovernanceERC20.sol":3323:3325  to */
      dup4
        /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/tokens/GovernanceERC20.sol":3327:3333  amount */
      dup4
        /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/tokens/GovernanceERC20.sol":3291:3316  super._afterTokenTransfer */
      tag_419
        /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/tokens/GovernanceERC20.sol":3291:3334  super._afterTokenTransfer(from, to, amount) */
      jump	// in
    tag_418:
      sub(shl(0xa0, 0x01), 0x01)
        /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/tokens/GovernanceERC20.sol":3400:3418  from == address(0) */
      dup4
      and
      iszero
        /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/tokens/GovernanceERC20.sol":3400:3438  from == address(0) && to != address(0) */
      dup1
      iszero
      tag_420
      jumpi
      pop
      sub(shl(0xa0, 0x01), 0x01)
        /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/tokens/GovernanceERC20.sol":3422:3438  to != address(0) */
      dup3
      and
      iszero
      iszero
        /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/tokens/GovernanceERC20.sol":3400:3438  from == address(0) && to != address(0) */
    tag_420:
        /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/tokens/GovernanceERC20.sol":3400:3469  from == address(0) && to != address(0) && delegates(to) == address(0) */
      dup1
      iszero
      tag_421
      jumpi
      pop
        /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/tokens/GovernanceERC20.sol":3467:3468  0 */
      0x00
        /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/tokens/GovernanceERC20.sol":3442:3455  delegates(to) */
      tag_422
        /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/tokens/GovernanceERC20.sol":3452:3454  to */
      dup4
        /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/tokens/GovernanceERC20.sol":3442:3451  delegates */
      tag_82
        /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/tokens/GovernanceERC20.sol":3442:3455  delegates(to) */
      jump	// in
    tag_422:
      sub(shl(0xa0, 0x01), 0x01)
        /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/tokens/GovernanceERC20.sol":3442:3469  delegates(to) == address(0) */
      and
      eq
        /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/tokens/GovernanceERC20.sol":3400:3469  from == address(0) && to != address(0) && delegates(to) == address(0) */
    tag_421:
        /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/tokens/GovernanceERC20.sol":3396:3513  if (from == address(0) && to != address(0) && delegates(to) == address(0)) {... */
      iszero
      tag_200
      jumpi
        /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/tokens/GovernanceERC20.sol":3485:3502  _delegate(to, to) */
      tag_200
        /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/tokens/GovernanceERC20.sol":3495:3497  to */
      dup3
        /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/tokens/GovernanceERC20.sol":3499:3501  to */
      dup4
        /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/tokens/GovernanceERC20.sol":3485:3494  _delegate */
      tag_206
        /* "Users/jordan/Desktop/Blockchain/Aragon/core/packages/contracts/contracts/tokens/GovernanceERC20.sol":3485:3502  _delegate(to, to) */
      jump	// in
        /* "@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol":817:970  function average(uint256 a, uint256 b) internal pure returns (uint256) {... */
    tag_346:
        /* "@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol":879:886  uint256 */
      0x00
        /* "@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol":952:963  (a ^ b) / 2 */
      tag_431
        /* "@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol":962:963  2 */
      0x02
        /* "@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol":953:958  a ^ b */
      dup5
      dup5
      xor
        /* "@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol":952:963  (a ^ b) / 2 */
      tag_432
      jump	// in
    tag_431:
        /* "@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol":942:963  (a & b) + (a ^ b) / 2 */
      tag_191
      swap1
        /* "@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol":943:948  a & b */
      dup5
      dup5
      and
        /* "@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol":942:963  (a & b) + (a ^ b) / 2 */
      tag_186
      jump	// in
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":6635:6920  function _mint(address account, uint256 amount) internal virtual override {... */
    tag_374:
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":6719:6747  super._mint(account, amount) */
      tag_436
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":6731:6738  account */
      dup3
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":6740:6746  amount */
      dup3
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":6719:6730  super._mint */
      tag_437
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":6719:6747  super._mint(account, amount) */
      jump	// in
    tag_436:
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":3668:3680  _totalSupply */
      lt(sub(shl(0xe0, 0x01), 0x01), sload(0x67))
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":6765:6794  totalSupply() <= _maxSupply() */
      iszero
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":6757:6847  require(totalSupply() <= _maxSupply(), "ERC20Votes: total supply risks overflowing votes") */
      tag_441
      jumpi
      mload(0x40)
      shl(0xe5, 0x461bcd)
      dup2
      mstore
        /* "#utility.yul":17529:17531   */
      0x20
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":6757:6847  require(totalSupply() <= _maxSupply(), "ERC20Votes: total supply risks overflowing votes") */
      0x04
      dup3
      add
        /* "#utility.yul":17511:17532   */
      mstore
        /* "#utility.yul":17568:17570   */
      0x30
        /* "#utility.yul":17548:17566   */
      0x24
      dup3
      add
        /* "#utility.yul":17541:17571   */
      mstore
        /* "#utility.yul":17607:17641   */
      0x4552433230566f7465733a20746f74616c20737570706c79207269736b73206f
        /* "#utility.yul":17587:17605   */
      0x44
      dup3
      add
        /* "#utility.yul":17580:17642   */
      mstore
      shl(0x80, 0x766572666c6f77696e6720766f746573)
        /* "#utility.yul":17658:17676   */
      0x64
      dup3
      add
        /* "#utility.yul":17651:17697   */
      mstore
        /* "#utility.yul":17714:17733   */
      0x84
      add
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":6757:6847  require(totalSupply() <= _maxSupply(), "ERC20Votes: total supply risks overflowing votes") */
      tag_189
        /* "#utility.yul":17327:17739   */
      jump
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":6757:6847  require(totalSupply() <= _maxSupply(), "ERC20Votes: total supply risks overflowing votes") */
    tag_441:
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":6858:6913  _writeCheckpoint(_totalSupplyCheckpoints, _add, amount) */
      tag_234
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":6875:6898  _totalSupplyCheckpoints */
      0x0100
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":6900:6904  _add */
      tag_445
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":6906:6912  amount */
      dup4
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":6858:6874  _writeCheckpoint */
      tag_446
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":6858:6913  _writeCheckpoint(_totalSupplyCheckpoints, _add, amount) */
      jump	// in
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":8129:8756  function _moveVotingPower(... */
    tag_379:
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":8256:8259  dst */
      dup2
      sub(shl(0xa0, 0x01), 0x01)
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":8249:8259  src != dst */
      and
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":8249:8252  src */
      dup4
      sub(shl(0xa0, 0x01), 0x01)
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":8249:8259  src != dst */
      and
      eq
      iszero
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":8249:8273  src != dst && amount > 0 */
      dup1
      iszero
      tag_448
      jumpi
      pop
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":8272:8273  0 */
      0x00
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":8263:8269  amount */
      dup2
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":8263:8273  amount > 0 */
      gt
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":8249:8273  src != dst && amount > 0 */
    tag_448:
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":8245:8750  if (src != dst && amount > 0) {... */
      iszero
      tag_200
      jumpi
      sub(shl(0xa0, 0x01), 0x01)
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":8293:8310  src != address(0) */
      dup4
      and
      iszero
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":8289:8510  if (src != address(0)) {... */
      tag_450
      jumpi
      sub(shl(0xa0, 0x01), 0x01)
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":8388:8405  _checkpoints[src] */
      dup4
      and
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":8331:8348  uint256 oldWeight */
      0x00
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":8388:8405  _checkpoints[src] */
      swap1
      dup2
      mstore
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":8388:8400  _checkpoints */
      0xff
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":8388:8405  _checkpoints[src] */
      0x20
      mstore
      0x40
      dup2
      keccak256
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":8331:8348  uint256 oldWeight */
      dup2
      swap1
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":8371:8425  _writeCheckpoint(_checkpoints[src], _subtract, amount) */
      tag_451
      swap1
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":8407:8416  _subtract */
      tag_452
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":8418:8424  amount */
      dup6
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":8371:8387  _writeCheckpoint */
      tag_446
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":8371:8425  _writeCheckpoint(_checkpoints[src], _subtract, amount) */
      jump	// in
    tag_451:
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":8330:8425  (uint256 oldWeight, uint256 newWeight) = _writeCheckpoint(_checkpoints[src], _subtract, amount) */
      swap2
      pop
      swap2
      pop
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":8469:8472  src */
      dup5
      sub(shl(0xa0, 0x01), 0x01)
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":8448:8495  DelegateVotesChanged(src, oldWeight, newWeight) */
      and
      0xdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":8474:8483  oldWeight */
      dup4
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":8485:8494  newWeight */
      dup4
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":8448:8495  DelegateVotesChanged(src, oldWeight, newWeight) */
      mload(0x40)
      tag_453
      swap3
      swap2
      swap1
        /* "#utility.yul":17918:17943   */
      swap2
      dup3
      mstore
        /* "#utility.yul":17974:17976   */
      0x20
        /* "#utility.yul":17959:17977   */
      dup3
      add
        /* "#utility.yul":17952:17986   */
      mstore
        /* "#utility.yul":17906:17908   */
      0x40
        /* "#utility.yul":17891:17909   */
      add
      swap1
        /* "#utility.yul":17744:17992   */
      jump
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":8448:8495  DelegateVotesChanged(src, oldWeight, newWeight) */
    tag_453:
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      log2
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":8312:8510  {... */
      pop
      pop
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":8289:8510  if (src != address(0)) {... */
    tag_450:
      sub(shl(0xa0, 0x01), 0x01)
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":8528:8545  dst != address(0) */
      dup3
      and
      iszero
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":8524:8740  if (dst != address(0)) {... */
      tag_200
      jumpi
      sub(shl(0xa0, 0x01), 0x01)
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":8623:8640  _checkpoints[dst] */
      dup3
      and
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":8566:8583  uint256 oldWeight */
      0x00
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":8623:8640  _checkpoints[dst] */
      swap1
      dup2
      mstore
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":8623:8635  _checkpoints */
      0xff
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":8623:8640  _checkpoints[dst] */
      0x20
      mstore
      0x40
      dup2
      keccak256
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":8566:8583  uint256 oldWeight */
      dup2
      swap1
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":8606:8655  _writeCheckpoint(_checkpoints[dst], _add, amount) */
      tag_456
      swap1
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":8642:8646  _add */
      tag_445
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":8648:8654  amount */
      dup6
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":8606:8622  _writeCheckpoint */
      tag_446
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":8606:8655  _writeCheckpoint(_checkpoints[dst], _add, amount) */
      jump	// in
    tag_456:
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":8565:8655  (uint256 oldWeight, uint256 newWeight) = _writeCheckpoint(_checkpoints[dst], _add, amount) */
      swap2
      pop
      swap2
      pop
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":8699:8702  dst */
      dup4
      sub(shl(0xa0, 0x01), 0x01)
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":8678:8725  DelegateVotesChanged(dst, oldWeight, newWeight) */
      and
      0xdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":8704:8713  oldWeight */
      dup4
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":8715:8724  newWeight */
      dup4
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":8678:8725  DelegateVotesChanged(dst, oldWeight, newWeight) */
      mload(0x40)
      tag_457
      swap3
      swap2
      swap1
        /* "#utility.yul":17918:17943   */
      swap2
      dup3
      mstore
        /* "#utility.yul":17974:17976   */
      0x20
        /* "#utility.yul":17959:17977   */
      dup3
      add
        /* "#utility.yul":17952:17986   */
      mstore
        /* "#utility.yul":17906:17908   */
      0x40
        /* "#utility.yul":17891:17909   */
      add
      swap1
        /* "#utility.yul":17744:17992   */
      jump
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":8678:8725  DelegateVotesChanged(dst, oldWeight, newWeight) */
    tag_457:
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      log2
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":8547:8740  {... */
      pop
      pop
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":8129:8756  function _moveVotingPower(... */
      pop
      pop
      pop
      jump	// out
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":2269:2428  function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {... */
    tag_391:
        /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":4910:4923  _initializing */
      sload(0x00)
      0x0100
      swap1
      div
      0xff
      and
        /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":4902:4971  require(_initializing, "Initializable: contract is not initializing") */
      tag_459
      jumpi
      mload(0x40)
      shl(0xe5, 0x461bcd)
      dup2
      mstore
      0x04
      add
      tag_189
      swap1
      tag_388
      jump	// in
    tag_459:
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":2381:2394  _name = name_ */
      dup2
      mload
      tag_462
      swap1
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":2381:2386  _name */
      0x68
      swap1
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":2381:2394  _name = name_ */
      0x20
      dup6
      add
      swap1
      tag_463
      jump	// in
    tag_462:
      pop
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":2404:2421  _symbol = symbol_ */
      dup1
      mload
      tag_200
      swap1
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":2404:2411  _symbol */
      0x69
      swap1
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":2404:2421  _symbol = symbol_ */
      0x20
      dup5
      add
      swap1
      tag_463
      jump	// in
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol":2459:2756  function __EIP712_init_unchained(string memory name, string memory version) internal onlyInitializing {... */
    tag_397:
        /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":4910:4923  _initializing */
      sload(0x00)
      0x0100
      swap1
      div
      0xff
      and
        /* "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":4902:4971  require(_initializing, "Initializable: contract is not initializing") */
      tag_466
      jumpi
      mload(0x40)
      shl(0xe5, 0x461bcd)
      dup2
      mstore
      0x04
      add
      tag_189
      swap1
      tag_388
      jump	// in
    tag_466:
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol":2592:2614  keccak256(bytes(name)) */
      dup2
      mload
      0x20
      swap3
      dup4
      add
      keccak256
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol":2648:2673  keccak256(bytes(version)) */
      dup2
      mload
      swap2
      swap1
      swap3
      add
      keccak256
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol":2683:2695  _HASHED_NAME */
      0x97
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol":2683:2708  _HASHED_NAME = hashedName */
      swap2
      swap1
      swap2
      sstore
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol":2718:2733  _HASHED_VERSION */
      0x98
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol":2718:2749  _HASHED_VERSION = hashedVersion */
      sstore
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol":2459:2756  function __EIP712_init_unchained(string memory name, string memory version) internal onlyInitializing {... */
      jump	// out
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":5832:7435  function tryRecover(... */
    tag_408:
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":5958:5965  address */
      0x00
      dup1
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":6882:6948  0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 */
      0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":6869:6948  uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 */
      dup4
      gt
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":6865:7026  if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {... */
      iszero
      tag_473
      jumpi
      pop
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":6980:6981  0 */
      0x00
      swap1
      pop
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":6984:7014  RecoverError.InvalidSignatureS */
      0x03
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":6964:7015  return (address(0), RecoverError.InvalidSignatureS) */
      jump(tag_472)
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":6865:7026  if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {... */
    tag_473:
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":7039:7040  v */
      dup5
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":7039:7046  v != 27 */
      0xff
      and
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":7044:7046  27 */
      0x1b
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":7039:7046  v != 27 */
      eq
      iszero
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":7039:7057  v != 27 && v != 28 */
      dup1
      iszero
      tag_474
      jumpi
      pop
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":7050:7051  v */
      dup5
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":7050:7057  v != 28 */
      0xff
      and
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":7055:7057  28 */
      0x1c
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":7050:7057  v != 28 */
      eq
      iszero
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":7039:7057  v != 27 && v != 28 */
    tag_474:
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":7035:7135  if (v != 27 && v != 28) {... */
      iszero
      tag_475
      jumpi
      pop
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":7089:7090  0 */
      0x00
      swap1
      pop
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":7093:7123  RecoverError.InvalidSignatureV */
      0x04
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":7073:7124  return (address(0), RecoverError.InvalidSignatureV) */
      jump(tag_472)
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":7035:7135  if (v != 27 && v != 28) {... */
    tag_475:
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":7246:7270  ecrecover(hash, v, r, s) */
      0x40
      dup1
      mload
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":7229:7243  address signer */
      0x00
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":7246:7270  ecrecover(hash, v, r, s) */
      dup1
      dup3
      mstore
      0x20
      dup3
      add
      dup1
      dup5
      mstore
        /* "#utility.yul":18621:18646   */
      dup10
      swap1
      mstore
        /* "#utility.yul":18694:18698   */
      0xff
        /* "#utility.yul":18682:18699   */
      dup9
      and
        /* "#utility.yul":18662:18680   */
      swap3
      dup3
      add
        /* "#utility.yul":18655:18700   */
      swap3
      swap1
      swap3
      mstore
        /* "#utility.yul":18716:18734   */
      0x60
      dup2
      add
        /* "#utility.yul":18709:18743   */
      dup7
      swap1
      mstore
        /* "#utility.yul":18759:18777   */
      0x80
      dup2
      add
        /* "#utility.yul":18752:18786   */
      dup6
      swap1
      mstore
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":7246:7270  ecrecover(hash, v, r, s) */
      0x01
      swap1
        /* "#utility.yul":18593:18612   */
      0xa0
      add
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":7246:7270  ecrecover(hash, v, r, s) */
      0x20
      mload(0x40)
      0x20
      dup2
      sub
      swap1
      dup1
      dup5
      sub
      swap1
      dup6
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_479
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_479:
      pop
      pop
      mload(add(not(0x1f), mload(0x40)))
      swap2
      pop
      pop
      sub(shl(0xa0, 0x01), 0x01)
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":7284:7304  signer == address(0) */
      dup2
      and
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":7280:7381  if (signer == address(0)) {... */
      tag_480
      jumpi
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":7336:7337  0 */
      0x00
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":7340:7369  RecoverError.InvalidSignature */
      0x01
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":7320:7370  return (address(0), RecoverError.InvalidSignature) */
      swap3
      pop
      swap3
      pop
      pop
      jump(tag_472)
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":7280:7381  if (signer == address(0)) {... */
    tag_480:
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":7399:7405  signer */
      swap2
      pop
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":7407:7427  RecoverError.NoError */
      0x00
      swap1
      pop
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":5832:7435  function tryRecover(... */
    tag_472:
      swap5
      pop
      swap5
      swap3
      pop
      pop
      pop
      jump	// out
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":570:1201  function _throwError(RecoverError error) private pure {... */
    tag_410:
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":647:667  RecoverError.NoError */
      0x00
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":638:643  error */
      dup2
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":638:667  error == RecoverError.NoError */
      0x04
      dup2
      gt
      iszero
      tag_486
      jumpi
      tag_486
      tag_484
      jump	// in
    tag_486:
      eq
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":634:1195  if (error == RecoverError.NoError) {... */
      iszero
      tag_487
      jumpi
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":570:1201  function _throwError(RecoverError error) private pure {... */
      pop
      jump	// out
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":634:1195  if (error == RecoverError.NoError) {... */
    tag_487:
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":743:772  RecoverError.InvalidSignature */
      0x01
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":734:739  error */
      dup2
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":734:772  error == RecoverError.InvalidSignature */
      0x04
      dup2
      gt
      iszero
      tag_492
      jumpi
      tag_492
      tag_484
      jump	// in
    tag_492:
      eq
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":730:1195  if (error == RecoverError.InvalidSignature) {... */
      iszero
      tag_493
      jumpi
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":788:822  revert("ECDSA: invalid signature") */
      mload(0x40)
      shl(0xe5, 0x461bcd)
      dup2
      mstore
        /* "#utility.yul":19131:19133   */
      0x20
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":788:822  revert("ECDSA: invalid signature") */
      0x04
      dup3
      add
        /* "#utility.yul":19113:19134   */
      mstore
        /* "#utility.yul":19170:19172   */
      0x18
        /* "#utility.yul":19150:19168   */
      0x24
      dup3
      add
        /* "#utility.yul":19143:19173   */
      mstore
        /* "#utility.yul":19209:19235   */
      0x45434453413a20696e76616c6964207369676e61747572650000000000000000
        /* "#utility.yul":19189:19207   */
      0x44
      dup3
      add
        /* "#utility.yul":19182:19236   */
      mstore
        /* "#utility.yul":19253:19271   */
      0x64
      add
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":788:822  revert("ECDSA: invalid signature") */
      tag_189
        /* "#utility.yul":18929:19277   */
      jump
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":730:1195  if (error == RecoverError.InvalidSignature) {... */
    tag_493:
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":852:887  RecoverError.InvalidSignatureLength */
      0x02
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":843:848  error */
      dup2
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":843:887  error == RecoverError.InvalidSignatureLength */
      0x04
      dup2
      gt
      iszero
      tag_500
      jumpi
      tag_500
      tag_484
      jump	// in
    tag_500:
      eq
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":839:1195  if (error == RecoverError.InvalidSignatureLength) {... */
      iszero
      tag_501
      jumpi
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":903:944  revert("ECDSA: invalid signature length") */
      mload(0x40)
      shl(0xe5, 0x461bcd)
      dup2
      mstore
        /* "#utility.yul":19484:19486   */
      0x20
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":903:944  revert("ECDSA: invalid signature length") */
      0x04
      dup3
      add
        /* "#utility.yul":19466:19487   */
      mstore
        /* "#utility.yul":19523:19525   */
      0x1f
        /* "#utility.yul":19503:19521   */
      0x24
      dup3
      add
        /* "#utility.yul":19496:19526   */
      mstore
        /* "#utility.yul":19562:19595   */
      0x45434453413a20696e76616c6964207369676e6174757265206c656e67746800
        /* "#utility.yul":19542:19560   */
      0x44
      dup3
      add
        /* "#utility.yul":19535:19596   */
      mstore
        /* "#utility.yul":19613:19631   */
      0x64
      add
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":903:944  revert("ECDSA: invalid signature length") */
      tag_189
        /* "#utility.yul":19282:19637   */
      jump
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":839:1195  if (error == RecoverError.InvalidSignatureLength) {... */
    tag_501:
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":974:1004  RecoverError.InvalidSignatureS */
      0x03
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":965:970  error */
      dup2
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":965:1004  error == RecoverError.InvalidSignatureS */
      0x04
      dup2
      gt
      iszero
      tag_508
      jumpi
      tag_508
      tag_484
      jump	// in
    tag_508:
      eq
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":961:1195  if (error == RecoverError.InvalidSignatureS) {... */
      iszero
      tag_509
      jumpi
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":1020:1064  revert("ECDSA: invalid signature 's' value") */
      mload(0x40)
      shl(0xe5, 0x461bcd)
      dup2
      mstore
        /* "#utility.yul":19844:19846   */
      0x20
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":1020:1064  revert("ECDSA: invalid signature 's' value") */
      0x04
      dup3
      add
        /* "#utility.yul":19826:19847   */
      mstore
        /* "#utility.yul":19883:19885   */
      0x22
        /* "#utility.yul":19863:19881   */
      0x24
      dup3
      add
        /* "#utility.yul":19856:19886   */
      mstore
        /* "#utility.yul":19922:19956   */
      0x45434453413a20696e76616c6964207369676e6174757265202773272076616c
        /* "#utility.yul":19902:19920   */
      0x44
      dup3
      add
        /* "#utility.yul":19895:19957   */
      mstore
      shl(0xf0, 0x7565)
        /* "#utility.yul":19973:19991   */
      0x64
      dup3
      add
        /* "#utility.yul":19966:19998   */
      mstore
        /* "#utility.yul":20015:20034   */
      0x84
      add
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":1020:1064  revert("ECDSA: invalid signature 's' value") */
      tag_189
        /* "#utility.yul":19642:20040   */
      jump
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":961:1195  if (error == RecoverError.InvalidSignatureS) {... */
    tag_509:
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":1094:1124  RecoverError.InvalidSignatureV */
      0x04
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":1085:1090  error */
      dup2
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":1085:1124  error == RecoverError.InvalidSignatureV */
      0x04
      dup2
      gt
      iszero
      tag_516
      jumpi
      tag_516
      tag_484
      jump	// in
    tag_516:
      eq
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":1081:1195  if (error == RecoverError.InvalidSignatureV) {... */
      iszero
      tag_204
      jumpi
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":1140:1184  revert("ECDSA: invalid signature 'v' value") */
      mload(0x40)
      shl(0xe5, 0x461bcd)
      dup2
      mstore
        /* "#utility.yul":20247:20249   */
      0x20
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":1140:1184  revert("ECDSA: invalid signature 'v' value") */
      0x04
      dup3
      add
        /* "#utility.yul":20229:20250   */
      mstore
        /* "#utility.yul":20286:20288   */
      0x22
        /* "#utility.yul":20266:20284   */
      0x24
      dup3
      add
        /* "#utility.yul":20259:20289   */
      mstore
        /* "#utility.yul":20325:20359   */
      0x45434453413a20696e76616c6964207369676e6174757265202776272076616c
        /* "#utility.yul":20305:20323   */
      0x44
      dup3
      add
        /* "#utility.yul":20298:20360   */
      mstore
      shl(0xf0, 0x7565)
        /* "#utility.yul":20376:20394   */
      0x64
      dup3
      add
        /* "#utility.yul":20369:20401   */
      mstore
        /* "#utility.yul":20418:20437   */
      0x84
      add
        /* "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":1140:1184  revert("ECDSA: invalid signature 'v' value") */
      tag_189
        /* "#utility.yul":20045:20443   */
      jump
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":7332:7586  function _afterTokenTransfer(... */
    tag_419:
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":7523:7579  _moveVotingPower(delegates(from), delegates(to), amount) */
      tag_200
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":7540:7555  delegates(from) */
      tag_525
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":7550:7554  from */
      dup5
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":7540:7549  delegates */
      tag_82
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":7540:7555  delegates(from) */
      jump	// in
    tag_525:
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":7557:7570  delegates(to) */
      tag_526
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":7567:7569  to */
      dup5
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":7557:7566  delegates */
      tag_82
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":7557:7570  delegates(to) */
      jump	// in
    tag_526:
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":7572:7578  amount */
      dup4
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":7523:7539  _moveVotingPower */
      tag_379
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":7523:7579  _moveVotingPower(delegates(from), delegates(to), amount) */
      jump	// in
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":8739:9128  function _mint(address account, uint256 amount) internal virtual {... */
    tag_437:
      sub(shl(0xa0, 0x01), 0x01)
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":8822:8843  account != address(0) */
      dup3
      and
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":8814:8879  require(account != address(0), "ERC20: mint to the zero address") */
      tag_528
      jumpi
      mload(0x40)
      shl(0xe5, 0x461bcd)
      dup2
      mstore
        /* "#utility.yul":20650:20652   */
      0x20
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":8814:8879  require(account != address(0), "ERC20: mint to the zero address") */
      0x04
      dup3
      add
        /* "#utility.yul":20632:20653   */
      mstore
        /* "#utility.yul":20689:20691   */
      0x1f
        /* "#utility.yul":20669:20687   */
      0x24
      dup3
      add
        /* "#utility.yul":20662:20692   */
      mstore
        /* "#utility.yul":20728:20761   */
      0x45524332303a206d696e7420746f20746865207a65726f206164647265737300
        /* "#utility.yul":20708:20726   */
      0x44
      dup3
      add
        /* "#utility.yul":20701:20762   */
      mstore
        /* "#utility.yul":20779:20797   */
      0x64
      add
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":8814:8879  require(account != address(0), "ERC20: mint to the zero address") */
      tag_189
        /* "#utility.yul":20448:20803   */
      jump
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":8814:8879  require(account != address(0), "ERC20: mint to the zero address") */
    tag_528:
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":8966:8972  amount */
      dup1
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":8950:8962  _totalSupply */
      0x67
      0x00
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":8950:8972  _totalSupply += amount */
      dup3
      dup3
      sload
      tag_532
      swap2
      swap1
      tag_186
      jump	// in
    tag_532:
      swap1
      swap2
      sstore
      pop
      pop
      sub(shl(0xa0, 0x01), 0x01)
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":8982:9000  _balances[account] */
      dup3
      and
      0x00
      swap1
      dup2
      mstore
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":8982:8991  _balances */
      0x65
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":8982:9000  _balances[account] */
      0x20
      mstore
      0x40
      dup2
      keccak256
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":8982:9010  _balances[account] += amount */
      dup1
      sload
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":9004:9010  amount */
      dup4
      swap3
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":8982:9000  _balances[account] */
      swap1
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":8982:9010  _balances[account] += amount */
      tag_533
      swap1
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":9004:9010  amount */
      dup5
      swap1
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":8982:9010  _balances[account] += amount */
      tag_186
      jump	// in
    tag_533:
      swap1
      swap2
      sstore
      pop
      pop
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":9025:9062  Transfer(address(0), account, amount) */
      mload(0x40)
        /* "#utility.yul":1682:1707   */
      dup2
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":9025:9062  Transfer(address(0), account, amount) */
      dup4
      and
      swap1
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":9042:9043  0 */
      0x00
      swap1
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":9025:9062  Transfer(address(0), account, amount) */
      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
      swap1
        /* "#utility.yul":1670:1672   */
      0x20
        /* "#utility.yul":1655:1673   */
      add
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":9025:9062  Transfer(address(0), account, amount) */
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      log3
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":9073:9121  _afterTokenTransfer(address(0), account, amount) */
      tag_373
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":9101:9102  0 */
      0x00
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":9105:9112  account */
      dup4
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":9114:9120  amount */
      dup4
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":9073:9092  _afterTokenTransfer */
      tag_334
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":9073:9121  _afterTokenTransfer(address(0), account, amount) */
      jump	// in
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":9432:9528  function _add(uint256 a, uint256 b) private pure returns (uint256) {... */
    tag_445:
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":9490:9497  uint256 */
      0x00
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":9516:9521  a + b */
      tag_191
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":9520:9521  b */
      dup3
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":9516:9517  a */
      dup5
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":9516:9521  a + b */
      tag_186
      jump	// in
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":8762:9426  function _writeCheckpoint(... */
    tag_446:
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":8994:9006  ckpts.length */
      dup3
      sload
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":8932:8949  uint256 oldWeight */
      0x00
      swap1
      dup2
      swap1
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":9028:9036  pos == 0 */
      dup1
      iszero
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":9028:9063  pos == 0 ? 0 : ckpts[pos - 1].votes */
      tag_540
      jumpi
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":9043:9048  ckpts */
      dup6
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":9049:9056  pos - 1 */
      tag_541
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":9055:9056  1 */
      0x01
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":9049:9052  pos */
      dup4
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":9049:9056  pos - 1 */
      tag_247
      jump	// in
    tag_541:
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":9043:9057  ckpts[pos - 1] */
      dup2
      sload
      dup2
      lt
      tag_543
      jumpi
      tag_543
      tag_250
      jump	// in
    tag_543:
      0x00
      swap2
      dup3
      mstore
      0x20
      swap1
      swap2
      keccak256
      add
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":9043:9063  ckpts[pos - 1].votes */
      sload
      0x0100000000
      swap1
      div
      sub(shl(0xe0, 0x01), 0x01)
      and
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":9028:9063  pos == 0 ? 0 : ckpts[pos - 1].votes */
      jump(tag_545)
    tag_540:
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":9039:9040  0 */
      0x00
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":9028:9063  pos == 0 ? 0 : ckpts[pos - 1].votes */
    tag_545:
      sub(shl(0xe0, 0x01), 0x01)
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":9016:9063  oldWeight = pos == 0 ? 0 : ckpts[pos - 1].votes */
      and
      swap3
      pop
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":9085:9105  op(oldWeight, delta) */
      tag_546
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":9088:9097  oldWeight */
      dup4
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":9099:9104  delta */
      dup6
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":9085:9087  op */
      dup8
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":9085:9105  op(oldWeight, delta) */
      0xffffffff
      and
      jump	// in
    tag_546:
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":9073:9105  newWeight = op(oldWeight, delta) */
      swap2
      pop
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":9126:9127  0 */
      0x00
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":9120:9123  pos */
      dup2
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":9120:9127  pos > 0 */
      gt
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":9120:9171  pos > 0 && ckpts[pos - 1].fromBlock == block.number */
      dup1
      iszero
      tag_547
      jumpi
      pop
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":9159:9171  block.number */
      number
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":9131:9136  ckpts */
      dup7
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":9137:9144  pos - 1 */
      tag_548
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":9143:9144  1 */
      0x01
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":9137:9140  pos */
      dup5
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":9137:9144  pos - 1 */
      tag_247
      jump	// in
    tag_548:
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":9131:9145  ckpts[pos - 1] */
      dup2
      sload
      dup2
      lt
      tag_550
      jumpi
      tag_550
      tag_250
      jump	// in
    tag_550:
      0x00
      swap2
      dup3
      mstore
      0x20
      swap1
      swap2
      keccak256
      add
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":9131:9155  ckpts[pos - 1].fromBlock */
      sload
      0xffffffff
      and
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":9131:9171  ckpts[pos - 1].fromBlock == block.number */
      eq
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":9120:9171  pos > 0 && ckpts[pos - 1].fromBlock == block.number */
    tag_547:
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":9116:9420  if (pos > 0 && ckpts[pos - 1].fromBlock == block.number) {... */
      iszero
      tag_552
      jumpi
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":9210:9250  SafeCastUpgradeable.toUint224(newWeight) */
      tag_553
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":9240:9249  newWeight */
      dup3
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":9210:9239  SafeCastUpgradeable.toUint224 */
      tag_554
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":9210:9250  SafeCastUpgradeable.toUint224(newWeight) */
      jump	// in
    tag_553:
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":9187:9192  ckpts */
      dup7
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":9193:9200  pos - 1 */
      tag_555
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":9199:9200  1 */
      0x01
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":9193:9196  pos */
      dup5
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":9193:9200  pos - 1 */
      tag_247
      jump	// in
    tag_555:
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":9187:9201  ckpts[pos - 1] */
      dup2
      sload
      dup2
      lt
      tag_557
      jumpi
      tag_557
      tag_250
      jump	// in
    tag_557:
      swap1
      0x00
      mstore
      keccak256(0x00, 0x20)
      add
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":9187:9207  ckpts[pos - 1].votes */
      0x00
      add
      0x04
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":9187:9250  ckpts[pos - 1].votes = SafeCastUpgradeable.toUint224(newWeight) */
      0x0100
      exp
      dup2
      sload
      dup2
      sub(shl(0xe0, 0x01), 0x01)
      mul
      not
      and
      swap1
      dup4
      sub(shl(0xe0, 0x01), 0x01)
      and
      mul
      or
      swap1
      sstore
      pop
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":9116:9420  if (pos > 0 && ckpts[pos - 1].fromBlock == block.number) {... */
      jump(tag_559)
    tag_552:
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":9281:9286  ckpts */
      dup6
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":9292:9408  Checkpoint({fromBlock: SafeCastUpgradeable.toUint32(block.number), votes: SafeCastUpgradeable.toUint224(newWeight)}) */
      mload(0x40)
      dup1
      0x40
      add
      0x40
      mstore
      dup1
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":9315:9357  SafeCastUpgradeable.toUint32(block.number) */
      tag_560
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":9344:9356  block.number */
      number
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":9315:9343  SafeCastUpgradeable.toUint32 */
      tag_209
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":9315:9357  SafeCastUpgradeable.toUint32(block.number) */
      jump	// in
    tag_560:
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":9292:9408  Checkpoint({fromBlock: SafeCastUpgradeable.toUint32(block.number), votes: SafeCastUpgradeable.toUint224(newWeight)}) */
      0xffffffff
      and
      dup2
      mstore
      0x20
      add
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":9366:9406  SafeCastUpgradeable.toUint224(newWeight) */
      tag_561
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":9396:9405  newWeight */
      dup6
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":9366:9395  SafeCastUpgradeable.toUint224 */
      tag_554
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":9366:9406  SafeCastUpgradeable.toUint224(newWeight) */
      jump	// in
    tag_561:
      sub(shl(0xe0, 0x01), 0x01)
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":9292:9408  Checkpoint({fromBlock: SafeCastUpgradeable.toUint32(block.number), votes: SafeCastUpgradeable.toUint224(newWeight)}) */
      swap1
      dup2
      and
      swap1
      swap2
      mstore
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":9281:9409  ckpts.push(Checkpoint({fromBlock: SafeCastUpgradeable.toUint32(block.number), votes: SafeCastUpgradeable.toUint224(newWeight)})) */
      dup3
      sload
      0x01
      dup2
      add
      dup5
      sstore
      0x00
      swap4
      dup5
      mstore
      0x20
      swap4
      dup5
      swap1
      keccak256
      dup4
      mload
      swap5
      swap1
      swap4
      add
      mload
      swap1
      swap2
      and
      0x0100000000
      mul
      0xffffffff
      swap1
      swap4
      and
      swap3
      swap1
      swap3
      or
      swap2
      add
      sstore
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":9116:9420  if (pos > 0 && ckpts[pos - 1].fromBlock == block.number) {... */
    tag_559:
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":8970:9426  {... */
      pop
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":8762:9426  function _writeCheckpoint(... */
      swap4
      pop
      swap4
      swap2
      pop
      pop
      jump	// out
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":9534:9635  function _subtract(uint256 a, uint256 b) private pure returns (uint256) {... */
    tag_452:
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":9597:9604  uint256 */
      0x00
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":9623:9628  a - b */
      tag_191
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":9627:9628  b */
      dup3
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":9623:9624  a */
      dup5
        /* "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":9623:9628  a - b */
      tag_247
      jump	// in
        /* "@openzeppelin/contracts-upgradeable/utils/math/SafeCastUpgradeable.sol":2762:2954  function toUint224(uint256 value) internal pure returns (uint224) {... */
    tag_554:
        /* "@openzeppelin/contracts-upgradeable/utils/math/SafeCastUpgradeable.sol":2819:2826  uint224 */
      0x00
      sub(shl(0xe0, 0x01), 0x01)
        /* "@openzeppelin/contracts-upgradeable/utils/math/SafeCastUpgradeable.sol":2846:2872  value <= type(uint224).max */
      dup3
      gt
      iszero
        /* "@openzeppelin/contracts-upgradeable/utils/math/SafeCastUpgradeable.sol":2838:2916  require(value <= type(uint224).max, "SafeCast: value doesn't fit in 224 bits") */
      tag_381
      jumpi
      mload(0x40)
      shl(0xe5, 0x461bcd)
      dup2
      mstore
        /* "#utility.yul":21010:21012   */
      0x20
        /* "@openzeppelin/contracts-upgradeable/utils/math/SafeCastUpgradeable.sol":2838:2916  require(value <= type(uint224).max, "SafeCast: value doesn't fit in 224 bits") */
      0x04
      dup3
      add
        /* "#utility.yul":20992:21013   */
      mstore
        /* "#utility.yul":21049:21051   */
      0x27
        /* "#utility.yul":21029:21047   */
      0x24
      dup3
      add
        /* "#utility.yul":21022:21052   */
      mstore
        /* "#utility.yul":21088:21122   */
      0x53616665436173743a2076616c756520646f65736e27742066697420696e2032
        /* "#utility.yul":21068:21086   */
      0x44
      dup3
      add
        /* "#utility.yul":21061:21123   */
      mstore
      shl(0xc8, 0x32342062697473)
        /* "#utility.yul":21139:21157   */
      0x64
      dup3
      add
        /* "#utility.yul":21132:21169   */
      mstore
        /* "#utility.yul":21186:21205   */
      0x84
      add
        /* "@openzeppelin/contracts-upgradeable/utils/math/SafeCastUpgradeable.sol":2838:2916  require(value <= type(uint224).max, "SafeCast: value doesn't fit in 224 bits") */
      tag_189
        /* "#utility.yul":20808:21211   */
      jump
    tag_463:
      dup3
      dup1
      sload
      tag_570
      swap1
      tag_160
      jump	// in
    tag_570:
      swap1
      0x00
      mstore
      keccak256(0x00, 0x20)
      swap1
      0x1f
      add
      0x20
      swap1
      div
      dup2
      add
      swap3
      dup3
      tag_572
      jumpi
      0x00
      dup6
      sstore
      jump(tag_575)
    tag_572:
      dup3
      0x1f
      lt
      tag_573
      jumpi
      dup1
      mload
      not(0xff)
      and
      dup4
      dup1
      add
      or
      dup6
      sstore
      jump(tag_575)
    tag_573:
      dup3
      dup1
      add
      0x01
      add
      dup6
      sstore
      dup3
      iszero
      tag_575
      jumpi
      swap2
      dup3
      add
    tag_574:
      dup3
      dup2
      gt
      iszero
      tag_575
      jumpi
      dup3
      mload
      dup3
      sstore
      swap2
      0x20
      add
      swap2
      swap1
      0x01
      add
      swap1
      jump(tag_574)
    tag_575:
      pop
      tag_381
      swap3
      swap2
      pop
    tag_578:
      dup1
      dup3
      gt
      iszero
      tag_381
      jumpi
      0x00
      dup2
      sstore
      0x01
      add
      jump(tag_578)
        /* "#utility.yul":14:300   */
    tag_38:
        /* "#utility.yul":72:78   */
      0x00
        /* "#utility.yul":125:127   */
      0x20
        /* "#utility.yul":113:122   */
      dup3
        /* "#utility.yul":104:111   */
      dup5
        /* "#utility.yul":100:123   */
      sub
        /* "#utility.yul":96:128   */
      slt
        /* "#utility.yul":93:145   */
      iszero
      tag_587
      jumpi
        /* "#utility.yul":141:142   */
      0x00
        /* "#utility.yul":138:139   */
      dup1
        /* "#utility.yul":131:143   */
      revert
        /* "#utility.yul":93:145   */
    tag_587:
        /* "#utility.yul":167:190   */
      dup2
      calldataload
      not(sub(shl(0xe0, 0x01), 0x01))
        /* "#utility.yul":219:251   */
      dup2
      and
        /* "#utility.yul":209:252   */
      dup2
      eq
        /* "#utility.yul":199:270   */
      tag_191
      jumpi
        /* "#utility.yul":266:267   */
      0x00
        /* "#utility.yul":263:264   */
      dup1
        /* "#utility.yul":256:268   */
      revert
        /* "#utility.yul":497:1094   */
    tag_45:
        /* "#utility.yul":609:613   */
      0x00
        /* "#utility.yul":638:640   */
      0x20
        /* "#utility.yul":667:669   */
      dup1
        /* "#utility.yul":656:665   */
      dup4
        /* "#utility.yul":649:670   */
      mstore
        /* "#utility.yul":699:705   */
      dup4
        /* "#utility.yul":693:706   */
      mload
        /* "#utility.yul":742:748   */
      dup1
        /* "#utility.yul":737:739   */
      dup3
        /* "#utility.yul":726:735   */
      dup6
        /* "#utility.yul":722:740   */
      add
        /* "#utility.yul":715:749   */
      mstore
        /* "#utility.yul":767:768   */
      0x00
        /* "#utility.yul":777:917   */
    tag_591:
        /* "#utility.yul":791:797   */
      dup2
        /* "#utility.yul":788:789   */
      dup2
        /* "#utility.yul":785:798   */
      lt
        /* "#utility.yul":777:917   */
      iszero
      tag_593
      jumpi
        /* "#utility.yul":886:900   */
      dup6
      dup2
      add
        /* "#utility.yul":882:905   */
      dup4
      add
        /* "#utility.yul":876:906   */
      mload
        /* "#utility.yul":852:869   */
      dup6
      dup3
      add
        /* "#utility.yul":871:873   */
      0x40
        /* "#utility.yul":848:874   */
      add
        /* "#utility.yul":841:907   */
      mstore
        /* "#utility.yul":806:816   */
      dup3
      add
        /* "#utility.yul":777:917   */
      jump(tag_591)
    tag_593:
        /* "#utility.yul":935:941   */
      dup2
        /* "#utility.yul":932:933   */
      dup2
        /* "#utility.yul":929:942   */
      gt
        /* "#utility.yul":926:1017   */
      iszero
      tag_594
      jumpi
        /* "#utility.yul":1005:1006   */
      0x00
        /* "#utility.yul":1000:1002   */
      0x40
        /* "#utility.yul":991:997   */
      dup4
        /* "#utility.yul":980:989   */
      dup8
        /* "#utility.yul":976:998   */
      add
        /* "#utility.yul":972:1003   */
      add
        /* "#utility.yul":965:1007   */
      mstore
        /* "#utility.yul":926:1017   */
    tag_594:
      pop
        /* "#utility.yul":1078:1080   */
      0x1f
        /* "#utility.yul":1057:1072   */
      add
      not(0x1f)
        /* "#utility.yul":1053:1082   */
      and
        /* "#utility.yul":1038:1083   */
      swap3
      swap1
      swap3
      add
        /* "#utility.yul":1085:1087   */
      0x40
        /* "#utility.yul":1034:1088   */
      add
      swap4
        /* "#utility.yul":497:1094   */
      swap3
      pop
      pop
      pop
      jump	// out
        /* "#utility.yul":1099:1272   */
    tag_580:
        /* "#utility.yul":1167:1187   */
      dup1
      calldataload
      sub(shl(0xa0, 0x01), 0x01)
        /* "#utility.yul":1216:1247   */
      dup2
      and
        /* "#utility.yul":1206:1248   */
      dup2
      eq
        /* "#utility.yul":1196:1266   */
      tag_596
      jumpi
        /* "#utility.yul":1262:1263   */
      0x00
        /* "#utility.yul":1259:1260   */
      dup1
        /* "#utility.yul":1252:1264   */
      revert
        /* "#utility.yul":1196:1266   */
    tag_596:
        /* "#utility.yul":1099:1272   */
      swap2
      swap1
      pop
      jump	// out
        /* "#utility.yul":1277:1531   */
    tag_48:
        /* "#utility.yul":1345:1351   */
      0x00
        /* "#utility.yul":1353:1359   */
      dup1
        /* "#utility.yul":1406:1408   */
      0x40
        /* "#utility.yul":1394:1403   */
      dup4
        /* "#utility.yul":1385:1392   */
      dup6
        /* "#utility.yul":1381:1404   */
      sub
        /* "#utility.yul":1377:1409   */
      slt
        /* "#utility.yul":1374:1426   */
      iszero
      tag_598
      jumpi
        /* "#utility.yul":1422:1423   */
      0x00
        /* "#utility.yul":1419:1420   */
      dup1
        /* "#utility.yul":1412:1424   */
      revert
        /* "#utility.yul":1374:1426   */
    tag_598:
        /* "#utility.yul":1445:1474   */
      tag_599
        /* "#utility.yul":1464:1473   */
      dup4
        /* "#utility.yul":1445:1474   */
      tag_580
      jump	// in
    tag_599:
        /* "#utility.yul":1435:1474   */
      swap5
        /* "#utility.yul":1521:1523   */
      0x20
        /* "#utility.yul":1506:1524   */
      swap4
      swap1
      swap4
      add
        /* "#utility.yul":1493:1525   */
      calldataload
      swap4
      pop
      pop
      pop
        /* "#utility.yul":1277:1531   */
      jump	// out
        /* "#utility.yul":1718:2046   */
    tag_57:
        /* "#utility.yul":1795:1801   */
      0x00
        /* "#utility.yul":1803:1809   */
      dup1
        /* "#utility.yul":1811:1817   */
      0x00
        /* "#utility.yul":1864:1866   */
      0x60
        /* "#utility.yul":1852:1861   */
      dup5
        /* "#utility.yul":1843:1850   */
      dup7
        /* "#utility.yul":1839:1862   */
      sub
        /* "#utility.yul":1835:1867   */
      slt
        /* "#utility.yul":1832:1884   */
      iszero
      tag_602
      jumpi
        /* "#utility.yul":1880:1881   */
      0x00
        /* "#utility.yul":1877:1878   */
      dup1
        /* "#utility.yul":1870:1882   */
      revert
        /* "#utility.yul":1832:1884   */
    tag_602:
        /* "#utility.yul":1903:1932   */
      tag_603
        /* "#utility.yul":1922:1931   */
      dup5
        /* "#utility.yul":1903:1932   */
      tag_580
      jump	// in
    tag_603:
        /* "#utility.yul":1893:1932   */
      swap3
      pop
        /* "#utility.yul":1951:1989   */
      tag_604
        /* "#utility.yul":1985:1987   */
      0x20
        /* "#utility.yul":1974:1983   */
      dup6
        /* "#utility.yul":1970:1988   */
      add
        /* "#utility.yul":1951:1989   */
      tag_580
      jump	// in
    tag_604:
        /* "#utility.yul":1941:1989   */
      swap2
      pop
        /* "#utility.yul":2036:2038   */
      0x40
        /* "#utility.yul":2025:2034   */
      dup5
        /* "#utility.yul":2021:2039   */
      add
        /* "#utility.yul":2008:2040   */
      calldataload
        /* "#utility.yul":1998:2040   */
      swap1
      pop
        /* "#utility.yul":1718:2046   */
      swap3
      pop
      swap3
      pop
      swap3
      jump	// out
        /* "#utility.yul":2422:2608   */
    tag_81:
        /* "#utility.yul":2481:2487   */
      0x00
        /* "#utility.yul":2534:2536   */
      0x20
        /* "#utility.yul":2522:2531   */
      dup3
        /* "#utility.yul":2513:2520   */
      dup5
        /* "#utility.yul":2509:2532   */
      sub
        /* "#utility.yul":2505:2537   */
      slt
        /* "#utility.yul":2502:2554   */
      iszero
      tag_608
      jumpi
        /* "#utility.yul":2550:2551   */
      0x00
        /* "#utility.yul":2547:2548   */
      dup1
        /* "#utility.yul":2540:2552   */
      revert
        /* "#utility.yul":2502:2554   */
    tag_608:
        /* "#utility.yul":2573:2602   */
      tag_191
        /* "#utility.yul":2592:2601   */
      dup3
        /* "#utility.yul":2573:2602   */
      tag_580
      jump	// in
        /* "#utility.yul":3018:3198   */
    tag_103:
        /* "#utility.yul":3077:3083   */
      0x00
        /* "#utility.yul":3130:3132   */
      0x20
        /* "#utility.yul":3118:3127   */
      dup3
        /* "#utility.yul":3109:3116   */
      dup5
        /* "#utility.yul":3105:3128   */
      sub
        /* "#utility.yul":3101:3133   */
      slt
        /* "#utility.yul":3098:3150   */
      iszero
      tag_613
      jumpi
        /* "#utility.yul":3146:3147   */
      0x00
        /* "#utility.yul":3143:3144   */
      dup1
        /* "#utility.yul":3136:3148   */
      revert
        /* "#utility.yul":3098:3150   */
    tag_613:
      pop
        /* "#utility.yul":3169:3192   */
      calldataload
      swap2
        /* "#utility.yul":3018:3198   */
      swap1
      pop
      jump	// out
        /* "#utility.yul":3203:3330   */
    tag_581:
        /* "#utility.yul":3264:3274   */
      0x4e487b71
        /* "#utility.yul":3259:3262   */
      0xe0
        /* "#utility.yul":3255:3275   */
      shl
        /* "#utility.yul":3252:3253   */
      0x00
        /* "#utility.yul":3245:3276   */
      mstore
        /* "#utility.yul":3295:3299   */
      0x41
        /* "#utility.yul":3292:3293   */
      0x04
        /* "#utility.yul":3285:3300   */
      mstore
        /* "#utility.yul":3319:3323   */
      0x24
        /* "#utility.yul":3316:3317   */
      0x00
        /* "#utility.yul":3309:3324   */
      revert
        /* "#utility.yul":3335:4054   */
    tag_582:
        /* "#utility.yul":3378:3383   */
      0x00
        /* "#utility.yul":3431:3434   */
      dup3
        /* "#utility.yul":3424:3428   */
      0x1f
        /* "#utility.yul":3416:3422   */
      dup4
        /* "#utility.yul":3412:3429   */
      add
        /* "#utility.yul":3408:3435   */
      slt
        /* "#utility.yul":3398:3453   */
      tag_616
      jumpi
        /* "#utility.yul":3449:3450   */
      0x00
        /* "#utility.yul":3446:3447   */
      dup1
        /* "#utility.yul":3439:3451   */
      revert
        /* "#utility.yul":3398:3453   */
    tag_616:
        /* "#utility.yul":3485:3491   */
      dup2
        /* "#utility.yul":3472:3492   */
      calldataload
        /* "#utility.yul":3511:3529   */
      0xffffffffffffffff
        /* "#utility.yul":3548:3550   */
      dup1
        /* "#utility.yul":3544:3546   */
      dup3
        /* "#utility.yul":3541:3551   */
      gt
        /* "#utility.yul":3538:3574   */
      iszero
      tag_618
      jumpi
        /* "#utility.yul":3554:3572   */
      tag_618
      tag_581
      jump	// in
    tag_618:
        /* "#utility.yul":3629:3631   */
      0x40
        /* "#utility.yul":3623:3632   */
      mload
        /* "#utility.yul":3597:3599   */
      0x1f
        /* "#utility.yul":3683:3696   */
      dup4
      add
      not(0x1f)
        /* "#utility.yul":3679:3701   */
      swap1
      dup2
      and
        /* "#utility.yul":3703:3705   */
      0x3f
        /* "#utility.yul":3675:3706   */
      add
        /* "#utility.yul":3671:3711   */
      and
        /* "#utility.yul":3659:3712   */
      dup2
      add
      swap1
        /* "#utility.yul":3727:3745   */
      dup3
      dup3
      gt
        /* "#utility.yul":3747:3769   */
      dup2
      dup4
      lt
        /* "#utility.yul":3724:3770   */
      or
        /* "#utility.yul":3721:3793   */
      iszero
      tag_620
      jumpi
        /* "#utility.yul":3773:3791   */
      tag_620
      tag_581
      jump	// in
    tag_620:
        /* "#utility.yul":3813:3823   */
      dup2
        /* "#utility.yul":3809:3811   */
      0x40
        /* "#utility.yul":3802:3824   */
      mstore
        /* "#utility.yul":3848:3850   */
      dup4
        /* "#utility.yul":3840:3846   */
      dup2
        /* "#utility.yul":3833:3851   */
      mstore
        /* "#utility.yul":3894:3897   */
      dup7
        /* "#utility.yul":3887:3891   */
      0x20
        /* "#utility.yul":3882:3884   */
      dup6
        /* "#utility.yul":3874:3880   */
      dup9
        /* "#utility.yul":3870:3885   */
      add
        /* "#utility.yul":3866:3892   */
      add
        /* "#utility.yul":3863:3898   */
      gt
        /* "#utility.yul":3860:3915   */
      iszero
      tag_621
      jumpi
        /* "#utility.yul":3911:3912   */
      0x00
        /* "#utility.yul":3908:3909   */
      dup1
        /* "#utility.yul":3901:3913   */
      revert
        /* "#utility.yul":3860:3915   */
    tag_621:
        /* "#utility.yul":3975:3977   */
      dup4
        /* "#utility.yul":3968:3972   */
      0x20
        /* "#utility.yul":3960:3966   */
      dup8
        /* "#utility.yul":3956:3973   */
      add
        /* "#utility.yul":3949:3953   */
      0x20
        /* "#utility.yul":3941:3947   */
      dup4
        /* "#utility.yul":3937:3954   */
      add
        /* "#utility.yul":3924:3978   */
      calldatacopy
        /* "#utility.yul":4022:4023   */
      0x00
        /* "#utility.yul":4015:4019   */
      0x20
        /* "#utility.yul":4010:4012   */
      dup6
        /* "#utility.yul":4002:4008   */
      dup4
        /* "#utility.yul":3998:4013   */
      add
        /* "#utility.yul":3994:4020   */
      add
        /* "#utility.yul":3987:4024   */
      mstore
        /* "#utility.yul":4042:4048   */
      dup1
        /* "#utility.yul":4033:4048   */
      swap5
      pop
      pop
      pop
      pop
      pop
        /* "#utility.yul":3335:4054   */
      swap3
      swap2
      pop
      pop
      jump	// out
        /* "#utility.yul":4059:4676   */
    tag_108:
        /* "#utility.yul":4156:4162   */
      0x00
        /* "#utility.yul":4164:4170   */
      dup1
        /* "#utility.yul":4172:4178   */
      0x00
        /* "#utility.yul":4225:4227   */
      0x60
        /* "#utility.yul":4213:4222   */
      dup5
        /* "#utility.yul":4204:4211   */
      dup7
        /* "#utility.yul":4200:4223   */
      sub
        /* "#utility.yul":4196:4228   */
      slt
        /* "#utility.yul":4193:4245   */
      iszero
      tag_623
      jumpi
        /* "#utility.yul":4241:4242   */
      0x00
        /* "#utility.yul":4238:4239   */
      dup1
        /* "#utility.yul":4231:4243   */
      revert
        /* "#utility.yul":4193:4245   */
    tag_623:
        /* "#utility.yul":4264:4293   */
      tag_624
        /* "#utility.yul":4283:4292   */
      dup5
        /* "#utility.yul":4264:4293   */
      tag_580
      jump	// in
    tag_624:
        /* "#utility.yul":4254:4293   */
      swap3
      pop
        /* "#utility.yul":4344:4346   */
      0x20
        /* "#utility.yul":4333:4342   */
      dup5
        /* "#utility.yul":4329:4347   */
      add
        /* "#utility.yul":4316:4348   */
      calldataload
        /* "#utility.yul":4367:4385   */
      0xffffffffffffffff
        /* "#utility.yul":4408:4410   */
      dup1
        /* "#utility.yul":4400:4406   */
      dup3
        /* "#utility.yul":4397:4411   */
      gt
        /* "#utility.yul":4394:4428   */
      iszero
      tag_625
      jumpi
        /* "#utility.yul":4424:4425   */
      0x00
        /* "#utility.yul":4421:4422   */
      dup1
        /* "#utility.yul":4414:4426   */
      revert
        /* "#utility.yul":4394:4428   */
    tag_625:
        /* "#utility.yul":4447:4497   */
      tag_626
        /* "#utility.yul":4489:4496   */
      dup8
        /* "#utility.yul":4480:4486   */
      dup4
        /* "#utility.yul":4469:4478   */
      dup9
        /* "#utility.yul":4465:4487   */
      add
        /* "#utility.yul":4447:4497   */
      tag_582
      jump	// in
    tag_626:
        /* "#utility.yul":4437:4497   */
      swap4
      pop
        /* "#utility.yul":4550:4552   */
      0x40
        /* "#utility.yul":4539:4548   */
      dup7
        /* "#utility.yul":4535:4553   */
      add
        /* "#utility.yul":4522:4554   */
      calldataload
        /* "#utility.yul":4506:4554   */
      swap2
      pop
        /* "#utility.yul":4579:4581   */
      dup1
        /* "#utility.yul":4569:4577   */
      dup3
        /* "#utility.yul":4566:4582   */
      gt
        /* "#utility.yul":4563:4599   */
      iszero
      tag_627
      jumpi
        /* "#utility.yul":4595:4596   */
      0x00
        /* "#utility.yul":4592:4593   */
      dup1
        /* "#utility.yul":4585:4597   */
      revert
        /* "#utility.yul":4563:4599   */
    tag_627:
      pop
        /* "#utility.yul":4618:4670   */
      tag_628
        /* "#utility.yul":4662:4669   */
      dup7
        /* "#utility.yul":4651:4659   */
      dup3
        /* "#utility.yul":4640:4649   */
      dup8
        /* "#utility.yul":4636:4660   */
      add
        /* "#utility.yul":4618:4670   */
      tag_582
      jump	// in
    tag_628:
        /* "#utility.yul":4608:4670   */
      swap2
      pop
      pop
        /* "#utility.yul":4059:4676   */
      swap3
      pop
      swap3
      pop
      swap3
      jump	// out
        /* "#utility.yul":4902:5058   */
    tag_583:
        /* "#utility.yul":4968:4988   */
      dup1
      calldataload
        /* "#utility.yul":5028:5032   */
      0xff
        /* "#utility.yul":5017:5033   */
      dup2
      and
        /* "#utility.yul":5007:5034   */
      dup2
      eq
        /* "#utility.yul":4997:5052   */
      tag_596
      jumpi
        /* "#utility.yul":5048:5049   */
      0x00
        /* "#utility.yul":5045:5046   */
      dup1
        /* "#utility.yul":5038:5050   */
      revert
        /* "#utility.yul":5063:5594   */
    tag_134:
        /* "#utility.yul":5165:5171   */
      0x00
        /* "#utility.yul":5173:5179   */
      dup1
        /* "#utility.yul":5181:5187   */
      0x00
        /* "#utility.yul":5189:5195   */
      dup1
        /* "#utility.yul":5197:5203   */
      0x00
        /* "#utility.yul":5205:5211   */
      dup1
        /* "#utility.yul":5258:5261   */
      0xc0
        /* "#utility.yul":5246:5255   */
      dup8
        /* "#utility.yul":5237:5244   */
      dup10
        /* "#utility.yul":5233:5256   */
      sub
        /* "#utility.yul":5229:5262   */
      slt
        /* "#utility.yul":5226:5279   */
      iszero
      tag_633
      jumpi
        /* "#utility.yul":5275:5276   */
      0x00
        /* "#utility.yul":5272:5273   */
      dup1
        /* "#utility.yul":5265:5277   */
      revert
        /* "#utility.yul":5226:5279   */
    tag_633:
        /* "#utility.yul":5298:5327   */
      tag_634
        /* "#utility.yul":5317:5326   */
      dup8
        /* "#utility.yul":5298:5327   */
      tag_580
      jump	// in
    tag_634:
        /* "#utility.yul":5288:5327   */
      swap6
      pop
        /* "#utility.yul":5374:5376   */
      0x20
        /* "#utility.yul":5363:5372   */
      dup8
        /* "#utility.yul":5359:5377   */
      add
        /* "#utility.yul":5346:5378   */
      calldataload
        /* "#utility.yul":5336:5378   */
      swap5
      pop
        /* "#utility.yul":5425:5427   */
      0x40
        /* "#utility.yul":5414:5423   */
      dup8
        /* "#utility.yul":5410:5428   */
      add
        /* "#utility.yul":5397:5429   */
      calldataload
        /* "#utility.yul":5387:5429   */
      swap4
      pop
        /* "#utility.yul":5448:5484   */
      tag_635
        /* "#utility.yul":5480:5482   */
      0x60
        /* "#utility.yul":5469:5478   */
      dup9
        /* "#utility.yul":5465:5483   */
      add
        /* "#utility.yul":5448:5484   */
      tag_583
      jump	// in
    tag_635:
        /* "#utility.yul":5438:5484   */
      swap3
      pop
        /* "#utility.yul":5531:5534   */
      0x80
        /* "#utility.yul":5520:5529   */
      dup8
        /* "#utility.yul":5516:5535   */
      add
        /* "#utility.yul":5503:5536   */
      calldataload
        /* "#utility.yul":5493:5536   */
      swap2
      pop
        /* "#utility.yul":5583:5586   */
      0xa0
        /* "#utility.yul":5572:5581   */
      dup8
        /* "#utility.yul":5568:5587   */
      add
        /* "#utility.yul":5555:5588   */
      calldataload
        /* "#utility.yul":5545:5588   */
      swap1
      pop
        /* "#utility.yul":5063:5594   */
      swap3
      swap6
      pop
      swap3
      swap6
      pop
      swap3
      swap6
      jump	// out
        /* "#utility.yul":5599:6205   */
    tag_138:
        /* "#utility.yul":5710:5716   */
      0x00
        /* "#utility.yul":5718:5724   */
      dup1
        /* "#utility.yul":5726:5732   */
      0x00
        /* "#utility.yul":5734:5740   */
      dup1
        /* "#utility.yul":5742:5748   */
      0x00
        /* "#utility.yul":5750:5756   */
      dup1
        /* "#utility.yul":5758:5764   */
      0x00
        /* "#utility.yul":5811:5814   */
      0xe0
        /* "#utility.yul":5799:5808   */
      dup9
        /* "#utility.yul":5790:5797   */
      dup11
        /* "#utility.yul":5786:5809   */
      sub
        /* "#utility.yul":5782:5815   */
      slt
        /* "#utility.yul":5779:5832   */
      iszero
      tag_637
      jumpi
        /* "#utility.yul":5828:5829   */
      0x00
        /* "#utility.yul":5825:5826   */
      dup1
        /* "#utility.yul":5818:5830   */
      revert
        /* "#utility.yul":5779:5832   */
    tag_637:
        /* "#utility.yul":5851:5880   */
      tag_638
        /* "#utility.yul":5870:5879   */
      dup9
        /* "#utility.yul":5851:5880   */
      tag_580
      jump	// in
    tag_638:
        /* "#utility.yul":5841:5880   */
      swap7
      pop
        /* "#utility.yul":5899:5937   */
      tag_639
        /* "#utility.yul":5933:5935   */
      0x20
        /* "#utility.yul":5922:5931   */
      dup10
        /* "#utility.yul":5918:5936   */
      add
        /* "#utility.yul":5899:5937   */
      tag_580
      jump	// in
    tag_639:
        /* "#utility.yul":5889:5937   */
      swap6
      pop
        /* "#utility.yul":5984:5986   */
      0x40
        /* "#utility.yul":5973:5982   */
      dup9
        /* "#utility.yul":5969:5987   */
      add
        /* "#utility.yul":5956:5988   */
      calldataload
        /* "#utility.yul":5946:5988   */
      swap5
      pop
        /* "#utility.yul":6035:6037   */
      0x60
        /* "#utility.yul":6024:6033   */
      dup9
        /* "#utility.yul":6020:6038   */
      add
        /* "#utility.yul":6007:6039   */
      calldataload
        /* "#utility.yul":5997:6039   */
      swap4
      pop
        /* "#utility.yul":6058:6095   */
      tag_640
        /* "#utility.yul":6090:6093   */
      0x80
        /* "#utility.yul":6079:6088   */
      dup10
        /* "#utility.yul":6075:6094   */
      add
        /* "#utility.yul":6058:6095   */
      tag_583
      jump	// in
    tag_640:
        /* "#utility.yul":6048:6095   */
      swap3
      pop
        /* "#utility.yul":6142:6145   */
      0xa0
        /* "#utility.yul":6131:6140   */
      dup9
        /* "#utility.yul":6127:6146   */
      add
        /* "#utility.yul":6114:6147   */
      calldataload
        /* "#utility.yul":6104:6147   */
      swap2
      pop
        /* "#utility.yul":6194:6197   */
      0xc0
        /* "#utility.yul":6183:6192   */
      dup9
        /* "#utility.yul":6179:6198   */
      add
        /* "#utility.yul":6166:6199   */
      calldataload
        /* "#utility.yul":6156:6199   */
      swap1
      pop
        /* "#utility.yul":5599:6205   */
      swap3
      swap6
      swap9
      swap2
      swap5
      swap8
      pop
      swap3
      swap6
      pop
      jump	// out
        /* "#utility.yul":6210:6470   */
    tag_142:
        /* "#utility.yul":6278:6284   */
      0x00
        /* "#utility.yul":6286:6292   */
      dup1
        /* "#utility.yul":6339:6341   */
      0x40
        /* "#utility.yul":6327:6336   */
      dup4
        /* "#utility.yul":6318:6325   */
      dup6
        /* "#utility.yul":6314:6337   */
      sub
        /* "#utility.yul":6310:6342   */
      slt
        /* "#utility.yul":6307:6359   */
      iszero
      tag_642
      jumpi
        /* "#utility.yul":6355:6356   */
      0x00
        /* "#utility.yul":6352:6353   */
      dup1
        /* "#utility.yul":6345:6357   */
      revert
        /* "#utility.yul":6307:6359   */
    tag_642:
        /* "#utility.yul":6378:6407   */
      tag_643
        /* "#utility.yul":6397:6406   */
      dup4
        /* "#utility.yul":6378:6407   */
      tag_580
      jump	// in
    tag_643:
        /* "#utility.yul":6368:6407   */
      swap2
      pop
        /* "#utility.yul":6426:6464   */
      tag_644
        /* "#utility.yul":6460:6462   */
      0x20
        /* "#utility.yul":6449:6458   */
      dup5
        /* "#utility.yul":6445:6463   */
      add
        /* "#utility.yul":6426:6464   */
      tag_580
      jump	// in
    tag_644:
        /* "#utility.yul":6416:6464   */
      swap1
      pop
        /* "#utility.yul":6210:6470   */
      swap3
      pop
      swap3
      swap1
      pop
      jump	// out
        /* "#utility.yul":6475:6825   */
    tag_147:
        /* "#utility.yul":6542:6548   */
      0x00
        /* "#utility.yul":6550:6556   */
      dup1
        /* "#utility.yul":6603:6605   */
      0x40
        /* "#utility.yul":6591:6600   */
      dup4
        /* "#utility.yul":6582:6589   */
      dup6
        /* "#utility.yul":6578:6601   */
      sub
        /* "#utility.yul":6574:6606   */
      slt
        /* "#utility.yul":6571:6623   */
      iszero
      tag_646
      jumpi
        /* "#utility.yul":6619:6620   */
      0x00
        /* "#utility.yul":6616:6617   */
      dup1
        /* "#utility.yul":6609:6621   */
      revert
        /* "#utility.yul":6571:6623   */
    tag_646:
        /* "#utility.yul":6642:6671   */
      tag_647
        /* "#utility.yul":6661:6670   */
      dup4
        /* "#utility.yul":6642:6671   */
      tag_580
      jump	// in
    tag_647:
        /* "#utility.yul":6632:6671   */
      swap2
      pop
        /* "#utility.yul":6721:6723   */
      0x20
        /* "#utility.yul":6710:6719   */
      dup4
        /* "#utility.yul":6706:6724   */
      add
        /* "#utility.yul":6693:6725   */
      calldataload
        /* "#utility.yul":6765:6775   */
      0xffffffff
        /* "#utility.yul":6758:6763   */
      dup2
        /* "#utility.yul":6754:6776   */
      and
        /* "#utility.yul":6747:6752   */
      dup2
        /* "#utility.yul":6744:6777   */
      eq
        /* "#utility.yul":6734:6795   */
      tag_648
      jumpi
        /* "#utility.yul":6791:6792   */
      0x00
        /* "#utility.yul":6788:6789   */
      dup1
        /* "#utility.yul":6781:6793   */
      revert
        /* "#utility.yul":6734:6795   */
    tag_648:
        /* "#utility.yul":6814:6819   */
      dup1
        /* "#utility.yul":6804:6819   */
      swap2
      pop
      pop
        /* "#utility.yul":6475:6825   */
      swap3
      pop
      swap3
      swap1
      pop
      jump	// out
        /* "#utility.yul":7179:7559   */
    tag_160:
        /* "#utility.yul":7258:7259   */
      0x01
        /* "#utility.yul":7254:7266   */
      dup2
      dup2
      shr
      swap1
        /* "#utility.yul":7301:7313   */
      dup3
      and
      dup1
        /* "#utility.yul":7322:7383   */
      tag_651
      jumpi
        /* "#utility.yul":7376:7380   */
      0x7f
        /* "#utility.yul":7368:7374   */
      dup3
        /* "#utility.yul":7364:7381   */
      and
        /* "#utility.yul":7354:7381   */
      swap2
      pop
        /* "#utility.yul":7322:7383   */
    tag_651:
        /* "#utility.yul":7429:7431   */
      0x20
        /* "#utility.yul":7421:7427   */
      dup3
        /* "#utility.yul":7418:7432   */
      lt
        /* "#utility.yul":7398:7416   */
      dup2
        /* "#utility.yul":7395:7433   */
      eq
        /* "#utility.yul":7392:7553   */
      iszero
      tag_413
      jumpi
        /* "#utility.yul":7475:7485   */
      0x4e487b71
        /* "#utility.yul":7470:7473   */
      0xe0
        /* "#utility.yul":7466:7486   */
      shl
        /* "#utility.yul":7463:7464   */
      0x00
        /* "#utility.yul":7456:7487   */
      mstore
        /* "#utility.yul":7510:7514   */
      0x22
        /* "#utility.yul":7507:7508   */
      0x04
        /* "#utility.yul":7500:7515   */
      mstore
        /* "#utility.yul":7538:7542   */
      0x24
        /* "#utility.yul":7535:7536   */
      0x00
        /* "#utility.yul":7528:7543   */
      revert
        /* "#utility.yul":7564:7691   */
    tag_584:
        /* "#utility.yul":7625:7635   */
      0x4e487b71
        /* "#utility.yul":7620:7623   */
      0xe0
        /* "#utility.yul":7616:7636   */
      shl
        /* "#utility.yul":7613:7614   */
      0x00
        /* "#utility.yul":7606:7637   */
      mstore
        /* "#utility.yul":7656:7660   */
      0x11
        /* "#utility.yul":7653:7654   */
      0x04
        /* "#utility.yul":7646:7661   */
      mstore
        /* "#utility.yul":7680:7684   */
      0x24
        /* "#utility.yul":7677:7678   */
      0x00
        /* "#utility.yul":7670:7685   */
      revert
        /* "#utility.yul":7696:7824   */
    tag_186:
        /* "#utility.yul":7736:7739   */
      0x00
        /* "#utility.yul":7767:7768   */
      dup3
        /* "#utility.yul":7763:7769   */
      not
        /* "#utility.yul":7760:7761   */
      dup3
        /* "#utility.yul":7757:7770   */
      gt
        /* "#utility.yul":7754:7793   */
      iszero
      tag_656
      jumpi
        /* "#utility.yul":7773:7791   */
      tag_656
      tag_584
      jump	// in
    tag_656:
      pop
        /* "#utility.yul":7809:7818   */
      add
      swap1
        /* "#utility.yul":7696:7824   */
      jump	// out
        /* "#utility.yul":8803:8928   */
    tag_247:
        /* "#utility.yul":8843:8847   */
      0x00
        /* "#utility.yul":8871:8872   */
      dup3
        /* "#utility.yul":8868:8869   */
      dup3
        /* "#utility.yul":8865:8873   */
      lt
        /* "#utility.yul":8862:8896   */
      iszero
      tag_662
      jumpi
        /* "#utility.yul":8876:8894   */
      tag_662
      tag_584
      jump	// in
    tag_662:
      pop
        /* "#utility.yul":8913:8922   */
      sub
      swap1
        /* "#utility.yul":8803:8928   */
      jump	// out
        /* "#utility.yul":8933:9060   */
    tag_250:
        /* "#utility.yul":8994:9004   */
      0x4e487b71
        /* "#utility.yul":8989:8992   */
      0xe0
        /* "#utility.yul":8985:9005   */
      shl
        /* "#utility.yul":8982:8983   */
      0x00
        /* "#utility.yul":8975:9006   */
      mstore
        /* "#utility.yul":9025:9029   */
      0x32
        /* "#utility.yul":9022:9023   */
      0x04
        /* "#utility.yul":9015:9030   */
      mstore
        /* "#utility.yul":9049:9053   */
      0x24
        /* "#utility.yul":9046:9047   */
      0x00
        /* "#utility.yul":9039:9054   */
      revert
        /* "#utility.yul":14301:14963   */
    tag_364:
      sub(shl(0xa0, 0x01), 0x01)
        /* "#utility.yul":14580:14595   */
      dup7
      dup2
      and
        /* "#utility.yul":14562:14596   */
      dup3
      mstore
        /* "#utility.yul":14632:14647   */
      dup6
      and
        /* "#utility.yul":14627:14629   */
      0x20
        /* "#utility.yul":14612:14630   */
      dup3
      add
        /* "#utility.yul":14605:14648   */
      mstore
        /* "#utility.yul":14679:14681   */
      0x40
        /* "#utility.yul":14664:14682   */
      dup2
      add
        /* "#utility.yul":14657:14691   */
      dup5
      swap1
      mstore
        /* "#utility.yul":14727:14730   */
      0x80
        /* "#utility.yul":14722:14724   */
      0x60
        /* "#utility.yul":14707:14725   */
      dup3
      add
        /* "#utility.yul":14700:14731   */
      dup2
      swap1
      mstore
        /* "#utility.yul":14747:14766   */
      dup2
      add
        /* "#utility.yul":14740:14775   */
      dup3
      swap1
      mstore
        /* "#utility.yul":14505:14509   */
      0x00
        /* "#utility.yul":14768:14774   */
      dup3
        /* "#utility.yul":14818:14824   */
      dup5
        /* "#utility.yul":14542:14545   */
      0xa0
        /* "#utility.yul":14797:14816   */
      dup5
      add
        /* "#utility.yul":14784:14833   */
      calldatacopy
        /* "#utility.yul":14883:14884   */
      0x00
        /* "#utility.yul":14877:14880   */
      0xa0
        /* "#utility.yul":14868:14874   */
      dup5
        /* "#utility.yul":14857:14866   */
      dup5
        /* "#utility.yul":14853:14875   */
      add
        /* "#utility.yul":14849:14881   */
      add
        /* "#utility.yul":14842:14885   */
      mstore
        /* "#utility.yul":14953:14956   */
      0xa0
        /* "#utility.yul":14946:14948   */
      0x1f
        /* "#utility.yul":14942:14949   */
      not
        /* "#utility.yul":14937:14939   */
      0x1f
        /* "#utility.yul":14929:14935   */
      dup6
        /* "#utility.yul":14925:14940   */
      add
        /* "#utility.yul":14921:14950   */
      and
        /* "#utility.yul":14910:14919   */
      dup4
        /* "#utility.yul":14906:14951   */
      add
        /* "#utility.yul":14902:14957   */
      add
        /* "#utility.yul":14894:14957   */
      swap1
      pop
        /* "#utility.yul":14301:14963   */
      swap7
      swap6
      pop
      pop
      pop
      pop
      pop
      pop
      jump	// out
        /* "#utility.yul":14968:15245   */
    tag_368:
        /* "#utility.yul":15035:15041   */
      0x00
        /* "#utility.yul":15088:15090   */
      0x20
        /* "#utility.yul":15076:15085   */
      dup3
        /* "#utility.yul":15067:15074   */
      dup5
        /* "#utility.yul":15063:15086   */
      sub
        /* "#utility.yul":15059:15091   */
      slt
        /* "#utility.yul":15056:15108   */
      iszero
      tag_679
      jumpi
        /* "#utility.yul":15104:15105   */
      0x00
        /* "#utility.yul":15101:15102   */
      dup1
        /* "#utility.yul":15094:15106   */
      revert
        /* "#utility.yul":15056:15108   */
    tag_679:
        /* "#utility.yul":15136:15145   */
      dup2
        /* "#utility.yul":15130:15146   */
      mload
        /* "#utility.yul":15189:15194   */
      dup1
        /* "#utility.yul":15182:15195   */
      iszero
        /* "#utility.yul":15175:15196   */
      iszero
        /* "#utility.yul":15168:15173   */
      dup2
        /* "#utility.yul":15165:15197   */
      eq
        /* "#utility.yul":15155:15215   */
      tag_191
      jumpi
        /* "#utility.yul":15211:15212   */
      0x00
        /* "#utility.yul":15208:15209   */
      dup1
        /* "#utility.yul":15201:15213   */
      revert
        /* "#utility.yul":16199:16606   */
    tag_388:
        /* "#utility.yul":16401:16403   */
      0x20
        /* "#utility.yul":16383:16404   */
      dup1
      dup3
      mstore
        /* "#utility.yul":16440:16442   */
      0x2b
        /* "#utility.yul":16420:16438   */
      swap1
      dup3
      add
        /* "#utility.yul":16413:16443   */
      mstore
        /* "#utility.yul":16479:16513   */
      0x496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069
        /* "#utility.yul":16474:16476   */
      0x40
        /* "#utility.yul":16459:16477   */
      dup3
      add
        /* "#utility.yul":16452:16514   */
      mstore
      shl(0xa8, 0x6e697469616c697a696e67)
        /* "#utility.yul":16545:16547   */
      0x60
        /* "#utility.yul":16530:16548   */
      dup3
      add
        /* "#utility.yul":16523:16564   */
      mstore
        /* "#utility.yul":16596:16599   */
      0x80
        /* "#utility.yul":16581:16600   */
      add
      swap1
        /* "#utility.yul":16199:16606   */
      jump	// out
        /* "#utility.yul":17105:17322   */
    tag_432:
        /* "#utility.yul":17145:17146   */
      0x00
        /* "#utility.yul":17171:17172   */
      dup3
        /* "#utility.yul":17161:17293   */
      tag_686
      jumpi
        /* "#utility.yul":17215:17225   */
      0x4e487b71
        /* "#utility.yul":17210:17213   */
      0xe0
        /* "#utility.yul":17206:17226   */
      shl
        /* "#utility.yul":17203:17204   */
      0x00
        /* "#utility.yul":17196:17227   */
      mstore
        /* "#utility.yul":17250:17254   */
      0x12
        /* "#utility.yul":17247:17248   */
      0x04
        /* "#utility.yul":17240:17255   */
      mstore
        /* "#utility.yul":17278:17282   */
      0x24
        /* "#utility.yul":17275:17276   */
      0x00
        /* "#utility.yul":17268:17283   */
      revert
        /* "#utility.yul":17161:17293   */
    tag_686:
      pop
        /* "#utility.yul":17307:17316   */
      div
      swap1
        /* "#utility.yul":17105:17322   */
      jump	// out
        /* "#utility.yul":18797:18924   */
    tag_484:
        /* "#utility.yul":18858:18868   */
      0x4e487b71
        /* "#utility.yul":18853:18856   */
      0xe0
        /* "#utility.yul":18849:18869   */
      shl
        /* "#utility.yul":18846:18847   */
      0x00
        /* "#utility.yul":18839:18870   */
      mstore
        /* "#utility.yul":18889:18893   */
      0x21
        /* "#utility.yul":18886:18887   */
      0x04
        /* "#utility.yul":18879:18894   */
      mstore
        /* "#utility.yul":18913:18917   */
      0x24
        /* "#utility.yul":18910:18911   */
      0x00
        /* "#utility.yul":18903:18918   */
      revert

    auxdata: 0xa26469706673582212204f97d6f00d19d48797c4da7d24fafeb34e5b7e88a5cb47ec6690252dd6c5696264736f6c634300080a0033
}
